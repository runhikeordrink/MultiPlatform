'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsNFLdb"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsNFLdb
    Inherits Global.System.Data.DataSet
    
    Private tabledrive As driveDataTable
    
    Private tablegame As gameDataTable
    
    Private tablemeta As metaDataTable
    
    Private tableplay As playDataTable
    
    Private tableplay_player As play_playerDataTable
    
    Private tableplayer As playerDataTable
    
    Private tableteam As teamDataTable
    
    Private tablevwPlayersActive As vwPlayersActiveDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("drive")) Is Nothing) Then
                MyBase.Tables.Add(New driveDataTable(ds.Tables("drive")))
            End If
            If (Not (ds.Tables("game")) Is Nothing) Then
                MyBase.Tables.Add(New gameDataTable(ds.Tables("game")))
            End If
            If (Not (ds.Tables("meta")) Is Nothing) Then
                MyBase.Tables.Add(New metaDataTable(ds.Tables("meta")))
            End If
            If (Not (ds.Tables("play")) Is Nothing) Then
                MyBase.Tables.Add(New playDataTable(ds.Tables("play")))
            End If
            If (Not (ds.Tables("play_player")) Is Nothing) Then
                MyBase.Tables.Add(New play_playerDataTable(ds.Tables("play_player")))
            End If
            If (Not (ds.Tables("player")) Is Nothing) Then
                MyBase.Tables.Add(New playerDataTable(ds.Tables("player")))
            End If
            If (Not (ds.Tables("team")) Is Nothing) Then
                MyBase.Tables.Add(New teamDataTable(ds.Tables("team")))
            End If
            If (Not (ds.Tables("vwPlayersActive")) Is Nothing) Then
                MyBase.Tables.Add(New vwPlayersActiveDataTable(ds.Tables("vwPlayersActive")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property drive() As driveDataTable
        Get
            Return Me.tabledrive
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property game() As gameDataTable
        Get
            Return Me.tablegame
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property meta() As metaDataTable
        Get
            Return Me.tablemeta
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property play() As playDataTable
        Get
            Return Me.tableplay
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property play_player() As play_playerDataTable
        Get
            Return Me.tableplay_player
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property player() As playerDataTable
        Get
            Return Me.tableplayer
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property team() As teamDataTable
        Get
            Return Me.tableteam
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vwPlayersActive() As vwPlayersActiveDataTable
        Get
            Return Me.tablevwPlayersActive
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsNFLdb = CType(MyBase.Clone,dsNFLdb)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("drive")) Is Nothing) Then
                MyBase.Tables.Add(New driveDataTable(ds.Tables("drive")))
            End If
            If (Not (ds.Tables("game")) Is Nothing) Then
                MyBase.Tables.Add(New gameDataTable(ds.Tables("game")))
            End If
            If (Not (ds.Tables("meta")) Is Nothing) Then
                MyBase.Tables.Add(New metaDataTable(ds.Tables("meta")))
            End If
            If (Not (ds.Tables("play")) Is Nothing) Then
                MyBase.Tables.Add(New playDataTable(ds.Tables("play")))
            End If
            If (Not (ds.Tables("play_player")) Is Nothing) Then
                MyBase.Tables.Add(New play_playerDataTable(ds.Tables("play_player")))
            End If
            If (Not (ds.Tables("player")) Is Nothing) Then
                MyBase.Tables.Add(New playerDataTable(ds.Tables("player")))
            End If
            If (Not (ds.Tables("team")) Is Nothing) Then
                MyBase.Tables.Add(New teamDataTable(ds.Tables("team")))
            End If
            If (Not (ds.Tables("vwPlayersActive")) Is Nothing) Then
                MyBase.Tables.Add(New vwPlayersActiveDataTable(ds.Tables("vwPlayersActive")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledrive = CType(MyBase.Tables("drive"),driveDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledrive) Is Nothing) Then
                Me.tabledrive.InitVars
            End If
        End If
        Me.tablegame = CType(MyBase.Tables("game"),gameDataTable)
        If (initTable = true) Then
            If (Not (Me.tablegame) Is Nothing) Then
                Me.tablegame.InitVars
            End If
        End If
        Me.tablemeta = CType(MyBase.Tables("meta"),metaDataTable)
        If (initTable = true) Then
            If (Not (Me.tablemeta) Is Nothing) Then
                Me.tablemeta.InitVars
            End If
        End If
        Me.tableplay = CType(MyBase.Tables("play"),playDataTable)
        If (initTable = true) Then
            If (Not (Me.tableplay) Is Nothing) Then
                Me.tableplay.InitVars
            End If
        End If
        Me.tableplay_player = CType(MyBase.Tables("play_player"),play_playerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableplay_player) Is Nothing) Then
                Me.tableplay_player.InitVars
            End If
        End If
        Me.tableplayer = CType(MyBase.Tables("player"),playerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableplayer) Is Nothing) Then
                Me.tableplayer.InitVars
            End If
        End If
        Me.tableteam = CType(MyBase.Tables("team"),teamDataTable)
        If (initTable = true) Then
            If (Not (Me.tableteam) Is Nothing) Then
                Me.tableteam.InitVars
            End If
        End If
        Me.tablevwPlayersActive = CType(MyBase.Tables("vwPlayersActive"),vwPlayersActiveDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevwPlayersActive) Is Nothing) Then
                Me.tablevwPlayersActive.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsNFLdb"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsNFLdb.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledrive = New driveDataTable()
        MyBase.Tables.Add(Me.tabledrive)
        Me.tablegame = New gameDataTable()
        MyBase.Tables.Add(Me.tablegame)
        Me.tablemeta = New metaDataTable()
        MyBase.Tables.Add(Me.tablemeta)
        Me.tableplay = New playDataTable()
        MyBase.Tables.Add(Me.tableplay)
        Me.tableplay_player = New play_playerDataTable()
        MyBase.Tables.Add(Me.tableplay_player)
        Me.tableplayer = New playerDataTable()
        MyBase.Tables.Add(Me.tableplayer)
        Me.tableteam = New teamDataTable()
        MyBase.Tables.Add(Me.tableteam)
        Me.tablevwPlayersActive = New vwPlayersActiveDataTable()
        MyBase.Tables.Add(Me.tablevwPlayersActive)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedrive() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializegame() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializemeta() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeplay() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeplay_player() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeplayer() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeteam() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializevwPlayersActive() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsNFLdb = New dsNFLdb()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub driveRowChangeEventHandler(ByVal sender As Object, ByVal e As driveRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub gameRowChangeEventHandler(ByVal sender As Object, ByVal e As gameRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub metaRowChangeEventHandler(ByVal sender As Object, ByVal e As metaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub playRowChangeEventHandler(ByVal sender As Object, ByVal e As playRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub play_playerRowChangeEventHandler(ByVal sender As Object, ByVal e As play_playerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub playerRowChangeEventHandler(ByVal sender As Object, ByVal e As playerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub teamRowChangeEventHandler(ByVal sender As Object, ByVal e As teamRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub vwPlayersActiveRowChangeEventHandler(ByVal sender As Object, ByVal e As vwPlayersActiveRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class driveDataTable
        Inherits Global.System.Data.TypedTableBase(Of driveRow)
        
        Private columngsis_id As Global.System.Data.DataColumn
        
        Private columndrive_id As Global.System.Data.DataColumn
        
        Private columnstart_field As Global.System.Data.DataColumn
        
        Private columnstart_time As Global.System.Data.DataColumn
        
        Private columnend_field As Global.System.Data.DataColumn
        
        Private columnend_time As Global.System.Data.DataColumn
        
        Private columnpos_team As Global.System.Data.DataColumn
        
        Private columnpos_time As Global.System.Data.DataColumn
        
        Private columnfirst_downs As Global.System.Data.DataColumn
        
        Private columnresult As Global.System.Data.DataColumn
        
        Private columnpenalty_yards As Global.System.Data.DataColumn
        
        Private columnyards_gained As Global.System.Data.DataColumn
        
        Private columnplay_count As Global.System.Data.DataColumn
        
        Private columntime_inserted As Global.System.Data.DataColumn
        
        Private columntime_updated As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "drive"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property gsis_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngsis_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property drive_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndrive_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property start_fieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstart_field
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property start_timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstart_time
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property end_fieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnend_field
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property end_timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnend_time
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pos_teamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpos_team
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pos_timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpos_time
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property first_downsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfirst_downs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property resultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property penalty_yardsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpenalty_yards
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property yards_gainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyards_gained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property play_countColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplay_count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_insertedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_inserted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_updatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_updated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As driveRow
            Get
                Return CType(Me.Rows(index),driveRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event driveRowChanging As driveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event driveRowChanged As driveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event driveRowDeleting As driveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event driveRowDeleted As driveRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddriveRow(ByVal row As driveRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddriveRow(ByVal gsis_id As String, ByVal drive_id As Short, ByVal start_field As String, ByVal start_time As String, ByVal end_field As String, ByVal end_time As String, ByVal pos_team As String, ByVal pos_time As String, ByVal first_downs As Short, ByVal result As String, ByVal penalty_yards As Short, ByVal yards_gained As Short, ByVal play_count As Short, ByVal time_inserted As Date, ByVal time_updated As Date) As driveRow
            Dim rowdriveRow As driveRow = CType(Me.NewRow,driveRow)
            Dim columnValuesArray() As Object = New Object() {gsis_id, drive_id, start_field, start_time, end_field, end_time, pos_team, pos_time, first_downs, result, penalty_yards, yards_gained, play_count, time_inserted, time_updated}
            rowdriveRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdriveRow)
            Return rowdriveRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBygsis_iddrive_id(ByVal gsis_id As String, ByVal drive_id As Short) As driveRow
            Return CType(Me.Rows.Find(New Object() {gsis_id, drive_id}),driveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As driveDataTable = CType(MyBase.Clone,driveDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New driveDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columngsis_id = MyBase.Columns("gsis_id")
            Me.columndrive_id = MyBase.Columns("drive_id")
            Me.columnstart_field = MyBase.Columns("start_field")
            Me.columnstart_time = MyBase.Columns("start_time")
            Me.columnend_field = MyBase.Columns("end_field")
            Me.columnend_time = MyBase.Columns("end_time")
            Me.columnpos_team = MyBase.Columns("pos_team")
            Me.columnpos_time = MyBase.Columns("pos_time")
            Me.columnfirst_downs = MyBase.Columns("first_downs")
            Me.columnresult = MyBase.Columns("result")
            Me.columnpenalty_yards = MyBase.Columns("penalty_yards")
            Me.columnyards_gained = MyBase.Columns("yards_gained")
            Me.columnplay_count = MyBase.Columns("play_count")
            Me.columntime_inserted = MyBase.Columns("time_inserted")
            Me.columntime_updated = MyBase.Columns("time_updated")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columngsis_id = New Global.System.Data.DataColumn("gsis_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngsis_id)
            Me.columndrive_id = New Global.System.Data.DataColumn("drive_id", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndrive_id)
            Me.columnstart_field = New Global.System.Data.DataColumn("start_field", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstart_field)
            Me.columnstart_time = New Global.System.Data.DataColumn("start_time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstart_time)
            Me.columnend_field = New Global.System.Data.DataColumn("end_field", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnend_field)
            Me.columnend_time = New Global.System.Data.DataColumn("end_time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnend_time)
            Me.columnpos_team = New Global.System.Data.DataColumn("pos_team", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpos_team)
            Me.columnpos_time = New Global.System.Data.DataColumn("pos_time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpos_time)
            Me.columnfirst_downs = New Global.System.Data.DataColumn("first_downs", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfirst_downs)
            Me.columnresult = New Global.System.Data.DataColumn("result", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresult)
            Me.columnpenalty_yards = New Global.System.Data.DataColumn("penalty_yards", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpenalty_yards)
            Me.columnyards_gained = New Global.System.Data.DataColumn("yards_gained", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyards_gained)
            Me.columnplay_count = New Global.System.Data.DataColumn("play_count", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplay_count)
            Me.columntime_inserted = New Global.System.Data.DataColumn("time_inserted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_inserted)
            Me.columntime_updated = New Global.System.Data.DataColumn("time_updated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_updated)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columngsis_id, Me.columndrive_id}, true))
            Me.columngsis_id.AllowDBNull = false
            Me.columngsis_id.MaxLength = 20
            Me.columndrive_id.AllowDBNull = false
            Me.columnstart_field.MaxLength = 255
            Me.columnstart_time.AllowDBNull = false
            Me.columnstart_time.MaxLength = 255
            Me.columnend_field.MaxLength = 255
            Me.columnend_time.AllowDBNull = false
            Me.columnend_time.MaxLength = 255
            Me.columnpos_team.AllowDBNull = false
            Me.columnpos_team.MaxLength = 6
            Me.columnpos_time.MaxLength = 255
            Me.columnfirst_downs.AllowDBNull = false
            Me.columnresult.MaxLength = 8190
            Me.columnpenalty_yards.AllowDBNull = false
            Me.columnyards_gained.AllowDBNull = false
            Me.columnplay_count.AllowDBNull = false
            Me.columntime_inserted.AllowDBNull = false
            Me.columntime_updated.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdriveRow() As driveRow
            Return CType(Me.NewRow,driveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New driveRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(driveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.driveRowChangedEvent) Is Nothing) Then
                RaiseEvent driveRowChanged(Me, New driveRowChangeEvent(CType(e.Row,driveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.driveRowChangingEvent) Is Nothing) Then
                RaiseEvent driveRowChanging(Me, New driveRowChangeEvent(CType(e.Row,driveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.driveRowDeletedEvent) Is Nothing) Then
                RaiseEvent driveRowDeleted(Me, New driveRowChangeEvent(CType(e.Row,driveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.driveRowDeletingEvent) Is Nothing) Then
                RaiseEvent driveRowDeleting(Me, New driveRowChangeEvent(CType(e.Row,driveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedriveRow(ByVal row As driveRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNFLdb = New dsNFLdb()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "driveDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class gameDataTable
        Inherits Global.System.Data.TypedTableBase(Of gameRow)
        
        Private columngsis_id As Global.System.Data.DataColumn
        
        Private columngamekey As Global.System.Data.DataColumn
        
        Private columnstart_time As Global.System.Data.DataColumn
        
        Private columnweek As Global.System.Data.DataColumn
        
        Private columnday_of_week As Global.System.Data.DataColumn
        
        Private columnseason_year As Global.System.Data.DataColumn
        
        Private columnseason_type As Global.System.Data.DataColumn
        
        Private columnfinished As Global.System.Data.DataColumn
        
        Private columnhome_team As Global.System.Data.DataColumn
        
        Private columnhome_score As Global.System.Data.DataColumn
        
        Private columnhome_score_q1 As Global.System.Data.DataColumn
        
        Private columnhome_score_q2 As Global.System.Data.DataColumn
        
        Private columnhome_score_q3 As Global.System.Data.DataColumn
        
        Private columnhome_score_q4 As Global.System.Data.DataColumn
        
        Private columnhome_score_q5 As Global.System.Data.DataColumn
        
        Private columnhome_turnovers As Global.System.Data.DataColumn
        
        Private columnaway_team As Global.System.Data.DataColumn
        
        Private columnaway_score As Global.System.Data.DataColumn
        
        Private columnaway_score_q1 As Global.System.Data.DataColumn
        
        Private columnaway_score_q2 As Global.System.Data.DataColumn
        
        Private columnaway_score_q3 As Global.System.Data.DataColumn
        
        Private columnaway_score_q4 As Global.System.Data.DataColumn
        
        Private columnaway_score_q5 As Global.System.Data.DataColumn
        
        Private columnaway_turnovers As Global.System.Data.DataColumn
        
        Private columntime_inserted As Global.System.Data.DataColumn
        
        Private columntime_updated As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "game"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property gsis_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngsis_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property gamekeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngamekey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property start_timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstart_time
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property weekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnweek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property day_of_weekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnday_of_week
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property season_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseason_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property season_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseason_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property finishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfinished
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property home_teamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhome_team
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property home_scoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhome_score
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property home_score_q1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnhome_score_q1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property home_score_q2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnhome_score_q2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property home_score_q3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnhome_score_q3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property home_score_q4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnhome_score_q4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property home_score_q5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnhome_score_q5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property home_turnoversColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhome_turnovers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property away_teamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaway_team
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property away_scoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaway_score
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property away_score_q1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaway_score_q1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property away_score_q2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaway_score_q2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property away_score_q3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaway_score_q3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property away_score_q4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaway_score_q4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property away_score_q5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaway_score_q5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property away_turnoversColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaway_turnovers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_insertedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_inserted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_updatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_updated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As gameRow
            Get
                Return CType(Me.Rows(index),gameRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event gameRowChanging As gameRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event gameRowChanged As gameRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event gameRowDeleting As gameRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event gameRowDeleted As gameRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddgameRow(ByVal row As gameRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddgameRow( _
                    ByVal gsis_id As String,  _
                    ByVal gamekey As String,  _
                    ByVal start_time As Date,  _
                    ByVal week As Short,  _
                    ByVal day_of_week As String,  _
                    ByVal season_year As Short,  _
                    ByVal season_type As String,  _
                    ByVal finished As String,  _
                    ByVal home_team As String,  _
                    ByVal home_score As Short,  _
                    ByVal home_score_q1 As Short,  _
                    ByVal home_score_q2 As Short,  _
                    ByVal home_score_q3 As Short,  _
                    ByVal home_score_q4 As Short,  _
                    ByVal home_score_q5 As Short,  _
                    ByVal home_turnovers As Short,  _
                    ByVal away_team As String,  _
                    ByVal away_score As Short,  _
                    ByVal away_score_q1 As Short,  _
                    ByVal away_score_q2 As Short,  _
                    ByVal away_score_q3 As Short,  _
                    ByVal away_score_q4 As Short,  _
                    ByVal away_score_q5 As Short,  _
                    ByVal away_turnovers As Short,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date) As gameRow
            Dim rowgameRow As gameRow = CType(Me.NewRow,gameRow)
            Dim columnValuesArray() As Object = New Object() {gsis_id, gamekey, start_time, week, day_of_week, season_year, season_type, finished, home_team, home_score, home_score_q1, home_score_q2, home_score_q3, home_score_q4, home_score_q5, home_turnovers, away_team, away_score, away_score_q1, away_score_q2, away_score_q3, away_score_q4, away_score_q5, away_turnovers, time_inserted, time_updated}
            rowgameRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowgameRow)
            Return rowgameRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBygsis_id(ByVal gsis_id As String) As gameRow
            Return CType(Me.Rows.Find(New Object() {gsis_id}),gameRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As gameDataTable = CType(MyBase.Clone,gameDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New gameDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columngsis_id = MyBase.Columns("gsis_id")
            Me.columngamekey = MyBase.Columns("gamekey")
            Me.columnstart_time = MyBase.Columns("start_time")
            Me.columnweek = MyBase.Columns("week")
            Me.columnday_of_week = MyBase.Columns("day_of_week")
            Me.columnseason_year = MyBase.Columns("season_year")
            Me.columnseason_type = MyBase.Columns("season_type")
            Me.columnfinished = MyBase.Columns("finished")
            Me.columnhome_team = MyBase.Columns("home_team")
            Me.columnhome_score = MyBase.Columns("home_score")
            Me.columnhome_score_q1 = MyBase.Columns("home_score_q1")
            Me.columnhome_score_q2 = MyBase.Columns("home_score_q2")
            Me.columnhome_score_q3 = MyBase.Columns("home_score_q3")
            Me.columnhome_score_q4 = MyBase.Columns("home_score_q4")
            Me.columnhome_score_q5 = MyBase.Columns("home_score_q5")
            Me.columnhome_turnovers = MyBase.Columns("home_turnovers")
            Me.columnaway_team = MyBase.Columns("away_team")
            Me.columnaway_score = MyBase.Columns("away_score")
            Me.columnaway_score_q1 = MyBase.Columns("away_score_q1")
            Me.columnaway_score_q2 = MyBase.Columns("away_score_q2")
            Me.columnaway_score_q3 = MyBase.Columns("away_score_q3")
            Me.columnaway_score_q4 = MyBase.Columns("away_score_q4")
            Me.columnaway_score_q5 = MyBase.Columns("away_score_q5")
            Me.columnaway_turnovers = MyBase.Columns("away_turnovers")
            Me.columntime_inserted = MyBase.Columns("time_inserted")
            Me.columntime_updated = MyBase.Columns("time_updated")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columngsis_id = New Global.System.Data.DataColumn("gsis_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngsis_id)
            Me.columngamekey = New Global.System.Data.DataColumn("gamekey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngamekey)
            Me.columnstart_time = New Global.System.Data.DataColumn("start_time", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstart_time)
            Me.columnweek = New Global.System.Data.DataColumn("week", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnweek)
            Me.columnday_of_week = New Global.System.Data.DataColumn("day_of_week", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnday_of_week)
            Me.columnseason_year = New Global.System.Data.DataColumn("season_year", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseason_year)
            Me.columnseason_type = New Global.System.Data.DataColumn("season_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseason_type)
            Me.columnfinished = New Global.System.Data.DataColumn("finished", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfinished)
            Me.columnhome_team = New Global.System.Data.DataColumn("home_team", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhome_team)
            Me.columnhome_score = New Global.System.Data.DataColumn("home_score", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhome_score)
            Me.columnhome_score_q1 = New Global.System.Data.DataColumn("home_score_q1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhome_score_q1)
            Me.columnhome_score_q2 = New Global.System.Data.DataColumn("home_score_q2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhome_score_q2)
            Me.columnhome_score_q3 = New Global.System.Data.DataColumn("home_score_q3", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhome_score_q3)
            Me.columnhome_score_q4 = New Global.System.Data.DataColumn("home_score_q4", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhome_score_q4)
            Me.columnhome_score_q5 = New Global.System.Data.DataColumn("home_score_q5", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhome_score_q5)
            Me.columnhome_turnovers = New Global.System.Data.DataColumn("home_turnovers", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhome_turnovers)
            Me.columnaway_team = New Global.System.Data.DataColumn("away_team", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaway_team)
            Me.columnaway_score = New Global.System.Data.DataColumn("away_score", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaway_score)
            Me.columnaway_score_q1 = New Global.System.Data.DataColumn("away_score_q1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaway_score_q1)
            Me.columnaway_score_q2 = New Global.System.Data.DataColumn("away_score_q2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaway_score_q2)
            Me.columnaway_score_q3 = New Global.System.Data.DataColumn("away_score_q3", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaway_score_q3)
            Me.columnaway_score_q4 = New Global.System.Data.DataColumn("away_score_q4", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaway_score_q4)
            Me.columnaway_score_q5 = New Global.System.Data.DataColumn("away_score_q5", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaway_score_q5)
            Me.columnaway_turnovers = New Global.System.Data.DataColumn("away_turnovers", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaway_turnovers)
            Me.columntime_inserted = New Global.System.Data.DataColumn("time_inserted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_inserted)
            Me.columntime_updated = New Global.System.Data.DataColumn("time_updated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_updated)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columngsis_id}, true))
            Me.columngsis_id.AllowDBNull = false
            Me.columngsis_id.Unique = true
            Me.columngsis_id.MaxLength = 20
            Me.columngamekey.MaxLength = 10
            Me.columnstart_time.AllowDBNull = false
            Me.columnweek.AllowDBNull = false
            Me.columnday_of_week.AllowDBNull = false
            Me.columnday_of_week.MaxLength = 255
            Me.columnseason_year.AllowDBNull = false
            Me.columnseason_type.AllowDBNull = false
            Me.columnseason_type.MaxLength = 255
            Me.columnfinished.AllowDBNull = false
            Me.columnfinished.MaxLength = 5
            Me.columnhome_team.AllowDBNull = false
            Me.columnhome_team.MaxLength = 6
            Me.columnhome_score.AllowDBNull = false
            Me.columnhome_turnovers.AllowDBNull = false
            Me.columnaway_team.AllowDBNull = false
            Me.columnaway_team.MaxLength = 6
            Me.columnaway_score.AllowDBNull = false
            Me.columnaway_turnovers.AllowDBNull = false
            Me.columntime_inserted.AllowDBNull = false
            Me.columntime_updated.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewgameRow() As gameRow
            Return CType(Me.NewRow,gameRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New gameRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(gameRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.gameRowChangedEvent) Is Nothing) Then
                RaiseEvent gameRowChanged(Me, New gameRowChangeEvent(CType(e.Row,gameRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.gameRowChangingEvent) Is Nothing) Then
                RaiseEvent gameRowChanging(Me, New gameRowChangeEvent(CType(e.Row,gameRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.gameRowDeletedEvent) Is Nothing) Then
                RaiseEvent gameRowDeleted(Me, New gameRowChangeEvent(CType(e.Row,gameRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.gameRowDeletingEvent) Is Nothing) Then
                RaiseEvent gameRowDeleting(Me, New gameRowChangeEvent(CType(e.Row,gameRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovegameRow(ByVal row As gameRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNFLdb = New dsNFLdb()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "gameDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class metaDataTable
        Inherits Global.System.Data.TypedTableBase(Of metaRow)
        
        Private columnversion As Global.System.Data.DataColumn
        
        Private columnlast_roster_download As Global.System.Data.DataColumn
        
        Private columnseason_type As Global.System.Data.DataColumn
        
        Private columnseason_year As Global.System.Data.DataColumn
        
        Private columnweek As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "meta"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property versionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnversion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property last_roster_downloadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_roster_download
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property season_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseason_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property season_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseason_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property weekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnweek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As metaRow
            Get
                Return CType(Me.Rows(index),metaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event metaRowChanging As metaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event metaRowChanged As metaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event metaRowDeleting As metaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event metaRowDeleted As metaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddmetaRow(ByVal row As metaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddmetaRow(ByVal version As Short, ByVal last_roster_download As Date, ByVal season_type As String, ByVal season_year As Short, ByVal week As Short) As metaRow
            Dim rowmetaRow As metaRow = CType(Me.NewRow,metaRow)
            Dim columnValuesArray() As Object = New Object() {version, last_roster_download, season_type, season_year, week}
            rowmetaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowmetaRow)
            Return rowmetaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As metaDataTable = CType(MyBase.Clone,metaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New metaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnversion = MyBase.Columns("version")
            Me.columnlast_roster_download = MyBase.Columns("last_roster_download")
            Me.columnseason_type = MyBase.Columns("season_type")
            Me.columnseason_year = MyBase.Columns("season_year")
            Me.columnweek = MyBase.Columns("week")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnversion = New Global.System.Data.DataColumn("version", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnversion)
            Me.columnlast_roster_download = New Global.System.Data.DataColumn("last_roster_download", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_roster_download)
            Me.columnseason_type = New Global.System.Data.DataColumn("season_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseason_type)
            Me.columnseason_year = New Global.System.Data.DataColumn("season_year", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseason_year)
            Me.columnweek = New Global.System.Data.DataColumn("week", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnweek)
            Me.columnlast_roster_download.AllowDBNull = false
            Me.columnseason_type.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewmetaRow() As metaRow
            Return CType(Me.NewRow,metaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New metaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(metaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.metaRowChangedEvent) Is Nothing) Then
                RaiseEvent metaRowChanged(Me, New metaRowChangeEvent(CType(e.Row,metaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.metaRowChangingEvent) Is Nothing) Then
                RaiseEvent metaRowChanging(Me, New metaRowChangeEvent(CType(e.Row,metaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.metaRowDeletedEvent) Is Nothing) Then
                RaiseEvent metaRowDeleted(Me, New metaRowChangeEvent(CType(e.Row,metaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.metaRowDeletingEvent) Is Nothing) Then
                RaiseEvent metaRowDeleting(Me, New metaRowChangeEvent(CType(e.Row,metaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovemetaRow(ByVal row As metaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNFLdb = New dsNFLdb()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "metaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class playDataTable
        Inherits Global.System.Data.TypedTableBase(Of playRow)
        
        Private columngsis_id As Global.System.Data.DataColumn
        
        Private columndrive_id As Global.System.Data.DataColumn
        
        Private columnplay_id As Global.System.Data.DataColumn
        
        Private columntime As Global.System.Data.DataColumn
        
        Private columnpos_team As Global.System.Data.DataColumn
        
        Private columnyardline As Global.System.Data.DataColumn
        
        Private columndown As Global.System.Data.DataColumn
        
        Private columnyards_to_go As Global.System.Data.DataColumn
        
        Private columndescription As Global.System.Data.DataColumn
        
        Private columnnote As Global.System.Data.DataColumn
        
        Private columntime_inserted As Global.System.Data.DataColumn
        
        Private columntime_updated As Global.System.Data.DataColumn
        
        Private columnfirst_down As Global.System.Data.DataColumn
        
        Private columnfourth_down_att As Global.System.Data.DataColumn
        
        Private columnfourth_down_conv As Global.System.Data.DataColumn
        
        Private columnfourth_down_failed As Global.System.Data.DataColumn
        
        Private columnpassing_first_down As Global.System.Data.DataColumn
        
        Private columnpenalty As Global.System.Data.DataColumn
        
        Private columnpenalty_first_down As Global.System.Data.DataColumn
        
        Private columnpenalty_yds As Global.System.Data.DataColumn
        
        Private columnrushing_first_down As Global.System.Data.DataColumn
        
        Private columnthird_down_att As Global.System.Data.DataColumn
        
        Private columnthird_down_conv As Global.System.Data.DataColumn
        
        Private columnthird_down_failed As Global.System.Data.DataColumn
        
        Private columntimeout As Global.System.Data.DataColumn
        
        Private columnxp_aborted As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "play"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property gsis_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngsis_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property drive_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndrive_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property play_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplay_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pos_teamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpos_team
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property yardlineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyardline
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property downColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndown
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property yards_to_goColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyards_to_go
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property descriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_insertedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_inserted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_updatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_updated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property first_downColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfirst_down
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fourth_down_attColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfourth_down_att
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fourth_down_convColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfourth_down_conv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fourth_down_failedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfourth_down_failed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_first_downColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_first_down
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property penaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property penalty_first_downColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpenalty_first_down
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property penalty_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpenalty_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_first_downColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_first_down
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property third_down_attColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthird_down_att
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property third_down_convColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthird_down_conv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property third_down_failedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthird_down_failed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timeoutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimeout
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xp_abortedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxp_aborted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As playRow
            Get
                Return CType(Me.Rows(index),playRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event playRowChanging As playRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event playRowChanged As playRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event playRowDeleting As playRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event playRowDeleted As playRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddplayRow(ByVal row As playRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddplayRow( _
                    ByVal gsis_id As String,  _
                    ByVal drive_id As Short,  _
                    ByVal play_id As Short,  _
                    ByVal time As String,  _
                    ByVal pos_team As String,  _
                    ByVal yardline As String,  _
                    ByVal down As Short,  _
                    ByVal yards_to_go As Short,  _
                    ByVal description As String,  _
                    ByVal note As String,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date,  _
                    ByVal first_down As Short,  _
                    ByVal fourth_down_att As Short,  _
                    ByVal fourth_down_conv As Short,  _
                    ByVal fourth_down_failed As Short,  _
                    ByVal passing_first_down As Short,  _
                    ByVal penalty As Short,  _
                    ByVal penalty_first_down As Short,  _
                    ByVal penalty_yds As Short,  _
                    ByVal rushing_first_down As Short,  _
                    ByVal third_down_att As Short,  _
                    ByVal third_down_conv As Short,  _
                    ByVal third_down_failed As Short,  _
                    ByVal timeout As Short,  _
                    ByVal xp_aborted As Short) As playRow
            Dim rowplayRow As playRow = CType(Me.NewRow,playRow)
            Dim columnValuesArray() As Object = New Object() {gsis_id, drive_id, play_id, time, pos_team, yardline, down, yards_to_go, description, note, time_inserted, time_updated, first_down, fourth_down_att, fourth_down_conv, fourth_down_failed, passing_first_down, penalty, penalty_first_down, penalty_yds, rushing_first_down, third_down_att, third_down_conv, third_down_failed, timeout, xp_aborted}
            rowplayRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowplayRow)
            Return rowplayRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBygsis_iddrive_idplay_id(ByVal gsis_id As String, ByVal drive_id As Short, ByVal play_id As Short) As playRow
            Return CType(Me.Rows.Find(New Object() {gsis_id, drive_id, play_id}),playRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As playDataTable = CType(MyBase.Clone,playDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New playDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columngsis_id = MyBase.Columns("gsis_id")
            Me.columndrive_id = MyBase.Columns("drive_id")
            Me.columnplay_id = MyBase.Columns("play_id")
            Me.columntime = MyBase.Columns("time")
            Me.columnpos_team = MyBase.Columns("pos_team")
            Me.columnyardline = MyBase.Columns("yardline")
            Me.columndown = MyBase.Columns("down")
            Me.columnyards_to_go = MyBase.Columns("yards_to_go")
            Me.columndescription = MyBase.Columns("description")
            Me.columnnote = MyBase.Columns("note")
            Me.columntime_inserted = MyBase.Columns("time_inserted")
            Me.columntime_updated = MyBase.Columns("time_updated")
            Me.columnfirst_down = MyBase.Columns("first_down")
            Me.columnfourth_down_att = MyBase.Columns("fourth_down_att")
            Me.columnfourth_down_conv = MyBase.Columns("fourth_down_conv")
            Me.columnfourth_down_failed = MyBase.Columns("fourth_down_failed")
            Me.columnpassing_first_down = MyBase.Columns("passing_first_down")
            Me.columnpenalty = MyBase.Columns("penalty")
            Me.columnpenalty_first_down = MyBase.Columns("penalty_first_down")
            Me.columnpenalty_yds = MyBase.Columns("penalty_yds")
            Me.columnrushing_first_down = MyBase.Columns("rushing_first_down")
            Me.columnthird_down_att = MyBase.Columns("third_down_att")
            Me.columnthird_down_conv = MyBase.Columns("third_down_conv")
            Me.columnthird_down_failed = MyBase.Columns("third_down_failed")
            Me.columntimeout = MyBase.Columns("timeout")
            Me.columnxp_aborted = MyBase.Columns("xp_aborted")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columngsis_id = New Global.System.Data.DataColumn("gsis_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngsis_id)
            Me.columndrive_id = New Global.System.Data.DataColumn("drive_id", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndrive_id)
            Me.columnplay_id = New Global.System.Data.DataColumn("play_id", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplay_id)
            Me.columntime = New Global.System.Data.DataColumn("time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime)
            Me.columnpos_team = New Global.System.Data.DataColumn("pos_team", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpos_team)
            Me.columnyardline = New Global.System.Data.DataColumn("yardline", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyardline)
            Me.columndown = New Global.System.Data.DataColumn("down", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndown)
            Me.columnyards_to_go = New Global.System.Data.DataColumn("yards_to_go", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyards_to_go)
            Me.columndescription = New Global.System.Data.DataColumn("description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescription)
            Me.columnnote = New Global.System.Data.DataColumn("note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnote)
            Me.columntime_inserted = New Global.System.Data.DataColumn("time_inserted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_inserted)
            Me.columntime_updated = New Global.System.Data.DataColumn("time_updated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_updated)
            Me.columnfirst_down = New Global.System.Data.DataColumn("first_down", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfirst_down)
            Me.columnfourth_down_att = New Global.System.Data.DataColumn("fourth_down_att", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfourth_down_att)
            Me.columnfourth_down_conv = New Global.System.Data.DataColumn("fourth_down_conv", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfourth_down_conv)
            Me.columnfourth_down_failed = New Global.System.Data.DataColumn("fourth_down_failed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfourth_down_failed)
            Me.columnpassing_first_down = New Global.System.Data.DataColumn("passing_first_down", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_first_down)
            Me.columnpenalty = New Global.System.Data.DataColumn("penalty", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpenalty)
            Me.columnpenalty_first_down = New Global.System.Data.DataColumn("penalty_first_down", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpenalty_first_down)
            Me.columnpenalty_yds = New Global.System.Data.DataColumn("penalty_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpenalty_yds)
            Me.columnrushing_first_down = New Global.System.Data.DataColumn("rushing_first_down", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_first_down)
            Me.columnthird_down_att = New Global.System.Data.DataColumn("third_down_att", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthird_down_att)
            Me.columnthird_down_conv = New Global.System.Data.DataColumn("third_down_conv", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthird_down_conv)
            Me.columnthird_down_failed = New Global.System.Data.DataColumn("third_down_failed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthird_down_failed)
            Me.columntimeout = New Global.System.Data.DataColumn("timeout", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimeout)
            Me.columnxp_aborted = New Global.System.Data.DataColumn("xp_aborted", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxp_aborted)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columngsis_id, Me.columndrive_id, Me.columnplay_id}, true))
            Me.columngsis_id.AllowDBNull = false
            Me.columngsis_id.MaxLength = 20
            Me.columndrive_id.AllowDBNull = false
            Me.columnplay_id.AllowDBNull = false
            Me.columntime.AllowDBNull = false
            Me.columntime.MaxLength = 255
            Me.columnpos_team.AllowDBNull = false
            Me.columnpos_team.MaxLength = 6
            Me.columnyardline.MaxLength = 255
            Me.columndescription.MaxLength = 8190
            Me.columnnote.MaxLength = 8190
            Me.columntime_inserted.AllowDBNull = false
            Me.columntime_updated.AllowDBNull = false
            Me.columnfirst_down.AllowDBNull = false
            Me.columnfourth_down_att.AllowDBNull = false
            Me.columnfourth_down_conv.AllowDBNull = false
            Me.columnfourth_down_failed.AllowDBNull = false
            Me.columnpassing_first_down.AllowDBNull = false
            Me.columnpenalty.AllowDBNull = false
            Me.columnpenalty_first_down.AllowDBNull = false
            Me.columnpenalty_yds.AllowDBNull = false
            Me.columnrushing_first_down.AllowDBNull = false
            Me.columnthird_down_att.AllowDBNull = false
            Me.columnthird_down_conv.AllowDBNull = false
            Me.columnthird_down_failed.AllowDBNull = false
            Me.columntimeout.AllowDBNull = false
            Me.columnxp_aborted.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewplayRow() As playRow
            Return CType(Me.NewRow,playRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New playRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(playRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.playRowChangedEvent) Is Nothing) Then
                RaiseEvent playRowChanged(Me, New playRowChangeEvent(CType(e.Row,playRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.playRowChangingEvent) Is Nothing) Then
                RaiseEvent playRowChanging(Me, New playRowChangeEvent(CType(e.Row,playRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.playRowDeletedEvent) Is Nothing) Then
                RaiseEvent playRowDeleted(Me, New playRowChangeEvent(CType(e.Row,playRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.playRowDeletingEvent) Is Nothing) Then
                RaiseEvent playRowDeleting(Me, New playRowChangeEvent(CType(e.Row,playRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveplayRow(ByVal row As playRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNFLdb = New dsNFLdb()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "playDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class play_playerDataTable
        Inherits Global.System.Data.TypedTableBase(Of play_playerRow)
        
        Private columngsis_id As Global.System.Data.DataColumn
        
        Private columndrive_id As Global.System.Data.DataColumn
        
        Private columnplay_id As Global.System.Data.DataColumn
        
        Private columnplayer_id As Global.System.Data.DataColumn
        
        Private columnteam As Global.System.Data.DataColumn
        
        Private columndefense_ast As Global.System.Data.DataColumn
        
        Private columndefense_ffum As Global.System.Data.DataColumn
        
        Private columndefense_fgblk As Global.System.Data.DataColumn
        
        Private columndefense_frec As Global.System.Data.DataColumn
        
        Private columndefense_frec_tds As Global.System.Data.DataColumn
        
        Private columndefense_frec_yds As Global.System.Data.DataColumn
        
        Private columndefense_int As Global.System.Data.DataColumn
        
        Private columndefense_int_tds As Global.System.Data.DataColumn
        
        Private columndefense_int_yds As Global.System.Data.DataColumn
        
        Private columndefense_misc_tds As Global.System.Data.DataColumn
        
        Private columndefense_misc_yds As Global.System.Data.DataColumn
        
        Private columndefense_pass_def As Global.System.Data.DataColumn
        
        Private columndefense_puntblk As Global.System.Data.DataColumn
        
        Private columndefense_qbhit As Global.System.Data.DataColumn
        
        Private columndefense_safe As Global.System.Data.DataColumn
        
        Private columndefense_sk As Global.System.Data.DataColumn
        
        Private columndefense_sk_yds As Global.System.Data.DataColumn
        
        Private columndefense_tkl As Global.System.Data.DataColumn
        
        Private columndefense_tkl_loss As Global.System.Data.DataColumn
        
        Private columndefense_tkl_loss_yds As Global.System.Data.DataColumn
        
        Private columndefense_tkl_primary As Global.System.Data.DataColumn
        
        Private columndefense_xpblk As Global.System.Data.DataColumn
        
        Private columnfumbles_forced As Global.System.Data.DataColumn
        
        Private columnfumbles_lost As Global.System.Data.DataColumn
        
        Private columnfumbles_notforced As Global.System.Data.DataColumn
        
        Private columnfumbles_oob As Global.System.Data.DataColumn
        
        Private columnfumbles_rec As Global.System.Data.DataColumn
        
        Private columnfumbles_rec_tds As Global.System.Data.DataColumn
        
        Private columnfumbles_rec_yds As Global.System.Data.DataColumn
        
        Private columnfumbles_tot As Global.System.Data.DataColumn
        
        Private columnkicking_all_yds As Global.System.Data.DataColumn
        
        Private columnkicking_downed As Global.System.Data.DataColumn
        
        Private columnkicking_fga As Global.System.Data.DataColumn
        
        Private columnkicking_fgb As Global.System.Data.DataColumn
        
        Private columnkicking_fgm As Global.System.Data.DataColumn
        
        Private columnkicking_fgm_yds As Global.System.Data.DataColumn
        
        Private columnkicking_fgmissed As Global.System.Data.DataColumn
        
        Private columnkicking_fgmissed_yds As Global.System.Data.DataColumn
        
        Private columnkicking_i20 As Global.System.Data.DataColumn
        
        Private columnkicking_rec As Global.System.Data.DataColumn
        
        Private columnkicking_rec_tds As Global.System.Data.DataColumn
        
        Private columnkicking_tot As Global.System.Data.DataColumn
        
        Private columnkicking_touchback As Global.System.Data.DataColumn
        
        Private columnkicking_xpa As Global.System.Data.DataColumn
        
        Private columnkicking_xpb As Global.System.Data.DataColumn
        
        Private columnkicking_xpmade As Global.System.Data.DataColumn
        
        Private columnkicking_xpmissed As Global.System.Data.DataColumn
        
        Private columnkicking_yds As Global.System.Data.DataColumn
        
        Private columnkickret_fair As Global.System.Data.DataColumn
        
        Private columnkickret_oob As Global.System.Data.DataColumn
        
        Private columnkickret_ret As Global.System.Data.DataColumn
        
        Private columnkickret_tds As Global.System.Data.DataColumn
        
        Private columnkickret_touchback As Global.System.Data.DataColumn
        
        Private columnkickret_yds As Global.System.Data.DataColumn
        
        Private columnpassing_att As Global.System.Data.DataColumn
        
        Private columnpassing_cmp As Global.System.Data.DataColumn
        
        Private columnpassing_cmp_air_yds As Global.System.Data.DataColumn
        
        Private columnpassing_incmp As Global.System.Data.DataColumn
        
        Private columnpassing_incmp_air_yds As Global.System.Data.DataColumn
        
        Private columnpassing_int As Global.System.Data.DataColumn
        
        Private columnpassing_sk As Global.System.Data.DataColumn
        
        Private columnpassing_sk_yds As Global.System.Data.DataColumn
        
        Private columnpassing_tds As Global.System.Data.DataColumn
        
        Private columnpassing_twopta As Global.System.Data.DataColumn
        
        Private columnpassing_twoptm As Global.System.Data.DataColumn
        
        Private columnpassing_twoptmissed As Global.System.Data.DataColumn
        
        Private columnpassing_yds As Global.System.Data.DataColumn
        
        Private columnpunting_blk As Global.System.Data.DataColumn
        
        Private columnpunting_i20 As Global.System.Data.DataColumn
        
        Private columnpunting_tot As Global.System.Data.DataColumn
        
        Private columnpunting_touchback As Global.System.Data.DataColumn
        
        Private columnpunting_yds As Global.System.Data.DataColumn
        
        Private columnpuntret_downed As Global.System.Data.DataColumn
        
        Private columnpuntret_fair As Global.System.Data.DataColumn
        
        Private columnpuntret_oob As Global.System.Data.DataColumn
        
        Private columnpuntret_tds As Global.System.Data.DataColumn
        
        Private columnpuntret_tot As Global.System.Data.DataColumn
        
        Private columnpuntret_touchback As Global.System.Data.DataColumn
        
        Private columnpuntret_yds As Global.System.Data.DataColumn
        
        Private columnreceiving_rec As Global.System.Data.DataColumn
        
        Private columnreceiving_tar As Global.System.Data.DataColumn
        
        Private columnreceiving_tds As Global.System.Data.DataColumn
        
        Private columnreceiving_twopta As Global.System.Data.DataColumn
        
        Private columnreceiving_twoptm As Global.System.Data.DataColumn
        
        Private columnreceiving_twoptmissed As Global.System.Data.DataColumn
        
        Private columnreceiving_yac_yds As Global.System.Data.DataColumn
        
        Private columnreceiving_yds As Global.System.Data.DataColumn
        
        Private columnrushing_att As Global.System.Data.DataColumn
        
        Private columnrushing_loss As Global.System.Data.DataColumn
        
        Private columnrushing_loss_yds As Global.System.Data.DataColumn
        
        Private columnrushing_tds As Global.System.Data.DataColumn
        
        Private columnrushing_twopta As Global.System.Data.DataColumn
        
        Private columnrushing_twoptm As Global.System.Data.DataColumn
        
        Private columnrushing_twoptmissed As Global.System.Data.DataColumn
        
        Private columnrushing_yds As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "play_player"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property gsis_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngsis_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property drive_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndrive_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property play_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplay_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property player_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplayer_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property teamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnteam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_astColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_ast
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_ffumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_ffum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_fgblkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_fgblk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_frecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_frec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_frec_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_frec_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_frec_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_frec_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_int_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_int_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_int_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_int_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_misc_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_misc_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_misc_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_misc_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_pass_defColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_pass_def
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_puntblkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_puntblk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_qbhitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_qbhit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_safeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_safe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_skColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_sk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_sk_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_sk_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_tklColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_tkl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_tkl_lossColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_tkl_loss
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_tkl_loss_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_tkl_loss_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_tkl_primaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_tkl_primary
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property defense_xpblkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndefense_xpblk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fumbles_forcedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfumbles_forced
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fumbles_lostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfumbles_lost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fumbles_notforcedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfumbles_notforced
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fumbles_oobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfumbles_oob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fumbles_recColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfumbles_rec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fumbles_rec_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfumbles_rec_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fumbles_rec_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfumbles_rec_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fumbles_totColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfumbles_tot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_all_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_all_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_downedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_downed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_fgaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_fga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_fgbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_fgb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_fgmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_fgm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_fgm_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_fgm_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_fgmissedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_fgmissed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_fgmissed_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_fgmissed_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_i20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_i20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_recColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_rec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_rec_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_rec_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_totColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_tot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_touchbackColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_touchback
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_xpaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_xpa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_xpbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_xpb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_xpmadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_xpmade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_xpmissedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_xpmissed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kicking_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkicking_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kickret_fairColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkickret_fair
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kickret_oobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkickret_oob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kickret_retColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkickret_ret
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kickret_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkickret_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kickret_touchbackColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkickret_touchback
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kickret_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkickret_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_attColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_att
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_cmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_cmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_cmp_air_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_cmp_air_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_incmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_incmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_incmp_air_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_incmp_air_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_skColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_sk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_sk_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_sk_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_twoptaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_twopta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_twoptmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_twoptm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_twoptmissedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_twoptmissed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property passing_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassing_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property punting_blkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpunting_blk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property punting_i20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpunting_i20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property punting_totColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpunting_tot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property punting_touchbackColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpunting_touchback
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property punting_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpunting_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property puntret_downedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpuntret_downed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property puntret_fairColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpuntret_fair
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property puntret_oobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpuntret_oob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property puntret_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpuntret_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property puntret_totColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpuntret_tot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property puntret_touchbackColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpuntret_touchback
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property puntret_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpuntret_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiving_recColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiving_rec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiving_tarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiving_tar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiving_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiving_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiving_twoptaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiving_twopta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiving_twoptmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiving_twoptm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiving_twoptmissedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiving_twoptmissed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiving_yac_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiving_yac_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiving_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiving_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_attColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_att
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_lossColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_loss
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_loss_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_loss_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_tdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_tds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_twoptaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_twopta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_twoptmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_twoptm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_twoptmissedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_twoptmissed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rushing_ydsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrushing_yds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As play_playerRow
            Get
                Return CType(Me.Rows(index),play_playerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event play_playerRowChanging As play_playerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event play_playerRowChanged As play_playerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event play_playerRowDeleting As play_playerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event play_playerRowDeleted As play_playerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addplay_playerRow(ByVal row As play_playerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addplay_playerRow( _
                    ByVal gsis_id As String,  _
                    ByVal drive_id As Short,  _
                    ByVal play_id As Short,  _
                    ByVal player_id As String,  _
                    ByVal team As String,  _
                    ByVal defense_ast As Short,  _
                    ByVal defense_ffum As Short,  _
                    ByVal defense_fgblk As Short,  _
                    ByVal defense_frec As Short,  _
                    ByVal defense_frec_tds As Short,  _
                    ByVal defense_frec_yds As Short,  _
                    ByVal defense_int As Short,  _
                    ByVal defense_int_tds As Short,  _
                    ByVal defense_int_yds As Short,  _
                    ByVal defense_misc_tds As Short,  _
                    ByVal defense_misc_yds As Short,  _
                    ByVal defense_pass_def As Short,  _
                    ByVal defense_puntblk As Short,  _
                    ByVal defense_qbhit As Short,  _
                    ByVal defense_safe As Short,  _
                    ByVal defense_sk As Single,  _
                    ByVal defense_sk_yds As Short,  _
                    ByVal defense_tkl As Short,  _
                    ByVal defense_tkl_loss As Short,  _
                    ByVal defense_tkl_loss_yds As Short,  _
                    ByVal defense_tkl_primary As Short,  _
                    ByVal defense_xpblk As Short,  _
                    ByVal fumbles_forced As Short,  _
                    ByVal fumbles_lost As Short,  _
                    ByVal fumbles_notforced As Short,  _
                    ByVal fumbles_oob As Short,  _
                    ByVal fumbles_rec As Short,  _
                    ByVal fumbles_rec_tds As Short,  _
                    ByVal fumbles_rec_yds As Short,  _
                    ByVal fumbles_tot As Short,  _
                    ByVal kicking_all_yds As Short,  _
                    ByVal kicking_downed As Short,  _
                    ByVal kicking_fga As Short,  _
                    ByVal kicking_fgb As Short,  _
                    ByVal kicking_fgm As Short,  _
                    ByVal kicking_fgm_yds As Short,  _
                    ByVal kicking_fgmissed As Short,  _
                    ByVal kicking_fgmissed_yds As Short,  _
                    ByVal kicking_i20 As Short,  _
                    ByVal kicking_rec As Short,  _
                    ByVal kicking_rec_tds As Short,  _
                    ByVal kicking_tot As Short,  _
                    ByVal kicking_touchback As Short,  _
                    ByVal kicking_xpa As Short,  _
                    ByVal kicking_xpb As Short,  _
                    ByVal kicking_xpmade As Short,  _
                    ByVal kicking_xpmissed As Short,  _
                    ByVal kicking_yds As Short,  _
                    ByVal kickret_fair As Short,  _
                    ByVal kickret_oob As Short,  _
                    ByVal kickret_ret As Short,  _
                    ByVal kickret_tds As Short,  _
                    ByVal kickret_touchback As Short,  _
                    ByVal kickret_yds As Short,  _
                    ByVal passing_att As Short,  _
                    ByVal passing_cmp As Short,  _
                    ByVal passing_cmp_air_yds As Short,  _
                    ByVal passing_incmp As Short,  _
                    ByVal passing_incmp_air_yds As Short,  _
                    ByVal passing_int As Short,  _
                    ByVal passing_sk As Short,  _
                    ByVal passing_sk_yds As Short,  _
                    ByVal passing_tds As Short,  _
                    ByVal passing_twopta As Short,  _
                    ByVal passing_twoptm As Short,  _
                    ByVal passing_twoptmissed As Short,  _
                    ByVal passing_yds As Short,  _
                    ByVal punting_blk As Short,  _
                    ByVal punting_i20 As Short,  _
                    ByVal punting_tot As Short,  _
                    ByVal punting_touchback As Short,  _
                    ByVal punting_yds As Short,  _
                    ByVal puntret_downed As Short,  _
                    ByVal puntret_fair As Short,  _
                    ByVal puntret_oob As Short,  _
                    ByVal puntret_tds As Short,  _
                    ByVal puntret_tot As Short,  _
                    ByVal puntret_touchback As Short,  _
                    ByVal puntret_yds As Short,  _
                    ByVal receiving_rec As Short,  _
                    ByVal receiving_tar As Short,  _
                    ByVal receiving_tds As Short,  _
                    ByVal receiving_twopta As Short,  _
                    ByVal receiving_twoptm As Short,  _
                    ByVal receiving_twoptmissed As Short,  _
                    ByVal receiving_yac_yds As Short,  _
                    ByVal receiving_yds As Short,  _
                    ByVal rushing_att As Short,  _
                    ByVal rushing_loss As Short,  _
                    ByVal rushing_loss_yds As Short,  _
                    ByVal rushing_tds As Short,  _
                    ByVal rushing_twopta As Short,  _
                    ByVal rushing_twoptm As Short,  _
                    ByVal rushing_twoptmissed As Short,  _
                    ByVal rushing_yds As Short) As play_playerRow
            Dim rowplay_playerRow As play_playerRow = CType(Me.NewRow,play_playerRow)
            Dim columnValuesArray() As Object = New Object() {gsis_id, drive_id, play_id, player_id, team, defense_ast, defense_ffum, defense_fgblk, defense_frec, defense_frec_tds, defense_frec_yds, defense_int, defense_int_tds, defense_int_yds, defense_misc_tds, defense_misc_yds, defense_pass_def, defense_puntblk, defense_qbhit, defense_safe, defense_sk, defense_sk_yds, defense_tkl, defense_tkl_loss, defense_tkl_loss_yds, defense_tkl_primary, defense_xpblk, fumbles_forced, fumbles_lost, fumbles_notforced, fumbles_oob, fumbles_rec, fumbles_rec_tds, fumbles_rec_yds, fumbles_tot, kicking_all_yds, kicking_downed, kicking_fga, kicking_fgb, kicking_fgm, kicking_fgm_yds, kicking_fgmissed, kicking_fgmissed_yds, kicking_i20, kicking_rec, kicking_rec_tds, kicking_tot, kicking_touchback, kicking_xpa, kicking_xpb, kicking_xpmade, kicking_xpmissed, kicking_yds, kickret_fair, kickret_oob, kickret_ret, kickret_tds, kickret_touchback, kickret_yds, passing_att, passing_cmp, passing_cmp_air_yds, passing_incmp, passing_incmp_air_yds, passing_int, passing_sk, passing_sk_yds, passing_tds, passing_twopta, passing_twoptm, passing_twoptmissed, passing_yds, punting_blk, punting_i20, punting_tot, punting_touchback, punting_yds, puntret_downed, puntret_fair, puntret_oob, puntret_tds, puntret_tot, puntret_touchback, puntret_yds, receiving_rec, receiving_tar, receiving_tds, receiving_twopta, receiving_twoptm, receiving_twoptmissed, receiving_yac_yds, receiving_yds, rushing_att, rushing_loss, rushing_loss_yds, rushing_tds, rushing_twopta, rushing_twoptm, rushing_twoptmissed, rushing_yds}
            rowplay_playerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowplay_playerRow)
            Return rowplay_playerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBygsis_iddrive_idplay_idplayer_id(ByVal gsis_id As String, ByVal drive_id As Short, ByVal play_id As Short, ByVal player_id As String) As play_playerRow
            Return CType(Me.Rows.Find(New Object() {gsis_id, drive_id, play_id, player_id}),play_playerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As play_playerDataTable = CType(MyBase.Clone,play_playerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New play_playerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columngsis_id = MyBase.Columns("gsis_id")
            Me.columndrive_id = MyBase.Columns("drive_id")
            Me.columnplay_id = MyBase.Columns("play_id")
            Me.columnplayer_id = MyBase.Columns("player_id")
            Me.columnteam = MyBase.Columns("team")
            Me.columndefense_ast = MyBase.Columns("defense_ast")
            Me.columndefense_ffum = MyBase.Columns("defense_ffum")
            Me.columndefense_fgblk = MyBase.Columns("defense_fgblk")
            Me.columndefense_frec = MyBase.Columns("defense_frec")
            Me.columndefense_frec_tds = MyBase.Columns("defense_frec_tds")
            Me.columndefense_frec_yds = MyBase.Columns("defense_frec_yds")
            Me.columndefense_int = MyBase.Columns("defense_int")
            Me.columndefense_int_tds = MyBase.Columns("defense_int_tds")
            Me.columndefense_int_yds = MyBase.Columns("defense_int_yds")
            Me.columndefense_misc_tds = MyBase.Columns("defense_misc_tds")
            Me.columndefense_misc_yds = MyBase.Columns("defense_misc_yds")
            Me.columndefense_pass_def = MyBase.Columns("defense_pass_def")
            Me.columndefense_puntblk = MyBase.Columns("defense_puntblk")
            Me.columndefense_qbhit = MyBase.Columns("defense_qbhit")
            Me.columndefense_safe = MyBase.Columns("defense_safe")
            Me.columndefense_sk = MyBase.Columns("defense_sk")
            Me.columndefense_sk_yds = MyBase.Columns("defense_sk_yds")
            Me.columndefense_tkl = MyBase.Columns("defense_tkl")
            Me.columndefense_tkl_loss = MyBase.Columns("defense_tkl_loss")
            Me.columndefense_tkl_loss_yds = MyBase.Columns("defense_tkl_loss_yds")
            Me.columndefense_tkl_primary = MyBase.Columns("defense_tkl_primary")
            Me.columndefense_xpblk = MyBase.Columns("defense_xpblk")
            Me.columnfumbles_forced = MyBase.Columns("fumbles_forced")
            Me.columnfumbles_lost = MyBase.Columns("fumbles_lost")
            Me.columnfumbles_notforced = MyBase.Columns("fumbles_notforced")
            Me.columnfumbles_oob = MyBase.Columns("fumbles_oob")
            Me.columnfumbles_rec = MyBase.Columns("fumbles_rec")
            Me.columnfumbles_rec_tds = MyBase.Columns("fumbles_rec_tds")
            Me.columnfumbles_rec_yds = MyBase.Columns("fumbles_rec_yds")
            Me.columnfumbles_tot = MyBase.Columns("fumbles_tot")
            Me.columnkicking_all_yds = MyBase.Columns("kicking_all_yds")
            Me.columnkicking_downed = MyBase.Columns("kicking_downed")
            Me.columnkicking_fga = MyBase.Columns("kicking_fga")
            Me.columnkicking_fgb = MyBase.Columns("kicking_fgb")
            Me.columnkicking_fgm = MyBase.Columns("kicking_fgm")
            Me.columnkicking_fgm_yds = MyBase.Columns("kicking_fgm_yds")
            Me.columnkicking_fgmissed = MyBase.Columns("kicking_fgmissed")
            Me.columnkicking_fgmissed_yds = MyBase.Columns("kicking_fgmissed_yds")
            Me.columnkicking_i20 = MyBase.Columns("kicking_i20")
            Me.columnkicking_rec = MyBase.Columns("kicking_rec")
            Me.columnkicking_rec_tds = MyBase.Columns("kicking_rec_tds")
            Me.columnkicking_tot = MyBase.Columns("kicking_tot")
            Me.columnkicking_touchback = MyBase.Columns("kicking_touchback")
            Me.columnkicking_xpa = MyBase.Columns("kicking_xpa")
            Me.columnkicking_xpb = MyBase.Columns("kicking_xpb")
            Me.columnkicking_xpmade = MyBase.Columns("kicking_xpmade")
            Me.columnkicking_xpmissed = MyBase.Columns("kicking_xpmissed")
            Me.columnkicking_yds = MyBase.Columns("kicking_yds")
            Me.columnkickret_fair = MyBase.Columns("kickret_fair")
            Me.columnkickret_oob = MyBase.Columns("kickret_oob")
            Me.columnkickret_ret = MyBase.Columns("kickret_ret")
            Me.columnkickret_tds = MyBase.Columns("kickret_tds")
            Me.columnkickret_touchback = MyBase.Columns("kickret_touchback")
            Me.columnkickret_yds = MyBase.Columns("kickret_yds")
            Me.columnpassing_att = MyBase.Columns("passing_att")
            Me.columnpassing_cmp = MyBase.Columns("passing_cmp")
            Me.columnpassing_cmp_air_yds = MyBase.Columns("passing_cmp_air_yds")
            Me.columnpassing_incmp = MyBase.Columns("passing_incmp")
            Me.columnpassing_incmp_air_yds = MyBase.Columns("passing_incmp_air_yds")
            Me.columnpassing_int = MyBase.Columns("passing_int")
            Me.columnpassing_sk = MyBase.Columns("passing_sk")
            Me.columnpassing_sk_yds = MyBase.Columns("passing_sk_yds")
            Me.columnpassing_tds = MyBase.Columns("passing_tds")
            Me.columnpassing_twopta = MyBase.Columns("passing_twopta")
            Me.columnpassing_twoptm = MyBase.Columns("passing_twoptm")
            Me.columnpassing_twoptmissed = MyBase.Columns("passing_twoptmissed")
            Me.columnpassing_yds = MyBase.Columns("passing_yds")
            Me.columnpunting_blk = MyBase.Columns("punting_blk")
            Me.columnpunting_i20 = MyBase.Columns("punting_i20")
            Me.columnpunting_tot = MyBase.Columns("punting_tot")
            Me.columnpunting_touchback = MyBase.Columns("punting_touchback")
            Me.columnpunting_yds = MyBase.Columns("punting_yds")
            Me.columnpuntret_downed = MyBase.Columns("puntret_downed")
            Me.columnpuntret_fair = MyBase.Columns("puntret_fair")
            Me.columnpuntret_oob = MyBase.Columns("puntret_oob")
            Me.columnpuntret_tds = MyBase.Columns("puntret_tds")
            Me.columnpuntret_tot = MyBase.Columns("puntret_tot")
            Me.columnpuntret_touchback = MyBase.Columns("puntret_touchback")
            Me.columnpuntret_yds = MyBase.Columns("puntret_yds")
            Me.columnreceiving_rec = MyBase.Columns("receiving_rec")
            Me.columnreceiving_tar = MyBase.Columns("receiving_tar")
            Me.columnreceiving_tds = MyBase.Columns("receiving_tds")
            Me.columnreceiving_twopta = MyBase.Columns("receiving_twopta")
            Me.columnreceiving_twoptm = MyBase.Columns("receiving_twoptm")
            Me.columnreceiving_twoptmissed = MyBase.Columns("receiving_twoptmissed")
            Me.columnreceiving_yac_yds = MyBase.Columns("receiving_yac_yds")
            Me.columnreceiving_yds = MyBase.Columns("receiving_yds")
            Me.columnrushing_att = MyBase.Columns("rushing_att")
            Me.columnrushing_loss = MyBase.Columns("rushing_loss")
            Me.columnrushing_loss_yds = MyBase.Columns("rushing_loss_yds")
            Me.columnrushing_tds = MyBase.Columns("rushing_tds")
            Me.columnrushing_twopta = MyBase.Columns("rushing_twopta")
            Me.columnrushing_twoptm = MyBase.Columns("rushing_twoptm")
            Me.columnrushing_twoptmissed = MyBase.Columns("rushing_twoptmissed")
            Me.columnrushing_yds = MyBase.Columns("rushing_yds")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columngsis_id = New Global.System.Data.DataColumn("gsis_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngsis_id)
            Me.columndrive_id = New Global.System.Data.DataColumn("drive_id", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndrive_id)
            Me.columnplay_id = New Global.System.Data.DataColumn("play_id", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplay_id)
            Me.columnplayer_id = New Global.System.Data.DataColumn("player_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplayer_id)
            Me.columnteam = New Global.System.Data.DataColumn("team", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnteam)
            Me.columndefense_ast = New Global.System.Data.DataColumn("defense_ast", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_ast)
            Me.columndefense_ffum = New Global.System.Data.DataColumn("defense_ffum", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_ffum)
            Me.columndefense_fgblk = New Global.System.Data.DataColumn("defense_fgblk", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_fgblk)
            Me.columndefense_frec = New Global.System.Data.DataColumn("defense_frec", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_frec)
            Me.columndefense_frec_tds = New Global.System.Data.DataColumn("defense_frec_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_frec_tds)
            Me.columndefense_frec_yds = New Global.System.Data.DataColumn("defense_frec_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_frec_yds)
            Me.columndefense_int = New Global.System.Data.DataColumn("defense_int", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_int)
            Me.columndefense_int_tds = New Global.System.Data.DataColumn("defense_int_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_int_tds)
            Me.columndefense_int_yds = New Global.System.Data.DataColumn("defense_int_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_int_yds)
            Me.columndefense_misc_tds = New Global.System.Data.DataColumn("defense_misc_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_misc_tds)
            Me.columndefense_misc_yds = New Global.System.Data.DataColumn("defense_misc_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_misc_yds)
            Me.columndefense_pass_def = New Global.System.Data.DataColumn("defense_pass_def", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_pass_def)
            Me.columndefense_puntblk = New Global.System.Data.DataColumn("defense_puntblk", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_puntblk)
            Me.columndefense_qbhit = New Global.System.Data.DataColumn("defense_qbhit", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_qbhit)
            Me.columndefense_safe = New Global.System.Data.DataColumn("defense_safe", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_safe)
            Me.columndefense_sk = New Global.System.Data.DataColumn("defense_sk", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_sk)
            Me.columndefense_sk_yds = New Global.System.Data.DataColumn("defense_sk_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_sk_yds)
            Me.columndefense_tkl = New Global.System.Data.DataColumn("defense_tkl", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_tkl)
            Me.columndefense_tkl_loss = New Global.System.Data.DataColumn("defense_tkl_loss", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_tkl_loss)
            Me.columndefense_tkl_loss_yds = New Global.System.Data.DataColumn("defense_tkl_loss_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_tkl_loss_yds)
            Me.columndefense_tkl_primary = New Global.System.Data.DataColumn("defense_tkl_primary", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_tkl_primary)
            Me.columndefense_xpblk = New Global.System.Data.DataColumn("defense_xpblk", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndefense_xpblk)
            Me.columnfumbles_forced = New Global.System.Data.DataColumn("fumbles_forced", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfumbles_forced)
            Me.columnfumbles_lost = New Global.System.Data.DataColumn("fumbles_lost", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfumbles_lost)
            Me.columnfumbles_notforced = New Global.System.Data.DataColumn("fumbles_notforced", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfumbles_notforced)
            Me.columnfumbles_oob = New Global.System.Data.DataColumn("fumbles_oob", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfumbles_oob)
            Me.columnfumbles_rec = New Global.System.Data.DataColumn("fumbles_rec", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfumbles_rec)
            Me.columnfumbles_rec_tds = New Global.System.Data.DataColumn("fumbles_rec_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfumbles_rec_tds)
            Me.columnfumbles_rec_yds = New Global.System.Data.DataColumn("fumbles_rec_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfumbles_rec_yds)
            Me.columnfumbles_tot = New Global.System.Data.DataColumn("fumbles_tot", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfumbles_tot)
            Me.columnkicking_all_yds = New Global.System.Data.DataColumn("kicking_all_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_all_yds)
            Me.columnkicking_downed = New Global.System.Data.DataColumn("kicking_downed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_downed)
            Me.columnkicking_fga = New Global.System.Data.DataColumn("kicking_fga", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_fga)
            Me.columnkicking_fgb = New Global.System.Data.DataColumn("kicking_fgb", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_fgb)
            Me.columnkicking_fgm = New Global.System.Data.DataColumn("kicking_fgm", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_fgm)
            Me.columnkicking_fgm_yds = New Global.System.Data.DataColumn("kicking_fgm_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_fgm_yds)
            Me.columnkicking_fgmissed = New Global.System.Data.DataColumn("kicking_fgmissed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_fgmissed)
            Me.columnkicking_fgmissed_yds = New Global.System.Data.DataColumn("kicking_fgmissed_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_fgmissed_yds)
            Me.columnkicking_i20 = New Global.System.Data.DataColumn("kicking_i20", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_i20)
            Me.columnkicking_rec = New Global.System.Data.DataColumn("kicking_rec", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_rec)
            Me.columnkicking_rec_tds = New Global.System.Data.DataColumn("kicking_rec_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_rec_tds)
            Me.columnkicking_tot = New Global.System.Data.DataColumn("kicking_tot", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_tot)
            Me.columnkicking_touchback = New Global.System.Data.DataColumn("kicking_touchback", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_touchback)
            Me.columnkicking_xpa = New Global.System.Data.DataColumn("kicking_xpa", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_xpa)
            Me.columnkicking_xpb = New Global.System.Data.DataColumn("kicking_xpb", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_xpb)
            Me.columnkicking_xpmade = New Global.System.Data.DataColumn("kicking_xpmade", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_xpmade)
            Me.columnkicking_xpmissed = New Global.System.Data.DataColumn("kicking_xpmissed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_xpmissed)
            Me.columnkicking_yds = New Global.System.Data.DataColumn("kicking_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkicking_yds)
            Me.columnkickret_fair = New Global.System.Data.DataColumn("kickret_fair", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkickret_fair)
            Me.columnkickret_oob = New Global.System.Data.DataColumn("kickret_oob", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkickret_oob)
            Me.columnkickret_ret = New Global.System.Data.DataColumn("kickret_ret", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkickret_ret)
            Me.columnkickret_tds = New Global.System.Data.DataColumn("kickret_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkickret_tds)
            Me.columnkickret_touchback = New Global.System.Data.DataColumn("kickret_touchback", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkickret_touchback)
            Me.columnkickret_yds = New Global.System.Data.DataColumn("kickret_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkickret_yds)
            Me.columnpassing_att = New Global.System.Data.DataColumn("passing_att", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_att)
            Me.columnpassing_cmp = New Global.System.Data.DataColumn("passing_cmp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_cmp)
            Me.columnpassing_cmp_air_yds = New Global.System.Data.DataColumn("passing_cmp_air_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_cmp_air_yds)
            Me.columnpassing_incmp = New Global.System.Data.DataColumn("passing_incmp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_incmp)
            Me.columnpassing_incmp_air_yds = New Global.System.Data.DataColumn("passing_incmp_air_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_incmp_air_yds)
            Me.columnpassing_int = New Global.System.Data.DataColumn("passing_int", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_int)
            Me.columnpassing_sk = New Global.System.Data.DataColumn("passing_sk", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_sk)
            Me.columnpassing_sk_yds = New Global.System.Data.DataColumn("passing_sk_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_sk_yds)
            Me.columnpassing_tds = New Global.System.Data.DataColumn("passing_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_tds)
            Me.columnpassing_twopta = New Global.System.Data.DataColumn("passing_twopta", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_twopta)
            Me.columnpassing_twoptm = New Global.System.Data.DataColumn("passing_twoptm", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_twoptm)
            Me.columnpassing_twoptmissed = New Global.System.Data.DataColumn("passing_twoptmissed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_twoptmissed)
            Me.columnpassing_yds = New Global.System.Data.DataColumn("passing_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassing_yds)
            Me.columnpunting_blk = New Global.System.Data.DataColumn("punting_blk", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpunting_blk)
            Me.columnpunting_i20 = New Global.System.Data.DataColumn("punting_i20", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpunting_i20)
            Me.columnpunting_tot = New Global.System.Data.DataColumn("punting_tot", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpunting_tot)
            Me.columnpunting_touchback = New Global.System.Data.DataColumn("punting_touchback", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpunting_touchback)
            Me.columnpunting_yds = New Global.System.Data.DataColumn("punting_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpunting_yds)
            Me.columnpuntret_downed = New Global.System.Data.DataColumn("puntret_downed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpuntret_downed)
            Me.columnpuntret_fair = New Global.System.Data.DataColumn("puntret_fair", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpuntret_fair)
            Me.columnpuntret_oob = New Global.System.Data.DataColumn("puntret_oob", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpuntret_oob)
            Me.columnpuntret_tds = New Global.System.Data.DataColumn("puntret_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpuntret_tds)
            Me.columnpuntret_tot = New Global.System.Data.DataColumn("puntret_tot", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpuntret_tot)
            Me.columnpuntret_touchback = New Global.System.Data.DataColumn("puntret_touchback", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpuntret_touchback)
            Me.columnpuntret_yds = New Global.System.Data.DataColumn("puntret_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpuntret_yds)
            Me.columnreceiving_rec = New Global.System.Data.DataColumn("receiving_rec", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiving_rec)
            Me.columnreceiving_tar = New Global.System.Data.DataColumn("receiving_tar", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiving_tar)
            Me.columnreceiving_tds = New Global.System.Data.DataColumn("receiving_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiving_tds)
            Me.columnreceiving_twopta = New Global.System.Data.DataColumn("receiving_twopta", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiving_twopta)
            Me.columnreceiving_twoptm = New Global.System.Data.DataColumn("receiving_twoptm", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiving_twoptm)
            Me.columnreceiving_twoptmissed = New Global.System.Data.DataColumn("receiving_twoptmissed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiving_twoptmissed)
            Me.columnreceiving_yac_yds = New Global.System.Data.DataColumn("receiving_yac_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiving_yac_yds)
            Me.columnreceiving_yds = New Global.System.Data.DataColumn("receiving_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiving_yds)
            Me.columnrushing_att = New Global.System.Data.DataColumn("rushing_att", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_att)
            Me.columnrushing_loss = New Global.System.Data.DataColumn("rushing_loss", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_loss)
            Me.columnrushing_loss_yds = New Global.System.Data.DataColumn("rushing_loss_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_loss_yds)
            Me.columnrushing_tds = New Global.System.Data.DataColumn("rushing_tds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_tds)
            Me.columnrushing_twopta = New Global.System.Data.DataColumn("rushing_twopta", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_twopta)
            Me.columnrushing_twoptm = New Global.System.Data.DataColumn("rushing_twoptm", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_twoptm)
            Me.columnrushing_twoptmissed = New Global.System.Data.DataColumn("rushing_twoptmissed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_twoptmissed)
            Me.columnrushing_yds = New Global.System.Data.DataColumn("rushing_yds", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrushing_yds)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columngsis_id, Me.columndrive_id, Me.columnplay_id, Me.columnplayer_id}, true))
            Me.columngsis_id.AllowDBNull = false
            Me.columngsis_id.MaxLength = 20
            Me.columndrive_id.AllowDBNull = false
            Me.columnplay_id.AllowDBNull = false
            Me.columnplayer_id.AllowDBNull = false
            Me.columnplayer_id.MaxLength = 20
            Me.columnteam.AllowDBNull = false
            Me.columnteam.MaxLength = 6
            Me.columndefense_ast.AllowDBNull = false
            Me.columndefense_ffum.AllowDBNull = false
            Me.columndefense_fgblk.AllowDBNull = false
            Me.columndefense_frec.AllowDBNull = false
            Me.columndefense_frec_tds.AllowDBNull = false
            Me.columndefense_frec_yds.AllowDBNull = false
            Me.columndefense_int.AllowDBNull = false
            Me.columndefense_int_tds.AllowDBNull = false
            Me.columndefense_int_yds.AllowDBNull = false
            Me.columndefense_misc_tds.AllowDBNull = false
            Me.columndefense_misc_yds.AllowDBNull = false
            Me.columndefense_pass_def.AllowDBNull = false
            Me.columndefense_puntblk.AllowDBNull = false
            Me.columndefense_qbhit.AllowDBNull = false
            Me.columndefense_safe.AllowDBNull = false
            Me.columndefense_sk.AllowDBNull = false
            Me.columndefense_sk_yds.AllowDBNull = false
            Me.columndefense_tkl.AllowDBNull = false
            Me.columndefense_tkl_loss.AllowDBNull = false
            Me.columndefense_tkl_loss_yds.AllowDBNull = false
            Me.columndefense_tkl_primary.AllowDBNull = false
            Me.columndefense_xpblk.AllowDBNull = false
            Me.columnfumbles_forced.AllowDBNull = false
            Me.columnfumbles_lost.AllowDBNull = false
            Me.columnfumbles_notforced.AllowDBNull = false
            Me.columnfumbles_oob.AllowDBNull = false
            Me.columnfumbles_rec.AllowDBNull = false
            Me.columnfumbles_rec_tds.AllowDBNull = false
            Me.columnfumbles_rec_yds.AllowDBNull = false
            Me.columnfumbles_tot.AllowDBNull = false
            Me.columnkicking_all_yds.AllowDBNull = false
            Me.columnkicking_downed.AllowDBNull = false
            Me.columnkicking_fga.AllowDBNull = false
            Me.columnkicking_fgb.AllowDBNull = false
            Me.columnkicking_fgm.AllowDBNull = false
            Me.columnkicking_fgm_yds.AllowDBNull = false
            Me.columnkicking_fgmissed.AllowDBNull = false
            Me.columnkicking_fgmissed_yds.AllowDBNull = false
            Me.columnkicking_i20.AllowDBNull = false
            Me.columnkicking_rec.AllowDBNull = false
            Me.columnkicking_rec_tds.AllowDBNull = false
            Me.columnkicking_tot.AllowDBNull = false
            Me.columnkicking_touchback.AllowDBNull = false
            Me.columnkicking_xpa.AllowDBNull = false
            Me.columnkicking_xpb.AllowDBNull = false
            Me.columnkicking_xpmade.AllowDBNull = false
            Me.columnkicking_xpmissed.AllowDBNull = false
            Me.columnkicking_yds.AllowDBNull = false
            Me.columnkickret_fair.AllowDBNull = false
            Me.columnkickret_oob.AllowDBNull = false
            Me.columnkickret_ret.AllowDBNull = false
            Me.columnkickret_tds.AllowDBNull = false
            Me.columnkickret_touchback.AllowDBNull = false
            Me.columnkickret_yds.AllowDBNull = false
            Me.columnpassing_att.AllowDBNull = false
            Me.columnpassing_cmp.AllowDBNull = false
            Me.columnpassing_cmp_air_yds.AllowDBNull = false
            Me.columnpassing_incmp.AllowDBNull = false
            Me.columnpassing_incmp_air_yds.AllowDBNull = false
            Me.columnpassing_int.AllowDBNull = false
            Me.columnpassing_sk.AllowDBNull = false
            Me.columnpassing_sk_yds.AllowDBNull = false
            Me.columnpassing_tds.AllowDBNull = false
            Me.columnpassing_twopta.AllowDBNull = false
            Me.columnpassing_twoptm.AllowDBNull = false
            Me.columnpassing_twoptmissed.AllowDBNull = false
            Me.columnpassing_yds.AllowDBNull = false
            Me.columnpunting_blk.AllowDBNull = false
            Me.columnpunting_i20.AllowDBNull = false
            Me.columnpunting_tot.AllowDBNull = false
            Me.columnpunting_touchback.AllowDBNull = false
            Me.columnpunting_yds.AllowDBNull = false
            Me.columnpuntret_downed.AllowDBNull = false
            Me.columnpuntret_fair.AllowDBNull = false
            Me.columnpuntret_oob.AllowDBNull = false
            Me.columnpuntret_tds.AllowDBNull = false
            Me.columnpuntret_tot.AllowDBNull = false
            Me.columnpuntret_touchback.AllowDBNull = false
            Me.columnpuntret_yds.AllowDBNull = false
            Me.columnreceiving_rec.AllowDBNull = false
            Me.columnreceiving_tar.AllowDBNull = false
            Me.columnreceiving_tds.AllowDBNull = false
            Me.columnreceiving_twopta.AllowDBNull = false
            Me.columnreceiving_twoptm.AllowDBNull = false
            Me.columnreceiving_twoptmissed.AllowDBNull = false
            Me.columnreceiving_yac_yds.AllowDBNull = false
            Me.columnreceiving_yds.AllowDBNull = false
            Me.columnrushing_att.AllowDBNull = false
            Me.columnrushing_loss.AllowDBNull = false
            Me.columnrushing_loss_yds.AllowDBNull = false
            Me.columnrushing_tds.AllowDBNull = false
            Me.columnrushing_twopta.AllowDBNull = false
            Me.columnrushing_twoptm.AllowDBNull = false
            Me.columnrushing_twoptmissed.AllowDBNull = false
            Me.columnrushing_yds.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newplay_playerRow() As play_playerRow
            Return CType(Me.NewRow,play_playerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New play_playerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(play_playerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.play_playerRowChangedEvent) Is Nothing) Then
                RaiseEvent play_playerRowChanged(Me, New play_playerRowChangeEvent(CType(e.Row,play_playerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.play_playerRowChangingEvent) Is Nothing) Then
                RaiseEvent play_playerRowChanging(Me, New play_playerRowChangeEvent(CType(e.Row,play_playerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.play_playerRowDeletedEvent) Is Nothing) Then
                RaiseEvent play_playerRowDeleted(Me, New play_playerRowChangeEvent(CType(e.Row,play_playerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.play_playerRowDeletingEvent) Is Nothing) Then
                RaiseEvent play_playerRowDeleting(Me, New play_playerRowChangeEvent(CType(e.Row,play_playerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeplay_playerRow(ByVal row As play_playerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNFLdb = New dsNFLdb()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "play_playerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class playerDataTable
        Inherits Global.System.Data.TypedTableBase(Of playerRow)
        
        Private columnplayer_id As Global.System.Data.DataColumn
        
        Private columngsis_name As Global.System.Data.DataColumn
        
        Private columnfull_name As Global.System.Data.DataColumn
        
        Private columnfirst_name As Global.System.Data.DataColumn
        
        Private columnlast_name As Global.System.Data.DataColumn
        
        Private columnteam As Global.System.Data.DataColumn
        
        Private columnposition As Global.System.Data.DataColumn
        
        Private columnprofile_id As Global.System.Data.DataColumn
        
        Private columnprofile_url As Global.System.Data.DataColumn
        
        Private columnuniform_number As Global.System.Data.DataColumn
        
        Private columnbirthdate As Global.System.Data.DataColumn
        
        Private columncollege As Global.System.Data.DataColumn
        
        Private columnheight As Global.System.Data.DataColumn
        
        Private columnweight As Global.System.Data.DataColumn
        
        Private columnyears_pro As Global.System.Data.DataColumn
        
        Private columnstatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "player"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property player_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplayer_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property gsis_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngsis_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property full_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfull_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property first_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfirst_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property last_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property teamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnteam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property positionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnposition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property profile_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprofile_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property profile_urlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprofile_url
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uniform_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuniform_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property birthdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbirthdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property collegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncollege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property heightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnweight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property years_proColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyears_pro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As playerRow
            Get
                Return CType(Me.Rows(index),playerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event playerRowChanging As playerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event playerRowChanged As playerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event playerRowDeleting As playerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event playerRowDeleted As playerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddplayerRow(ByVal row As playerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddplayerRow( _
                    ByVal player_id As String,  _
                    ByVal gsis_name As String,  _
                    ByVal full_name As String,  _
                    ByVal first_name As String,  _
                    ByVal last_name As String,  _
                    ByVal team As String,  _
                    ByVal position As String,  _
                    ByVal profile_id As Integer,  _
                    ByVal profile_url As String,  _
                    ByVal uniform_number As Short,  _
                    ByVal birthdate As String,  _
                    ByVal college As String,  _
                    ByVal height As Short,  _
                    ByVal weight As Short,  _
                    ByVal years_pro As Short,  _
                    ByVal status As String) As playerRow
            Dim rowplayerRow As playerRow = CType(Me.NewRow,playerRow)
            Dim columnValuesArray() As Object = New Object() {player_id, gsis_name, full_name, first_name, last_name, team, position, profile_id, profile_url, uniform_number, birthdate, college, height, weight, years_pro, status}
            rowplayerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowplayerRow)
            Return rowplayerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByplayer_id(ByVal player_id As String) As playerRow
            Return CType(Me.Rows.Find(New Object() {player_id}),playerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As playerDataTable = CType(MyBase.Clone,playerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New playerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnplayer_id = MyBase.Columns("player_id")
            Me.columngsis_name = MyBase.Columns("gsis_name")
            Me.columnfull_name = MyBase.Columns("full_name")
            Me.columnfirst_name = MyBase.Columns("first_name")
            Me.columnlast_name = MyBase.Columns("last_name")
            Me.columnteam = MyBase.Columns("team")
            Me.columnposition = MyBase.Columns("position")
            Me.columnprofile_id = MyBase.Columns("profile_id")
            Me.columnprofile_url = MyBase.Columns("profile_url")
            Me.columnuniform_number = MyBase.Columns("uniform_number")
            Me.columnbirthdate = MyBase.Columns("birthdate")
            Me.columncollege = MyBase.Columns("college")
            Me.columnheight = MyBase.Columns("height")
            Me.columnweight = MyBase.Columns("weight")
            Me.columnyears_pro = MyBase.Columns("years_pro")
            Me.columnstatus = MyBase.Columns("status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnplayer_id = New Global.System.Data.DataColumn("player_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplayer_id)
            Me.columngsis_name = New Global.System.Data.DataColumn("gsis_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngsis_name)
            Me.columnfull_name = New Global.System.Data.DataColumn("full_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfull_name)
            Me.columnfirst_name = New Global.System.Data.DataColumn("first_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfirst_name)
            Me.columnlast_name = New Global.System.Data.DataColumn("last_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_name)
            Me.columnteam = New Global.System.Data.DataColumn("team", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnteam)
            Me.columnposition = New Global.System.Data.DataColumn("position", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnposition)
            Me.columnprofile_id = New Global.System.Data.DataColumn("profile_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprofile_id)
            Me.columnprofile_url = New Global.System.Data.DataColumn("profile_url", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprofile_url)
            Me.columnuniform_number = New Global.System.Data.DataColumn("uniform_number", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuniform_number)
            Me.columnbirthdate = New Global.System.Data.DataColumn("birthdate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbirthdate)
            Me.columncollege = New Global.System.Data.DataColumn("college", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncollege)
            Me.columnheight = New Global.System.Data.DataColumn("height", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheight)
            Me.columnweight = New Global.System.Data.DataColumn("weight", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnweight)
            Me.columnyears_pro = New Global.System.Data.DataColumn("years_pro", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyears_pro)
            Me.columnstatus = New Global.System.Data.DataColumn("status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnplayer_id}, true))
            Me.columnplayer_id.AllowDBNull = false
            Me.columnplayer_id.Unique = true
            Me.columnplayer_id.MaxLength = 20
            Me.columngsis_name.MaxLength = 150
            Me.columnfull_name.MaxLength = 200
            Me.columnfirst_name.MaxLength = 200
            Me.columnlast_name.MaxLength = 200
            Me.columnteam.AllowDBNull = false
            Me.columnteam.MaxLength = 6
            Me.columnposition.AllowDBNull = false
            Me.columnposition.MaxLength = 255
            Me.columnprofile_url.MaxLength = 255
            Me.columnbirthdate.MaxLength = 150
            Me.columncollege.MaxLength = 255
            Me.columnstatus.AllowDBNull = false
            Me.columnstatus.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewplayerRow() As playerRow
            Return CType(Me.NewRow,playerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New playerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(playerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.playerRowChangedEvent) Is Nothing) Then
                RaiseEvent playerRowChanged(Me, New playerRowChangeEvent(CType(e.Row,playerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.playerRowChangingEvent) Is Nothing) Then
                RaiseEvent playerRowChanging(Me, New playerRowChangeEvent(CType(e.Row,playerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.playerRowDeletedEvent) Is Nothing) Then
                RaiseEvent playerRowDeleted(Me, New playerRowChangeEvent(CType(e.Row,playerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.playerRowDeletingEvent) Is Nothing) Then
                RaiseEvent playerRowDeleting(Me, New playerRowChangeEvent(CType(e.Row,playerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveplayerRow(ByVal row As playerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNFLdb = New dsNFLdb()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "playerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class teamDataTable
        Inherits Global.System.Data.TypedTableBase(Of teamRow)
        
        Private columnteam_id As Global.System.Data.DataColumn
        
        Private columncity As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "team"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property team_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnteam_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As teamRow
            Get
                Return CType(Me.Rows(index),teamRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event teamRowChanging As teamRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event teamRowChanged As teamRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event teamRowDeleting As teamRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event teamRowDeleted As teamRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddteamRow(ByVal row As teamRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddteamRow(ByVal team_id As String, ByVal city As String, ByVal name As String) As teamRow
            Dim rowteamRow As teamRow = CType(Me.NewRow,teamRow)
            Dim columnValuesArray() As Object = New Object() {team_id, city, name}
            rowteamRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowteamRow)
            Return rowteamRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByteam_id(ByVal team_id As String) As teamRow
            Return CType(Me.Rows.Find(New Object() {team_id}),teamRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As teamDataTable = CType(MyBase.Clone,teamDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New teamDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnteam_id = MyBase.Columns("team_id")
            Me.columncity = MyBase.Columns("city")
            Me.columnname = MyBase.Columns("name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnteam_id = New Global.System.Data.DataColumn("team_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnteam_id)
            Me.columncity = New Global.System.Data.DataColumn("city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncity)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnteam_id}, true))
            Me.columnteam_id.AllowDBNull = false
            Me.columnteam_id.Unique = true
            Me.columnteam_id.MaxLength = 6
            Me.columncity.AllowDBNull = false
            Me.columncity.MaxLength = 100
            Me.columnname.AllowDBNull = false
            Me.columnname.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewteamRow() As teamRow
            Return CType(Me.NewRow,teamRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New teamRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(teamRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.teamRowChangedEvent) Is Nothing) Then
                RaiseEvent teamRowChanged(Me, New teamRowChangeEvent(CType(e.Row,teamRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.teamRowChangingEvent) Is Nothing) Then
                RaiseEvent teamRowChanging(Me, New teamRowChangeEvent(CType(e.Row,teamRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.teamRowDeletedEvent) Is Nothing) Then
                RaiseEvent teamRowDeleted(Me, New teamRowChangeEvent(CType(e.Row,teamRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.teamRowDeletingEvent) Is Nothing) Then
                RaiseEvent teamRowDeleting(Me, New teamRowChangeEvent(CType(e.Row,teamRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveteamRow(ByVal row As teamRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNFLdb = New dsNFLdb()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "teamDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vwPlayersActiveDataTable
        Inherits Global.System.Data.TypedTableBase(Of vwPlayersActiveRow)
        
        Private columnplayer_id As Global.System.Data.DataColumn
        
        Private columnfull_name As Global.System.Data.DataColumn
        
        Private columnfirst_name As Global.System.Data.DataColumn
        
        Private columnlast_name As Global.System.Data.DataColumn
        
        Private columnteam As Global.System.Data.DataColumn
        
        Private columnposition As Global.System.Data.DataColumn
        
        Private columnuniform_number As Global.System.Data.DataColumn
        
        Private columncollege As Global.System.Data.DataColumn
        
        Private columnheight As Global.System.Data.DataColumn
        
        Private columnweight As Global.System.Data.DataColumn
        
        Private columnyears_pro As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vwPlayersActive"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property player_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplayer_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property full_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfull_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property first_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfirst_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property last_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property teamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnteam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property positionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnposition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uniform_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuniform_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property collegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncollege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property heightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnweight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property years_proColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyears_pro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vwPlayersActiveRow
            Get
                Return CType(Me.Rows(index),vwPlayersActiveRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwPlayersActiveRowChanging As vwPlayersActiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwPlayersActiveRowChanged As vwPlayersActiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwPlayersActiveRowDeleting As vwPlayersActiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwPlayersActiveRowDeleted As vwPlayersActiveRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddvwPlayersActiveRow(ByVal row As vwPlayersActiveRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddvwPlayersActiveRow(ByVal player_id As String, ByVal full_name As String, ByVal first_name As String, ByVal last_name As String, ByVal team As String, ByVal position As String, ByVal uniform_number As Short, ByVal college As String, ByVal height As Short, ByVal weight As Short, ByVal years_pro As Short) As vwPlayersActiveRow
            Dim rowvwPlayersActiveRow As vwPlayersActiveRow = CType(Me.NewRow,vwPlayersActiveRow)
            Dim columnValuesArray() As Object = New Object() {player_id, full_name, first_name, last_name, team, position, uniform_number, college, height, weight, years_pro}
            rowvwPlayersActiveRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvwPlayersActiveRow)
            Return rowvwPlayersActiveRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vwPlayersActiveDataTable = CType(MyBase.Clone,vwPlayersActiveDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vwPlayersActiveDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnplayer_id = MyBase.Columns("player_id")
            Me.columnfull_name = MyBase.Columns("full_name")
            Me.columnfirst_name = MyBase.Columns("first_name")
            Me.columnlast_name = MyBase.Columns("last_name")
            Me.columnteam = MyBase.Columns("team")
            Me.columnposition = MyBase.Columns("position")
            Me.columnuniform_number = MyBase.Columns("uniform_number")
            Me.columncollege = MyBase.Columns("college")
            Me.columnheight = MyBase.Columns("height")
            Me.columnweight = MyBase.Columns("weight")
            Me.columnyears_pro = MyBase.Columns("years_pro")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnplayer_id = New Global.System.Data.DataColumn("player_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplayer_id)
            Me.columnfull_name = New Global.System.Data.DataColumn("full_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfull_name)
            Me.columnfirst_name = New Global.System.Data.DataColumn("first_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfirst_name)
            Me.columnlast_name = New Global.System.Data.DataColumn("last_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_name)
            Me.columnteam = New Global.System.Data.DataColumn("team", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnteam)
            Me.columnposition = New Global.System.Data.DataColumn("position", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnposition)
            Me.columnuniform_number = New Global.System.Data.DataColumn("uniform_number", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuniform_number)
            Me.columncollege = New Global.System.Data.DataColumn("college", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncollege)
            Me.columnheight = New Global.System.Data.DataColumn("height", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheight)
            Me.columnweight = New Global.System.Data.DataColumn("weight", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnweight)
            Me.columnyears_pro = New Global.System.Data.DataColumn("years_pro", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyears_pro)
            Me.columnplayer_id.MaxLength = 20
            Me.columnfull_name.MaxLength = 200
            Me.columnfirst_name.MaxLength = 200
            Me.columnlast_name.MaxLength = 200
            Me.columnteam.MaxLength = 6
            Me.columnposition.MaxLength = 255
            Me.columncollege.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewvwPlayersActiveRow() As vwPlayersActiveRow
            Return CType(Me.NewRow,vwPlayersActiveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vwPlayersActiveRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vwPlayersActiveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwPlayersActiveRowChangedEvent) Is Nothing) Then
                RaiseEvent vwPlayersActiveRowChanged(Me, New vwPlayersActiveRowChangeEvent(CType(e.Row,vwPlayersActiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwPlayersActiveRowChangingEvent) Is Nothing) Then
                RaiseEvent vwPlayersActiveRowChanging(Me, New vwPlayersActiveRowChangeEvent(CType(e.Row,vwPlayersActiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwPlayersActiveRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwPlayersActiveRowDeleted(Me, New vwPlayersActiveRowChangeEvent(CType(e.Row,vwPlayersActiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwPlayersActiveRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwPlayersActiveRowDeleting(Me, New vwPlayersActiveRowChangeEvent(CType(e.Row,vwPlayersActiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovevwPlayersActiveRow(ByVal row As vwPlayersActiveRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNFLdb = New dsNFLdb()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwPlayersActiveDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class driveRow
        Inherits Global.System.Data.DataRow
        
        Private tabledrive As driveDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledrive = CType(Me.Table,driveDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property gsis_id() As String
            Get
                Return CType(Me(Me.tabledrive.gsis_idColumn),String)
            End Get
            Set
                Me(Me.tabledrive.gsis_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property drive_id() As Short
            Get
                Return CType(Me(Me.tabledrive.drive_idColumn),Short)
            End Get
            Set
                Me(Me.tabledrive.drive_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property start_field() As String
            Get
                Try 
                    Return CType(Me(Me.tabledrive.start_fieldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'start_field' in table 'drive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledrive.start_fieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property start_time() As String
            Get
                Return CType(Me(Me.tabledrive.start_timeColumn),String)
            End Get
            Set
                Me(Me.tabledrive.start_timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property end_field() As String
            Get
                Try 
                    Return CType(Me(Me.tabledrive.end_fieldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'end_field' in table 'drive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledrive.end_fieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property end_time() As String
            Get
                Return CType(Me(Me.tabledrive.end_timeColumn),String)
            End Get
            Set
                Me(Me.tabledrive.end_timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pos_team() As String
            Get
                Return CType(Me(Me.tabledrive.pos_teamColumn),String)
            End Get
            Set
                Me(Me.tabledrive.pos_teamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pos_time() As String
            Get
                Try 
                    Return CType(Me(Me.tabledrive.pos_timeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pos_time' in table 'drive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledrive.pos_timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property first_downs() As Short
            Get
                Return CType(Me(Me.tabledrive.first_downsColumn),Short)
            End Get
            Set
                Me(Me.tabledrive.first_downsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property result() As String
            Get
                Try 
                    Return CType(Me(Me.tabledrive.resultColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'result' in table 'drive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledrive.resultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property penalty_yards() As Short
            Get
                Return CType(Me(Me.tabledrive.penalty_yardsColumn),Short)
            End Get
            Set
                Me(Me.tabledrive.penalty_yardsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property yards_gained() As Short
            Get
                Return CType(Me(Me.tabledrive.yards_gainedColumn),Short)
            End Get
            Set
                Me(Me.tabledrive.yards_gainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property play_count() As Short
            Get
                Return CType(Me(Me.tabledrive.play_countColumn),Short)
            End Get
            Set
                Me(Me.tabledrive.play_countColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_inserted() As Date
            Get
                Return CType(Me(Me.tabledrive.time_insertedColumn),Date)
            End Get
            Set
                Me(Me.tabledrive.time_insertedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_updated() As Date
            Get
                Return CType(Me(Me.tabledrive.time_updatedColumn),Date)
            End Get
            Set
                Me(Me.tabledrive.time_updatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isstart_fieldNull() As Boolean
            Return Me.IsNull(Me.tabledrive.start_fieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setstart_fieldNull()
            Me(Me.tabledrive.start_fieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isend_fieldNull() As Boolean
            Return Me.IsNull(Me.tabledrive.end_fieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setend_fieldNull()
            Me(Me.tabledrive.end_fieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispos_timeNull() As Boolean
            Return Me.IsNull(Me.tabledrive.pos_timeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpos_timeNull()
            Me(Me.tabledrive.pos_timeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsresultNull() As Boolean
            Return Me.IsNull(Me.tabledrive.resultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetresultNull()
            Me(Me.tabledrive.resultColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class gameRow
        Inherits Global.System.Data.DataRow
        
        Private tablegame As gameDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablegame = CType(Me.Table,gameDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property gsis_id() As String
            Get
                Return CType(Me(Me.tablegame.gsis_idColumn),String)
            End Get
            Set
                Me(Me.tablegame.gsis_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property gamekey() As String
            Get
                Try 
                    Return CType(Me(Me.tablegame.gamekeyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gamekey' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.gamekeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property start_time() As Date
            Get
                Return CType(Me(Me.tablegame.start_timeColumn),Date)
            End Get
            Set
                Me(Me.tablegame.start_timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property week() As Short
            Get
                Return CType(Me(Me.tablegame.weekColumn),Short)
            End Get
            Set
                Me(Me.tablegame.weekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property day_of_week() As String
            Get
                Return CType(Me(Me.tablegame.day_of_weekColumn),String)
            End Get
            Set
                Me(Me.tablegame.day_of_weekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property season_year() As Short
            Get
                Return CType(Me(Me.tablegame.season_yearColumn),Short)
            End Get
            Set
                Me(Me.tablegame.season_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property season_type() As String
            Get
                Return CType(Me(Me.tablegame.season_typeColumn),String)
            End Get
            Set
                Me(Me.tablegame.season_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property finished() As String
            Get
                Return CType(Me(Me.tablegame.finishedColumn),String)
            End Get
            Set
                Me(Me.tablegame.finishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property home_team() As String
            Get
                Return CType(Me(Me.tablegame.home_teamColumn),String)
            End Get
            Set
                Me(Me.tablegame.home_teamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property home_score() As Short
            Get
                Return CType(Me(Me.tablegame.home_scoreColumn),Short)
            End Get
            Set
                Me(Me.tablegame.home_scoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property home_score_q1() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.home_score_q1Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'home_score_q1' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.home_score_q1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property home_score_q2() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.home_score_q2Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'home_score_q2' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.home_score_q2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property home_score_q3() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.home_score_q3Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'home_score_q3' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.home_score_q3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property home_score_q4() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.home_score_q4Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'home_score_q4' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.home_score_q4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property home_score_q5() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.home_score_q5Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'home_score_q5' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.home_score_q5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property home_turnovers() As Short
            Get
                Return CType(Me(Me.tablegame.home_turnoversColumn),Short)
            End Get
            Set
                Me(Me.tablegame.home_turnoversColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property away_team() As String
            Get
                Return CType(Me(Me.tablegame.away_teamColumn),String)
            End Get
            Set
                Me(Me.tablegame.away_teamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property away_score() As Short
            Get
                Return CType(Me(Me.tablegame.away_scoreColumn),Short)
            End Get
            Set
                Me(Me.tablegame.away_scoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property away_score_q1() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.away_score_q1Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'away_score_q1' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.away_score_q1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property away_score_q2() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.away_score_q2Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'away_score_q2' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.away_score_q2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property away_score_q3() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.away_score_q3Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'away_score_q3' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.away_score_q3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property away_score_q4() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.away_score_q4Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'away_score_q4' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.away_score_q4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property away_score_q5() As Short
            Get
                Try 
                    Return CType(Me(Me.tablegame.away_score_q5Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'away_score_q5' in table 'game' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablegame.away_score_q5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property away_turnovers() As Short
            Get
                Return CType(Me(Me.tablegame.away_turnoversColumn),Short)
            End Get
            Set
                Me(Me.tablegame.away_turnoversColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_inserted() As Date
            Get
                Return CType(Me(Me.tablegame.time_insertedColumn),Date)
            End Get
            Set
                Me(Me.tablegame.time_insertedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_updated() As Date
            Get
                Return CType(Me(Me.tablegame.time_updatedColumn),Date)
            End Get
            Set
                Me(Me.tablegame.time_updatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgamekeyNull() As Boolean
            Return Me.IsNull(Me.tablegame.gamekeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgamekeyNull()
            Me(Me.tablegame.gamekeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishome_score_q1Null() As Boolean
            Return Me.IsNull(Me.tablegame.home_score_q1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethome_score_q1Null()
            Me(Me.tablegame.home_score_q1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishome_score_q2Null() As Boolean
            Return Me.IsNull(Me.tablegame.home_score_q2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethome_score_q2Null()
            Me(Me.tablegame.home_score_q2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishome_score_q3Null() As Boolean
            Return Me.IsNull(Me.tablegame.home_score_q3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethome_score_q3Null()
            Me(Me.tablegame.home_score_q3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishome_score_q4Null() As Boolean
            Return Me.IsNull(Me.tablegame.home_score_q4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethome_score_q4Null()
            Me(Me.tablegame.home_score_q4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishome_score_q5Null() As Boolean
            Return Me.IsNull(Me.tablegame.home_score_q5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethome_score_q5Null()
            Me(Me.tablegame.home_score_q5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaway_score_q1Null() As Boolean
            Return Me.IsNull(Me.tablegame.away_score_q1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaway_score_q1Null()
            Me(Me.tablegame.away_score_q1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaway_score_q2Null() As Boolean
            Return Me.IsNull(Me.tablegame.away_score_q2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaway_score_q2Null()
            Me(Me.tablegame.away_score_q2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaway_score_q3Null() As Boolean
            Return Me.IsNull(Me.tablegame.away_score_q3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaway_score_q3Null()
            Me(Me.tablegame.away_score_q3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaway_score_q4Null() As Boolean
            Return Me.IsNull(Me.tablegame.away_score_q4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaway_score_q4Null()
            Me(Me.tablegame.away_score_q4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaway_score_q5Null() As Boolean
            Return Me.IsNull(Me.tablegame.away_score_q5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaway_score_q5Null()
            Me(Me.tablegame.away_score_q5Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class metaRow
        Inherits Global.System.Data.DataRow
        
        Private tablemeta As metaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemeta = CType(Me.Table,metaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property version() As Short
            Get
                Try 
                    Return CType(Me(Me.tablemeta.versionColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'version' in table 'meta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemeta.versionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property last_roster_download() As Date
            Get
                Return CType(Me(Me.tablemeta.last_roster_downloadColumn),Date)
            End Get
            Set
                Me(Me.tablemeta.last_roster_downloadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property season_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablemeta.season_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'season_type' in table 'meta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemeta.season_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property season_year() As Short
            Get
                Try 
                    Return CType(Me(Me.tablemeta.season_yearColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'season_year' in table 'meta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemeta.season_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property week() As Short
            Get
                Try 
                    Return CType(Me(Me.tablemeta.weekColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'week' in table 'meta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemeta.weekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsversionNull() As Boolean
            Return Me.IsNull(Me.tablemeta.versionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetversionNull()
            Me(Me.tablemeta.versionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isseason_typeNull() As Boolean
            Return Me.IsNull(Me.tablemeta.season_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setseason_typeNull()
            Me(Me.tablemeta.season_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isseason_yearNull() As Boolean
            Return Me.IsNull(Me.tablemeta.season_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setseason_yearNull()
            Me(Me.tablemeta.season_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsweekNull() As Boolean
            Return Me.IsNull(Me.tablemeta.weekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetweekNull()
            Me(Me.tablemeta.weekColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class playRow
        Inherits Global.System.Data.DataRow
        
        Private tableplay As playDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableplay = CType(Me.Table,playDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property gsis_id() As String
            Get
                Return CType(Me(Me.tableplay.gsis_idColumn),String)
            End Get
            Set
                Me(Me.tableplay.gsis_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property drive_id() As Short
            Get
                Return CType(Me(Me.tableplay.drive_idColumn),Short)
            End Get
            Set
                Me(Me.tableplay.drive_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property play_id() As Short
            Get
                Return CType(Me(Me.tableplay.play_idColumn),Short)
            End Get
            Set
                Me(Me.tableplay.play_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time() As String
            Get
                Return CType(Me(Me.tableplay.timeColumn),String)
            End Get
            Set
                Me(Me.tableplay.timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pos_team() As String
            Get
                Return CType(Me(Me.tableplay.pos_teamColumn),String)
            End Get
            Set
                Me(Me.tableplay.pos_teamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property yardline() As String
            Get
                Try 
                    Return CType(Me(Me.tableplay.yardlineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yardline' in table 'play' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplay.yardlineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property down() As Short
            Get
                Try 
                    Return CType(Me(Me.tableplay.downColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'down' in table 'play' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplay.downColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property yards_to_go() As Short
            Get
                Try 
                    Return CType(Me(Me.tableplay.yards_to_goColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yards_to_go' in table 'play' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplay.yards_to_goColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property description() As String
            Get
                Try 
                    Return CType(Me(Me.tableplay.descriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'description' in table 'play' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplay.descriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property note() As String
            Get
                Try 
                    Return CType(Me(Me.tableplay.noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'note' in table 'play' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplay.noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_inserted() As Date
            Get
                Return CType(Me(Me.tableplay.time_insertedColumn),Date)
            End Get
            Set
                Me(Me.tableplay.time_insertedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_updated() As Date
            Get
                Return CType(Me(Me.tableplay.time_updatedColumn),Date)
            End Get
            Set
                Me(Me.tableplay.time_updatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property first_down() As Short
            Get
                Return CType(Me(Me.tableplay.first_downColumn),Short)
            End Get
            Set
                Me(Me.tableplay.first_downColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fourth_down_att() As Short
            Get
                Return CType(Me(Me.tableplay.fourth_down_attColumn),Short)
            End Get
            Set
                Me(Me.tableplay.fourth_down_attColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fourth_down_conv() As Short
            Get
                Return CType(Me(Me.tableplay.fourth_down_convColumn),Short)
            End Get
            Set
                Me(Me.tableplay.fourth_down_convColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fourth_down_failed() As Short
            Get
                Return CType(Me(Me.tableplay.fourth_down_failedColumn),Short)
            End Get
            Set
                Me(Me.tableplay.fourth_down_failedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_first_down() As Short
            Get
                Return CType(Me(Me.tableplay.passing_first_downColumn),Short)
            End Get
            Set
                Me(Me.tableplay.passing_first_downColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property penalty() As Short
            Get
                Return CType(Me(Me.tableplay.penaltyColumn),Short)
            End Get
            Set
                Me(Me.tableplay.penaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property penalty_first_down() As Short
            Get
                Return CType(Me(Me.tableplay.penalty_first_downColumn),Short)
            End Get
            Set
                Me(Me.tableplay.penalty_first_downColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property penalty_yds() As Short
            Get
                Return CType(Me(Me.tableplay.penalty_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay.penalty_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_first_down() As Short
            Get
                Return CType(Me(Me.tableplay.rushing_first_downColumn),Short)
            End Get
            Set
                Me(Me.tableplay.rushing_first_downColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property third_down_att() As Short
            Get
                Return CType(Me(Me.tableplay.third_down_attColumn),Short)
            End Get
            Set
                Me(Me.tableplay.third_down_attColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property third_down_conv() As Short
            Get
                Return CType(Me(Me.tableplay.third_down_convColumn),Short)
            End Get
            Set
                Me(Me.tableplay.third_down_convColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property third_down_failed() As Short
            Get
                Return CType(Me(Me.tableplay.third_down_failedColumn),Short)
            End Get
            Set
                Me(Me.tableplay.third_down_failedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property timeout() As Short
            Get
                Return CType(Me(Me.tableplay.timeoutColumn),Short)
            End Get
            Set
                Me(Me.tableplay.timeoutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xp_aborted() As Short
            Get
                Return CType(Me(Me.tableplay.xp_abortedColumn),Short)
            End Get
            Set
                Me(Me.tableplay.xp_abortedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsyardlineNull() As Boolean
            Return Me.IsNull(Me.tableplay.yardlineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetyardlineNull()
            Me(Me.tableplay.yardlineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdownNull() As Boolean
            Return Me.IsNull(Me.tableplay.downColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdownNull()
            Me(Me.tableplay.downColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isyards_to_goNull() As Boolean
            Return Me.IsNull(Me.tableplay.yards_to_goColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setyards_to_goNull()
            Me(Me.tableplay.yards_to_goColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdescriptionNull() As Boolean
            Return Me.IsNull(Me.tableplay.descriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdescriptionNull()
            Me(Me.tableplay.descriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnoteNull() As Boolean
            Return Me.IsNull(Me.tableplay.noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnoteNull()
            Me(Me.tableplay.noteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class play_playerRow
        Inherits Global.System.Data.DataRow
        
        Private tableplay_player As play_playerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableplay_player = CType(Me.Table,play_playerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property gsis_id() As String
            Get
                Return CType(Me(Me.tableplay_player.gsis_idColumn),String)
            End Get
            Set
                Me(Me.tableplay_player.gsis_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property drive_id() As Short
            Get
                Return CType(Me(Me.tableplay_player.drive_idColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.drive_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property play_id() As Short
            Get
                Return CType(Me(Me.tableplay_player.play_idColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.play_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property player_id() As String
            Get
                Return CType(Me(Me.tableplay_player.player_idColumn),String)
            End Get
            Set
                Me(Me.tableplay_player.player_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property team() As String
            Get
                Return CType(Me(Me.tableplay_player.teamColumn),String)
            End Get
            Set
                Me(Me.tableplay_player.teamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_ast() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_astColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_astColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_ffum() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_ffumColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_ffumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_fgblk() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_fgblkColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_fgblkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_frec() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_frecColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_frecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_frec_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_frec_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_frec_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_frec_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_frec_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_frec_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_int() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_intColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_int_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_int_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_int_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_int_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_int_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_int_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_misc_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_misc_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_misc_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_misc_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_misc_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_misc_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_pass_def() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_pass_defColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_pass_defColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_puntblk() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_puntblkColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_puntblkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_qbhit() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_qbhitColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_qbhitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_safe() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_safeColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_safeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_sk() As Single
            Get
                Return CType(Me(Me.tableplay_player.defense_skColumn),Single)
            End Get
            Set
                Me(Me.tableplay_player.defense_skColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_sk_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_sk_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_sk_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_tkl() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_tklColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_tklColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_tkl_loss() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_tkl_lossColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_tkl_lossColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_tkl_loss_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_tkl_loss_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_tkl_loss_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_tkl_primary() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_tkl_primaryColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_tkl_primaryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property defense_xpblk() As Short
            Get
                Return CType(Me(Me.tableplay_player.defense_xpblkColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.defense_xpblkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fumbles_forced() As Short
            Get
                Return CType(Me(Me.tableplay_player.fumbles_forcedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.fumbles_forcedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fumbles_lost() As Short
            Get
                Return CType(Me(Me.tableplay_player.fumbles_lostColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.fumbles_lostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fumbles_notforced() As Short
            Get
                Return CType(Me(Me.tableplay_player.fumbles_notforcedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.fumbles_notforcedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fumbles_oob() As Short
            Get
                Return CType(Me(Me.tableplay_player.fumbles_oobColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.fumbles_oobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fumbles_rec() As Short
            Get
                Return CType(Me(Me.tableplay_player.fumbles_recColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.fumbles_recColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fumbles_rec_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.fumbles_rec_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.fumbles_rec_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fumbles_rec_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.fumbles_rec_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.fumbles_rec_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fumbles_tot() As Short
            Get
                Return CType(Me(Me.tableplay_player.fumbles_totColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.fumbles_totColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_all_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_all_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_all_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_downed() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_downedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_downedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_fga() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_fgaColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_fgaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_fgb() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_fgbColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_fgbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_fgm() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_fgmColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_fgmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_fgm_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_fgm_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_fgm_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_fgmissed() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_fgmissedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_fgmissedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_fgmissed_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_fgmissed_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_fgmissed_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_i20() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_i20Column),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_i20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_rec() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_recColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_recColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_rec_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_rec_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_rec_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_tot() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_totColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_totColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_touchback() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_touchbackColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_touchbackColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_xpa() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_xpaColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_xpaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_xpb() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_xpbColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_xpbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_xpmade() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_xpmadeColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_xpmadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_xpmissed() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_xpmissedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_xpmissedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kicking_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.kicking_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kicking_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kickret_fair() As Short
            Get
                Return CType(Me(Me.tableplay_player.kickret_fairColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kickret_fairColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kickret_oob() As Short
            Get
                Return CType(Me(Me.tableplay_player.kickret_oobColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kickret_oobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kickret_ret() As Short
            Get
                Return CType(Me(Me.tableplay_player.kickret_retColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kickret_retColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kickret_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.kickret_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kickret_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kickret_touchback() As Short
            Get
                Return CType(Me(Me.tableplay_player.kickret_touchbackColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kickret_touchbackColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kickret_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.kickret_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.kickret_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_att() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_attColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_attColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_cmp() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_cmpColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_cmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_cmp_air_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_cmp_air_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_cmp_air_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_incmp() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_incmpColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_incmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_incmp_air_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_incmp_air_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_incmp_air_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_int() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_intColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_sk() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_skColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_skColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_sk_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_sk_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_sk_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_twopta() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_twoptaColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_twoptaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_twoptm() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_twoptmColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_twoptmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_twoptmissed() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_twoptmissedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_twoptmissedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property passing_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.passing_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.passing_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property punting_blk() As Short
            Get
                Return CType(Me(Me.tableplay_player.punting_blkColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.punting_blkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property punting_i20() As Short
            Get
                Return CType(Me(Me.tableplay_player.punting_i20Column),Short)
            End Get
            Set
                Me(Me.tableplay_player.punting_i20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property punting_tot() As Short
            Get
                Return CType(Me(Me.tableplay_player.punting_totColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.punting_totColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property punting_touchback() As Short
            Get
                Return CType(Me(Me.tableplay_player.punting_touchbackColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.punting_touchbackColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property punting_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.punting_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.punting_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property puntret_downed() As Short
            Get
                Return CType(Me(Me.tableplay_player.puntret_downedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.puntret_downedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property puntret_fair() As Short
            Get
                Return CType(Me(Me.tableplay_player.puntret_fairColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.puntret_fairColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property puntret_oob() As Short
            Get
                Return CType(Me(Me.tableplay_player.puntret_oobColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.puntret_oobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property puntret_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.puntret_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.puntret_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property puntret_tot() As Short
            Get
                Return CType(Me(Me.tableplay_player.puntret_totColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.puntret_totColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property puntret_touchback() As Short
            Get
                Return CType(Me(Me.tableplay_player.puntret_touchbackColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.puntret_touchbackColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property puntret_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.puntret_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.puntret_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiving_rec() As Short
            Get
                Return CType(Me(Me.tableplay_player.receiving_recColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.receiving_recColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiving_tar() As Short
            Get
                Return CType(Me(Me.tableplay_player.receiving_tarColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.receiving_tarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiving_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.receiving_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.receiving_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiving_twopta() As Short
            Get
                Return CType(Me(Me.tableplay_player.receiving_twoptaColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.receiving_twoptaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiving_twoptm() As Short
            Get
                Return CType(Me(Me.tableplay_player.receiving_twoptmColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.receiving_twoptmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiving_twoptmissed() As Short
            Get
                Return CType(Me(Me.tableplay_player.receiving_twoptmissedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.receiving_twoptmissedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiving_yac_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.receiving_yac_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.receiving_yac_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiving_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.receiving_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.receiving_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_att() As Short
            Get
                Return CType(Me(Me.tableplay_player.rushing_attColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.rushing_attColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_loss() As Short
            Get
                Return CType(Me(Me.tableplay_player.rushing_lossColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.rushing_lossColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_loss_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.rushing_loss_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.rushing_loss_ydsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_tds() As Short
            Get
                Return CType(Me(Me.tableplay_player.rushing_tdsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.rushing_tdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_twopta() As Short
            Get
                Return CType(Me(Me.tableplay_player.rushing_twoptaColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.rushing_twoptaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_twoptm() As Short
            Get
                Return CType(Me(Me.tableplay_player.rushing_twoptmColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.rushing_twoptmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_twoptmissed() As Short
            Get
                Return CType(Me(Me.tableplay_player.rushing_twoptmissedColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.rushing_twoptmissedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rushing_yds() As Short
            Get
                Return CType(Me(Me.tableplay_player.rushing_ydsColumn),Short)
            End Get
            Set
                Me(Me.tableplay_player.rushing_ydsColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class playerRow
        Inherits Global.System.Data.DataRow
        
        Private tableplayer As playerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableplayer = CType(Me.Table,playerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property player_id() As String
            Get
                Return CType(Me(Me.tableplayer.player_idColumn),String)
            End Get
            Set
                Me(Me.tableplayer.player_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property gsis_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableplayer.gsis_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gsis_name' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.gsis_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property full_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableplayer.full_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'full_name' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.full_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property first_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableplayer.first_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'first_name' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.first_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property last_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableplayer.last_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_name' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.last_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property team() As String
            Get
                Return CType(Me(Me.tableplayer.teamColumn),String)
            End Get
            Set
                Me(Me.tableplayer.teamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property position() As String
            Get
                Return CType(Me(Me.tableplayer.positionColumn),String)
            End Get
            Set
                Me(Me.tableplayer.positionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property profile_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplayer.profile_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'profile_id' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.profile_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property profile_url() As String
            Get
                Try 
                    Return CType(Me(Me.tableplayer.profile_urlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'profile_url' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.profile_urlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uniform_number() As Short
            Get
                Try 
                    Return CType(Me(Me.tableplayer.uniform_numberColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uniform_number' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.uniform_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property birthdate() As String
            Get
                Try 
                    Return CType(Me(Me.tableplayer.birthdateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'birthdate' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.birthdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property college() As String
            Get
                Try 
                    Return CType(Me(Me.tableplayer.collegeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'college' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.collegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property height() As Short
            Get
                Try 
                    Return CType(Me(Me.tableplayer.heightColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'height' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.heightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property weight() As Short
            Get
                Try 
                    Return CType(Me(Me.tableplayer.weightColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'weight' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property years_pro() As Short
            Get
                Try 
                    Return CType(Me(Me.tableplayer.years_proColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'years_pro' in table 'player' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplayer.years_proColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property status() As String
            Get
                Return CType(Me(Me.tableplayer.statusColumn),String)
            End Get
            Set
                Me(Me.tableplayer.statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isgsis_nameNull() As Boolean
            Return Me.IsNull(Me.tableplayer.gsis_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setgsis_nameNull()
            Me(Me.tableplayer.gsis_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfull_nameNull() As Boolean
            Return Me.IsNull(Me.tableplayer.full_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfull_nameNull()
            Me(Me.tableplayer.full_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfirst_nameNull() As Boolean
            Return Me.IsNull(Me.tableplayer.first_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfirst_nameNull()
            Me(Me.tableplayer.first_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Islast_nameNull() As Boolean
            Return Me.IsNull(Me.tableplayer.last_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setlast_nameNull()
            Me(Me.tableplayer.last_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isprofile_idNull() As Boolean
            Return Me.IsNull(Me.tableplayer.profile_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setprofile_idNull()
            Me(Me.tableplayer.profile_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isprofile_urlNull() As Boolean
            Return Me.IsNull(Me.tableplayer.profile_urlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setprofile_urlNull()
            Me(Me.tableplayer.profile_urlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isuniform_numberNull() As Boolean
            Return Me.IsNull(Me.tableplayer.uniform_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setuniform_numberNull()
            Me(Me.tableplayer.uniform_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbirthdateNull() As Boolean
            Return Me.IsNull(Me.tableplayer.birthdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbirthdateNull()
            Me(Me.tableplayer.birthdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscollegeNull() As Boolean
            Return Me.IsNull(Me.tableplayer.collegeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcollegeNull()
            Me(Me.tableplayer.collegeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsheightNull() As Boolean
            Return Me.IsNull(Me.tableplayer.heightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetheightNull()
            Me(Me.tableplayer.heightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsweightNull() As Boolean
            Return Me.IsNull(Me.tableplayer.weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetweightNull()
            Me(Me.tableplayer.weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isyears_proNull() As Boolean
            Return Me.IsNull(Me.tableplayer.years_proColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setyears_proNull()
            Me(Me.tableplayer.years_proColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class teamRow
        Inherits Global.System.Data.DataRow
        
        Private tableteam As teamDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableteam = CType(Me.Table,teamDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property team_id() As String
            Get
                Return CType(Me(Me.tableteam.team_idColumn),String)
            End Get
            Set
                Me(Me.tableteam.team_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property city() As String
            Get
                Return CType(Me(Me.tableteam.cityColumn),String)
            End Get
            Set
                Me(Me.tableteam.cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableteam.nameColumn),String)
            End Get
            Set
                Me(Me.tableteam.nameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vwPlayersActiveRow
        Inherits Global.System.Data.DataRow
        
        Private tablevwPlayersActive As vwPlayersActiveDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwPlayersActive = CType(Me.Table,vwPlayersActiveDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property player_id() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.player_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'player_id' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.player_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property full_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.full_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'full_name' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.full_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property first_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.first_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'first_name' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.first_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property last_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.last_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_name' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.last_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property team() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.teamColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'team' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.teamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property position() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.positionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'position' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.positionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uniform_number() As Short
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.uniform_numberColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uniform_number' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.uniform_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property college() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.collegeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'college' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.collegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property height() As Short
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.heightColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'height' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.heightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property weight() As Short
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.weightColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'weight' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property years_pro() As Short
            Get
                Try 
                    Return CType(Me(Me.tablevwPlayersActive.years_proColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'years_pro' in table 'vwPlayersActive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwPlayersActive.years_proColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isplayer_idNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.player_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setplayer_idNull()
            Me(Me.tablevwPlayersActive.player_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfull_nameNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.full_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfull_nameNull()
            Me(Me.tablevwPlayersActive.full_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfirst_nameNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.first_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfirst_nameNull()
            Me(Me.tablevwPlayersActive.first_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Islast_nameNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.last_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setlast_nameNull()
            Me(Me.tablevwPlayersActive.last_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsteamNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.teamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetteamNull()
            Me(Me.tablevwPlayersActive.teamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspositionNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.positionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpositionNull()
            Me(Me.tablevwPlayersActive.positionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isuniform_numberNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.uniform_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setuniform_numberNull()
            Me(Me.tablevwPlayersActive.uniform_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscollegeNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.collegeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcollegeNull()
            Me(Me.tablevwPlayersActive.collegeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsheightNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.heightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetheightNull()
            Me(Me.tablevwPlayersActive.heightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsweightNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetweightNull()
            Me(Me.tablevwPlayersActive.weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isyears_proNull() As Boolean
            Return Me.IsNull(Me.tablevwPlayersActive.years_proColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setyears_proNull()
            Me(Me.tablevwPlayersActive.years_proColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class driveRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As driveRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As driveRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As driveRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class gameRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As gameRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As gameRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As gameRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class metaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As metaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As metaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As metaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class playRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As playRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As playRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As playRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class play_playerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As play_playerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As play_playerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As play_playerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class playerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As playerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As playerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As playerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class teamRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As teamRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As teamRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As teamRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class vwPlayersActiveRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vwPlayersActiveRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As vwPlayersActiveRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As vwPlayersActiveRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsNFLdbTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class driveTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "drive"
            tableMapping.ColumnMappings.Add("gsis_id", "gsis_id")
            tableMapping.ColumnMappings.Add("drive_id", "drive_id")
            tableMapping.ColumnMappings.Add("start_field", "start_field")
            tableMapping.ColumnMappings.Add("start_time", "start_time")
            tableMapping.ColumnMappings.Add("end_field", "end_field")
            tableMapping.ColumnMappings.Add("end_time", "end_time")
            tableMapping.ColumnMappings.Add("pos_team", "pos_team")
            tableMapping.ColumnMappings.Add("pos_time", "pos_time")
            tableMapping.ColumnMappings.Add("first_downs", "first_downs")
            tableMapping.ColumnMappings.Add("result", "result")
            tableMapping.ColumnMappings.Add("penalty_yards", "penalty_yards")
            tableMapping.ColumnMappings.Add("yards_gained", "yards_gained")
            tableMapping.ColumnMappings.Add("play_count", "play_count")
            tableMapping.ColumnMappings.Add("time_inserted", "time_inserted")
            tableMapping.ColumnMappings.Add("time_updated", "time_updated")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""nfldb"".""public"".""drive"" WHERE ((""gsis_id"" = ?) AND (""drive_id"" = ?) "& _ 
                "AND ((? = 1 AND ""start_field"" IS NULL) OR (""start_field"" = ?)) AND (""start_time"""& _ 
                " = ?) AND ((? = 1 AND ""end_field"" IS NULL) OR (""end_field"" = ?)) AND (""end_time"""& _ 
                " = ?) AND (""pos_team"" = ?) AND ((? = 1 AND ""pos_time"" IS NULL) OR (""pos_time"" = "& _ 
                "?)) AND (""first_downs"" = ?) AND (""penalty_yards"" = ?) AND (""yards_gained"" = ?) A"& _ 
                "ND (""play_count"" = ?) AND (""time_inserted"" = ?) AND (""time_updated"" = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_start_field", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_field", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_start_field", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_field", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_start_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_end_field", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_field", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_end_field", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_field", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_end_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pos_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_pos_time", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_time", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pos_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_first_downs", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_downs", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_penalty_yards", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_yards", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_yards_gained", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_gained", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_play_count", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_count", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""nfldb"".""public"".""drive"" (""gsis_id"", ""drive_id"", ""start_field"", ""star"& _ 
                "t_time"", ""end_field"", ""end_time"", ""pos_team"", ""pos_time"", ""first_downs"", ""result"& _ 
                """, ""penalty_yards"", ""yards_gained"", ""play_count"", ""time_inserted"", ""time_updated"& _ 
                """) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("start_field", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_field", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("start_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("end_field", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_field", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("end_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pos_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pos_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("first_downs", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_downs", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("result", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "result", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("penalty_yards", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_yards", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("yards_gained", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_gained", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("play_count", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_count", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""nfldb"".""public"".""drive"" SET ""gsis_id"" = ?, ""drive_id"" = ?, ""start_field"" "& _ 
                "= ?, ""start_time"" = ?, ""end_field"" = ?, ""end_time"" = ?, ""pos_team"" = ?, ""pos_tim"& _ 
                "e"" = ?, ""first_downs"" = ?, ""result"" = ?, ""penalty_yards"" = ?, ""yards_gained"" = ?"& _ 
                ", ""play_count"" = ?, ""time_inserted"" = ?, ""time_updated"" = ? WHERE ((""gsis_id"" = "& _ 
                "?) AND (""drive_id"" = ?) AND ((? = 1 AND ""start_field"" IS NULL) OR (""start_field"""& _ 
                " = ?)) AND (""start_time"" = ?) AND ((? = 1 AND ""end_field"" IS NULL) OR (""end_fiel"& _ 
                "d"" = ?)) AND (""end_time"" = ?) AND (""pos_team"" = ?) AND ((? = 1 AND ""pos_time"" IS"& _ 
                " NULL) OR (""pos_time"" = ?)) AND (""first_downs"" = ?) AND (""penalty_yards"" = ?) AN"& _ 
                "D (""yards_gained"" = ?) AND (""play_count"" = ?) AND (""time_inserted"" = ?) AND (""ti"& _ 
                "me_updated"" = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("start_field", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_field", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("start_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("end_field", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_field", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("end_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pos_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pos_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("first_downs", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_downs", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("result", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "result", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("penalty_yards", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_yards", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("yards_gained", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_gained", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("play_count", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_count", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_start_field", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_field", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_start_field", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_field", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_start_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_end_field", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_field", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_end_field", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_field", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_end_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "end_time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pos_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_pos_time", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_time", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pos_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_first_downs", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_downs", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_penalty_yards", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_yards", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_yards_gained", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_gained", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_play_count", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_count", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.DailyPlayers_v2.My.MySettings.Default.conStringNFLdb
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""gsis_id"", ""drive_id"", ""start_field"", ""start_time"", ""end_field"", ""end_time"& _ 
                """, ""pos_team"", ""pos_time"", ""first_downs"", ""result"", ""penalty_yards"", ""yards_gain"& _ 
                "ed"", ""play_count"", ""time_inserted"", ""time_updated"" FROM ""public"".""drive"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsNFLdb.driveDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsNFLdb.driveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsNFLdb.driveDataTable = New dsNFLdb.driveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsNFLdb.driveDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsNFLdb) As Integer
            Return Me.Adapter.Update(dataSet, "drive")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_gsis_id As String, ByVal Original_drive_id As Short, ByVal Original_start_field As String, ByVal Original_start_time As String, ByVal Original_end_field As String, ByVal Original_end_time As String, ByVal Original_pos_team As String, ByVal Original_pos_time As String, ByVal Original_first_downs As Short, ByVal Original_penalty_yards As Short, ByVal Original_yards_gained As Short, ByVal Original_play_count As Short, ByVal Original_time_inserted As Date, ByVal Original_time_updated As Date) As Integer
            If (Original_gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_id")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_gsis_id,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_drive_id,Short)
            If (Original_start_field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_start_field")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_start_field,String)
            End If
            If (Original_start_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_start_time")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_start_time,String)
            End If
            If (Original_end_field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_end_field")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_end_field,String)
            End If
            If (Original_end_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_end_time")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_end_time,String)
            End If
            If (Original_pos_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pos_team")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_pos_team,String)
            End If
            If (Original_pos_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pos_time")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_pos_time,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_first_downs,Short)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_penalty_yards,Short)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_yards_gained,Short)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_play_count,Short)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_time_inserted,Date)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_time_updated,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal gsis_id As String, ByVal drive_id As Short, ByVal start_field As String, ByVal start_time As String, ByVal end_field As String, ByVal end_time As String, ByVal pos_team As String, ByVal pos_time As String, ByVal first_downs As Short, ByVal result As String, ByVal penalty_yards As Short, ByVal yards_gained As Short, ByVal play_count As Short, ByVal time_inserted As Date, ByVal time_updated As Date) As Integer
            If (gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_id")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(gsis_id,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(drive_id,Short)
            If (start_field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("start_field")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(start_field,String)
            End If
            If (start_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("start_time")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(start_time,String)
            End If
            If (end_field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("end_field")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(end_field,String)
            End If
            If (end_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("end_time")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(end_time,String)
            End If
            If (pos_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pos_team")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(pos_team,String)
            End If
            If (pos_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pos_time")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(pos_time,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(first_downs,Short)
            If (result Is Nothing) Then
                Throw New Global.System.ArgumentNullException("result")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(result,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(penalty_yards,Short)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(yards_gained,Short)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(play_count,Short)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(time_inserted,Date)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(time_updated,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal gsis_id As String,  _
                    ByVal drive_id As Short,  _
                    ByVal start_field As String,  _
                    ByVal start_time As String,  _
                    ByVal end_field As String,  _
                    ByVal end_time As String,  _
                    ByVal pos_team As String,  _
                    ByVal pos_time As String,  _
                    ByVal first_downs As Short,  _
                    ByVal result As String,  _
                    ByVal penalty_yards As Short,  _
                    ByVal yards_gained As Short,  _
                    ByVal play_count As Short,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date,  _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_drive_id As Short,  _
                    ByVal Original_start_field As String,  _
                    ByVal Original_start_time As String,  _
                    ByVal Original_end_field As String,  _
                    ByVal Original_end_time As String,  _
                    ByVal Original_pos_team As String,  _
                    ByVal Original_pos_time As String,  _
                    ByVal Original_first_downs As Short,  _
                    ByVal Original_penalty_yards As Short,  _
                    ByVal Original_yards_gained As Short,  _
                    ByVal Original_play_count As Short,  _
                    ByVal Original_time_inserted As Date,  _
                    ByVal Original_time_updated As Date) As Integer
            If (gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(gsis_id,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(drive_id,Short)
            If (start_field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("start_field")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(start_field,String)
            End If
            If (start_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("start_time")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(start_time,String)
            End If
            If (end_field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("end_field")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(end_field,String)
            End If
            If (end_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("end_time")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(end_time,String)
            End If
            If (pos_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pos_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(pos_team,String)
            End If
            If (pos_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pos_time")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(pos_time,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(first_downs,Short)
            If (result Is Nothing) Then
                Throw New Global.System.ArgumentNullException("result")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(result,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(penalty_yards,Short)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(yards_gained,Short)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(play_count,Short)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(time_inserted,Date)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(time_updated,Date)
            If (Original_gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_gsis_id,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_drive_id,Short)
            If (Original_start_field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_start_field")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_start_field,String)
            End If
            If (Original_start_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_start_time")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_start_time,String)
            End If
            If (Original_end_field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_end_field")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_end_field,String)
            End If
            If (Original_end_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_end_time")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_end_time,String)
            End If
            If (Original_pos_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pos_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_pos_team,String)
            End If
            If (Original_pos_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pos_time")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_pos_time,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_first_downs,Short)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_penalty_yards,Short)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_yards_gained,Short)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_play_count,Short)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_time_inserted,Date)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_time_updated,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal start_field As String,  _
                    ByVal start_time As String,  _
                    ByVal end_field As String,  _
                    ByVal end_time As String,  _
                    ByVal pos_team As String,  _
                    ByVal pos_time As String,  _
                    ByVal first_downs As Short,  _
                    ByVal result As String,  _
                    ByVal penalty_yards As Short,  _
                    ByVal yards_gained As Short,  _
                    ByVal play_count As Short,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date,  _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_drive_id As Short,  _
                    ByVal Original_start_field As String,  _
                    ByVal Original_start_time As String,  _
                    ByVal Original_end_field As String,  _
                    ByVal Original_end_time As String,  _
                    ByVal Original_pos_team As String,  _
                    ByVal Original_pos_time As String,  _
                    ByVal Original_first_downs As Short,  _
                    ByVal Original_penalty_yards As Short,  _
                    ByVal Original_yards_gained As Short,  _
                    ByVal Original_play_count As Short,  _
                    ByVal Original_time_inserted As Date,  _
                    ByVal Original_time_updated As Date) As Integer
            Return Me.Update(Original_gsis_id, Original_drive_id, start_field, start_time, end_field, end_time, pos_team, pos_time, first_downs, result, penalty_yards, yards_gained, play_count, time_inserted, time_updated, Original_gsis_id, Original_drive_id, Original_start_field, Original_start_time, Original_end_field, Original_end_time, Original_pos_team, Original_pos_time, Original_first_downs, Original_penalty_yards, Original_yards_gained, Original_play_count, Original_time_inserted, Original_time_updated)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class gameTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "game"
            tableMapping.ColumnMappings.Add("gsis_id", "gsis_id")
            tableMapping.ColumnMappings.Add("gamekey", "gamekey")
            tableMapping.ColumnMappings.Add("start_time", "start_time")
            tableMapping.ColumnMappings.Add("week", "week")
            tableMapping.ColumnMappings.Add("day_of_week", "day_of_week")
            tableMapping.ColumnMappings.Add("season_year", "season_year")
            tableMapping.ColumnMappings.Add("season_type", "season_type")
            tableMapping.ColumnMappings.Add("finished", "finished")
            tableMapping.ColumnMappings.Add("home_team", "home_team")
            tableMapping.ColumnMappings.Add("home_score", "home_score")
            tableMapping.ColumnMappings.Add("home_score_q1", "home_score_q1")
            tableMapping.ColumnMappings.Add("home_score_q2", "home_score_q2")
            tableMapping.ColumnMappings.Add("home_score_q3", "home_score_q3")
            tableMapping.ColumnMappings.Add("home_score_q4", "home_score_q4")
            tableMapping.ColumnMappings.Add("home_score_q5", "home_score_q5")
            tableMapping.ColumnMappings.Add("home_turnovers", "home_turnovers")
            tableMapping.ColumnMappings.Add("away_team", "away_team")
            tableMapping.ColumnMappings.Add("away_score", "away_score")
            tableMapping.ColumnMappings.Add("away_score_q1", "away_score_q1")
            tableMapping.ColumnMappings.Add("away_score_q2", "away_score_q2")
            tableMapping.ColumnMappings.Add("away_score_q3", "away_score_q3")
            tableMapping.ColumnMappings.Add("away_score_q4", "away_score_q4")
            tableMapping.ColumnMappings.Add("away_score_q5", "away_score_q5")
            tableMapping.ColumnMappings.Add("away_turnovers", "away_turnovers")
            tableMapping.ColumnMappings.Add("time_inserted", "time_inserted")
            tableMapping.ColumnMappings.Add("time_updated", "time_updated")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""nfldb"".""public"".""game"" WHERE ((""gsis_id"" = ?) AND ((? = 1 AND ""gamek"& _ 
                "ey"" IS NULL) OR (""gamekey"" = ?)) AND (""start_time"" = ?) AND (""week"" = ?) AND (""d"& _ 
                "ay_of_week"" = ?) AND (""season_year"" = ?) AND (""season_type"" = ?) AND (""finished"""& _ 
                " = ?) AND (""home_team"" = ?) AND (""home_score"" = ?) AND ((? = 1 AND ""home_score_q"& _ 
                "1"" IS NULL) OR (""home_score_q1"" = ?)) AND ((? = 1 AND ""home_score_q2"" IS NULL) O"& _ 
                "R (""home_score_q2"" = ?)) AND ((? = 1 AND ""home_score_q3"" IS NULL) OR (""home_scor"& _ 
                "e_q3"" = ?)) AND ((? = 1 AND ""home_score_q4"" IS NULL) OR (""home_score_q4"" = ?)) A"& _ 
                "ND ((? = 1 AND ""home_score_q5"" IS NULL) OR (""home_score_q5"" = ?)) AND (""home_tur"& _ 
                "novers"" = ?) AND (""away_team"" = ?) AND (""away_score"" = ?) AND ((? = 1 AND ""away_"& _ 
                "score_q1"" IS NULL) OR (""away_score_q1"" = ?)) AND ((? = 1 AND ""away_score_q2"" IS "& _ 
                "NULL) OR (""away_score_q2"" = ?)) AND ((? = 1 AND ""away_score_q3"" IS NULL) OR (""aw"& _ 
                "ay_score_q3"" = ?)) AND ((? = 1 AND ""away_score_q4"" IS NULL) OR (""away_score_q4"" "& _ 
                "= ?)) AND ((? = 1 AND ""away_score_q5"" IS NULL) OR (""away_score_q5"" = ?)) AND (""a"& _ 
                "way_turnovers"" = ?) AND (""time_inserted"" = ?) AND (""time_updated"" = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_gamekey", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gamekey", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gamekey", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gamekey", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_start_time", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_week", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "week", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_day_of_week", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "day_of_week", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_season_year", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_year", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_season_type", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_finished", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "finished", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q1", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q2", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q3", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q3", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q4", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q4", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q5", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q5", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_turnovers", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_turnovers", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q1", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q2", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q3", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q3", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q4", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q4", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q5", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q5", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_turnovers", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_turnovers", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""nfldb"".""public"".""game"" (""gsis_id"", ""gamekey"", ""start_time"", ""week"", "& _ 
                """day_of_week"", ""season_year"", ""season_type"", ""finished"", ""home_team"", ""home_scor"& _ 
                "e"", ""home_score_q1"", ""home_score_q2"", ""home_score_q3"", ""home_score_q4"", ""home_sc"& _ 
                "ore_q5"", ""home_turnovers"", ""away_team"", ""away_score"", ""away_score_q1"", ""away_sco"& _ 
                "re_q2"", ""away_score_q3"", ""away_score_q4"", ""away_score_q5"", ""away_turnovers"", ""ti"& _ 
                "me_inserted"", ""time_updated"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gamekey", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gamekey", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("start_time", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("week", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "week", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("day_of_week", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "day_of_week", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("season_year", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_year", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("season_type", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("finished", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "finished", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q1", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q2", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q3", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q4", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q5", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_turnovers", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_turnovers", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q1", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q2", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q3", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q4", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q5", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_turnovers", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_turnovers", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""nfldb"".""public"".""game"" SET ""gsis_id"" = ?, ""gamekey"" = ?, ""start_time"" = ?"& _ 
                ", ""week"" = ?, ""day_of_week"" = ?, ""season_year"" = ?, ""season_type"" = ?, ""finished"& _ 
                """ = ?, ""home_team"" = ?, ""home_score"" = ?, ""home_score_q1"" = ?, ""home_score_q2"" ="& _ 
                " ?, ""home_score_q3"" = ?, ""home_score_q4"" = ?, ""home_score_q5"" = ?, ""home_turnove"& _ 
                "rs"" = ?, ""away_team"" = ?, ""away_score"" = ?, ""away_score_q1"" = ?, ""away_score_q2"""& _ 
                " = ?, ""away_score_q3"" = ?, ""away_score_q4"" = ?, ""away_score_q5"" = ?, ""away_turno"& _ 
                "vers"" = ?, ""time_inserted"" = ?, ""time_updated"" = ? WHERE ((""gsis_id"" = ?) AND (("& _ 
                "? = 1 AND ""gamekey"" IS NULL) OR (""gamekey"" = ?)) AND (""start_time"" = ?) AND (""we"& _ 
                "ek"" = ?) AND (""day_of_week"" = ?) AND (""season_year"" = ?) AND (""season_type"" = ?)"& _ 
                " AND (""finished"" = ?) AND (""home_team"" = ?) AND (""home_score"" = ?) AND ((? = 1 A"& _ 
                "ND ""home_score_q1"" IS NULL) OR (""home_score_q1"" = ?)) AND ((? = 1 AND ""home_scor"& _ 
                "e_q2"" IS NULL) OR (""home_score_q2"" = ?)) AND ((? = 1 AND ""home_score_q3"" IS NULL"& _ 
                ") OR (""home_score_q3"" = ?)) AND ((? = 1 AND ""home_score_q4"" IS NULL) OR (""home_s"& _ 
                "core_q4"" = ?)) AND ((? = 1 AND ""home_score_q5"" IS NULL) OR (""home_score_q5"" = ?)"& _ 
                ") AND (""home_turnovers"" = ?) AND (""away_team"" = ?) AND (""away_score"" = ?) AND (("& _ 
                "? = 1 AND ""away_score_q1"" IS NULL) OR (""away_score_q1"" = ?)) AND ((? = 1 AND ""aw"& _ 
                "ay_score_q2"" IS NULL) OR (""away_score_q2"" = ?)) AND ((? = 1 AND ""away_score_q3"" "& _ 
                "IS NULL) OR (""away_score_q3"" = ?)) AND ((? = 1 AND ""away_score_q4"" IS NULL) OR ("& _ 
                """away_score_q4"" = ?)) AND ((? = 1 AND ""away_score_q5"" IS NULL) OR (""away_score_q"& _ 
                "5"" = ?)) AND (""away_turnovers"" = ?) AND (""time_inserted"" = ?) AND (""time_updated"& _ 
                """ = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gamekey", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gamekey", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("start_time", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("week", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "week", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("day_of_week", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "day_of_week", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("season_year", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_year", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("season_type", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("finished", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "finished", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q1", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q2", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q3", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q4", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_score_q5", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("home_turnovers", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_turnovers", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q1", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q2", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q3", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q4", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_score_q5", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("away_turnovers", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_turnovers", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_gamekey", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gamekey", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gamekey", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gamekey", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_start_time", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "start_time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_week", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "week", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_day_of_week", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "day_of_week", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_season_year", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_year", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_season_type", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_finished", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "finished", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q1", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q2", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q3", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q3", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q4", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q4", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_home_score_q5", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_score_q5", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_score_q5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_home_turnovers", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "home_turnovers", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q1", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q2", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q3", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q3", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q4", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q4", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_away_score_q5", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_score_q5", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_score_q5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_away_turnovers", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "away_turnovers", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.DailyPlayers_v2.My.MySettings.Default.conStringNFLdb
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""gsis_id"", ""gamekey"", ""start_time"", ""week"", ""day_of_week"", ""season_year"", "& _ 
                """season_type"", ""finished"", ""home_team"", ""home_score"", ""home_score_q1"", ""home_sco"& _ 
                "re_q2"", ""home_score_q3"", ""home_score_q4"", ""home_score_q5"", ""home_turnovers"", ""aw"& _ 
                "ay_team"", ""away_score"", ""away_score_q1"", ""away_score_q2"", ""away_score_q3"", ""away"& _ 
                "_score_q4"", ""away_score_q5"", ""away_turnovers"", ""time_inserted"", ""time_updated"" F"& _ 
                "ROM ""public"".""game"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsNFLdb.gameDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsNFLdb.gameDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsNFLdb.gameDataTable = New dsNFLdb.gameDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsNFLdb.gameDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsNFLdb) As Integer
            Return Me.Adapter.Update(dataSet, "game")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_gamekey As String,  _
                    ByVal Original_start_time As Date,  _
                    ByVal Original_week As Short,  _
                    ByVal Original_day_of_week As String,  _
                    ByVal Original_season_year As Short,  _
                    ByVal Original_season_type As String,  _
                    ByVal Original_finished As String,  _
                    ByVal Original_home_team As String,  _
                    ByVal Original_home_score As Short,  _
                    ByVal Original_home_score_q1 As Short,  _
                    ByVal Original_home_score_q2 As Short,  _
                    ByVal Original_home_score_q3 As Short,  _
                    ByVal Original_home_score_q4 As Short,  _
                    ByVal Original_home_score_q5 As Short,  _
                    ByVal Original_home_turnovers As Short,  _
                    ByVal Original_away_team As String,  _
                    ByVal Original_away_score As Short,  _
                    ByVal Original_away_score_q1 As Short,  _
                    ByVal Original_away_score_q2 As Short,  _
                    ByVal Original_away_score_q3 As Short,  _
                    ByVal Original_away_score_q4 As Short,  _
                    ByVal Original_away_score_q5 As Short,  _
                    ByVal Original_away_turnovers As Short,  _
                    ByVal Original_time_inserted As Date,  _
                    ByVal Original_time_updated As Date) As Integer
            If (Original_gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_id")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_gsis_id,String)
            End If
            If (Original_gamekey Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gamekey")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_gamekey,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_start_time,Date)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_week,Short)
            If (Original_day_of_week Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_day_of_week")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_day_of_week,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_season_year,Short)
            If (Original_season_type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_season_type")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_season_type,String)
            End If
            If (Original_finished Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_finished")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_finished,String)
            End If
            If (Original_home_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_home_team")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_home_team,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_home_score,Short)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_home_score_q1,Short)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_home_score_q2,Short)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_home_score_q3,Short)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_home_score_q4,Short)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_home_score_q5,Short)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_home_turnovers,Short)
            If (Original_away_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_away_team")
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_away_team,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_away_score,Short)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_away_score_q1,Short)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_away_score_q2,Short)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_away_score_q3,Short)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_away_score_q4,Short)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_away_score_q5,Short)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_away_turnovers,Short)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_time_inserted,Date)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_time_updated,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal gsis_id As String,  _
                    ByVal gamekey As String,  _
                    ByVal start_time As Date,  _
                    ByVal week As Short,  _
                    ByVal day_of_week As String,  _
                    ByVal season_year As Short,  _
                    ByVal season_type As String,  _
                    ByVal finished As String,  _
                    ByVal home_team As String,  _
                    ByVal home_score As Short,  _
                    ByVal home_score_q1 As Short,  _
                    ByVal home_score_q2 As Short,  _
                    ByVal home_score_q3 As Short,  _
                    ByVal home_score_q4 As Short,  _
                    ByVal home_score_q5 As Short,  _
                    ByVal home_turnovers As Short,  _
                    ByVal away_team As String,  _
                    ByVal away_score As Short,  _
                    ByVal away_score_q1 As Short,  _
                    ByVal away_score_q2 As Short,  _
                    ByVal away_score_q3 As Short,  _
                    ByVal away_score_q4 As Short,  _
                    ByVal away_score_q5 As Short,  _
                    ByVal away_turnovers As Short,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date) As Integer
            If (gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_id")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(gsis_id,String)
            End If
            If (gamekey Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gamekey")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(gamekey,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(start_time,Date)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(week,Short)
            If (day_of_week Is Nothing) Then
                Throw New Global.System.ArgumentNullException("day_of_week")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(day_of_week,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(season_year,Short)
            If (season_type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("season_type")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(season_type,String)
            End If
            If (finished Is Nothing) Then
                Throw New Global.System.ArgumentNullException("finished")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(finished,String)
            End If
            If (home_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("home_team")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(home_team,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(home_score,Short)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(home_score_q1,Short)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(home_score_q2,Short)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(home_score_q3,Short)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(home_score_q4,Short)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(home_score_q5,Short)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(home_turnovers,Short)
            If (away_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("away_team")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(away_team,String)
            End If
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(away_score,Short)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(away_score_q1,Short)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(away_score_q2,Short)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(away_score_q3,Short)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(away_score_q4,Short)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(away_score_q5,Short)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(away_turnovers,Short)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(time_inserted,Date)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(time_updated,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal gsis_id As String,  _
                    ByVal gamekey As String,  _
                    ByVal start_time As Date,  _
                    ByVal week As Short,  _
                    ByVal day_of_week As String,  _
                    ByVal season_year As Short,  _
                    ByVal season_type As String,  _
                    ByVal finished As String,  _
                    ByVal home_team As String,  _
                    ByVal home_score As Short,  _
                    ByVal home_score_q1 As Short,  _
                    ByVal home_score_q2 As Short,  _
                    ByVal home_score_q3 As Short,  _
                    ByVal home_score_q4 As Short,  _
                    ByVal home_score_q5 As Short,  _
                    ByVal home_turnovers As Short,  _
                    ByVal away_team As String,  _
                    ByVal away_score As Short,  _
                    ByVal away_score_q1 As Short,  _
                    ByVal away_score_q2 As Short,  _
                    ByVal away_score_q3 As Short,  _
                    ByVal away_score_q4 As Short,  _
                    ByVal away_score_q5 As Short,  _
                    ByVal away_turnovers As Short,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date,  _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_gamekey As String,  _
                    ByVal Original_start_time As Date,  _
                    ByVal Original_week As Short,  _
                    ByVal Original_day_of_week As String,  _
                    ByVal Original_season_year As Short,  _
                    ByVal Original_season_type As String,  _
                    ByVal Original_finished As String,  _
                    ByVal Original_home_team As String,  _
                    ByVal Original_home_score As Short,  _
                    ByVal Original_home_score_q1 As Short,  _
                    ByVal Original_home_score_q2 As Short,  _
                    ByVal Original_home_score_q3 As Short,  _
                    ByVal Original_home_score_q4 As Short,  _
                    ByVal Original_home_score_q5 As Short,  _
                    ByVal Original_home_turnovers As Short,  _
                    ByVal Original_away_team As String,  _
                    ByVal Original_away_score As Short,  _
                    ByVal Original_away_score_q1 As Short,  _
                    ByVal Original_away_score_q2 As Short,  _
                    ByVal Original_away_score_q3 As Short,  _
                    ByVal Original_away_score_q4 As Short,  _
                    ByVal Original_away_score_q5 As Short,  _
                    ByVal Original_away_turnovers As Short,  _
                    ByVal Original_time_inserted As Date,  _
                    ByVal Original_time_updated As Date) As Integer
            If (gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(gsis_id,String)
            End If
            If (gamekey Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gamekey")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(gamekey,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(start_time,Date)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(week,Short)
            If (day_of_week Is Nothing) Then
                Throw New Global.System.ArgumentNullException("day_of_week")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(day_of_week,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(season_year,Short)
            If (season_type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("season_type")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(season_type,String)
            End If
            If (finished Is Nothing) Then
                Throw New Global.System.ArgumentNullException("finished")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(finished,String)
            End If
            If (home_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("home_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(home_team,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(home_score,Short)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(home_score_q1,Short)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(home_score_q2,Short)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(home_score_q3,Short)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(home_score_q4,Short)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(home_score_q5,Short)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(home_turnovers,Short)
            If (away_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("away_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(away_team,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(away_score,Short)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(away_score_q1,Short)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(away_score_q2,Short)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(away_score_q3,Short)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(away_score_q4,Short)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(away_score_q5,Short)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(away_turnovers,Short)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(time_inserted,Date)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(time_updated,Date)
            If (Original_gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_gsis_id,String)
            End If
            If (Original_gamekey Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gamekey")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_gamekey,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_start_time,Date)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_week,Short)
            If (Original_day_of_week Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_day_of_week")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_day_of_week,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_season_year,Short)
            If (Original_season_type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_season_type")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_season_type,String)
            End If
            If (Original_finished Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_finished")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_finished,String)
            End If
            If (Original_home_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_home_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_home_team,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_home_score,Short)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_home_score_q1,Short)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_home_score_q2,Short)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_home_score_q3,Short)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_home_score_q4,Short)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_home_score_q5,Short)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_home_turnovers,Short)
            If (Original_away_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_away_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_away_team,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_away_score,Short)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_away_score_q1,Short)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_away_score_q2,Short)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_away_score_q3,Short)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_away_score_q4,Short)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_away_score_q5,Short)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_away_turnovers,Short)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_time_inserted,Date)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_time_updated,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal gamekey As String,  _
                    ByVal start_time As Date,  _
                    ByVal week As Short,  _
                    ByVal day_of_week As String,  _
                    ByVal season_year As Short,  _
                    ByVal season_type As String,  _
                    ByVal finished As String,  _
                    ByVal home_team As String,  _
                    ByVal home_score As Short,  _
                    ByVal home_score_q1 As Short,  _
                    ByVal home_score_q2 As Short,  _
                    ByVal home_score_q3 As Short,  _
                    ByVal home_score_q4 As Short,  _
                    ByVal home_score_q5 As Short,  _
                    ByVal home_turnovers As Short,  _
                    ByVal away_team As String,  _
                    ByVal away_score As Short,  _
                    ByVal away_score_q1 As Short,  _
                    ByVal away_score_q2 As Short,  _
                    ByVal away_score_q3 As Short,  _
                    ByVal away_score_q4 As Short,  _
                    ByVal away_score_q5 As Short,  _
                    ByVal away_turnovers As Short,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date,  _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_gamekey As String,  _
                    ByVal Original_start_time As Date,  _
                    ByVal Original_week As Short,  _
                    ByVal Original_day_of_week As String,  _
                    ByVal Original_season_year As Short,  _
                    ByVal Original_season_type As String,  _
                    ByVal Original_finished As String,  _
                    ByVal Original_home_team As String,  _
                    ByVal Original_home_score As Short,  _
                    ByVal Original_home_score_q1 As Short,  _
                    ByVal Original_home_score_q2 As Short,  _
                    ByVal Original_home_score_q3 As Short,  _
                    ByVal Original_home_score_q4 As Short,  _
                    ByVal Original_home_score_q5 As Short,  _
                    ByVal Original_home_turnovers As Short,  _
                    ByVal Original_away_team As String,  _
                    ByVal Original_away_score As Short,  _
                    ByVal Original_away_score_q1 As Short,  _
                    ByVal Original_away_score_q2 As Short,  _
                    ByVal Original_away_score_q3 As Short,  _
                    ByVal Original_away_score_q4 As Short,  _
                    ByVal Original_away_score_q5 As Short,  _
                    ByVal Original_away_turnovers As Short,  _
                    ByVal Original_time_inserted As Date,  _
                    ByVal Original_time_updated As Date) As Integer
            Return Me.Update(Original_gsis_id, gamekey, start_time, week, day_of_week, season_year, season_type, finished, home_team, home_score, home_score_q1, home_score_q2, home_score_q3, home_score_q4, home_score_q5, home_turnovers, away_team, away_score, away_score_q1, away_score_q2, away_score_q3, away_score_q4, away_score_q5, away_turnovers, time_inserted, time_updated, Original_gsis_id, Original_gamekey, Original_start_time, Original_week, Original_day_of_week, Original_season_year, Original_season_type, Original_finished, Original_home_team, Original_home_score, Original_home_score_q1, Original_home_score_q2, Original_home_score_q3, Original_home_score_q4, Original_home_score_q5, Original_home_turnovers, Original_away_team, Original_away_score, Original_away_score_q1, Original_away_score_q2, Original_away_score_q3, Original_away_score_q4, Original_away_score_q5, Original_away_turnovers, Original_time_inserted, Original_time_updated)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class metaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "meta"
            tableMapping.ColumnMappings.Add("version", "version")
            tableMapping.ColumnMappings.Add("last_roster_download", "last_roster_download")
            tableMapping.ColumnMappings.Add("season_type", "season_type")
            tableMapping.ColumnMappings.Add("season_year", "season_year")
            tableMapping.ColumnMappings.Add("week", "week")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""nfldb"".""public"".""meta"" (""version"", ""last_roster_download"", ""season_t"& _ 
                "ype"", ""season_year"", ""week"") VALUES (?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("version", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "version", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("last_roster_download", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "last_roster_download", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("season_type", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("season_year", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "season_year", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("week", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "week", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.DailyPlayers_v2.My.MySettings.Default.conStringNFLdb
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""version"", ""last_roster_download"", ""season_type"", ""season_year"", ""week"" FR"& _ 
                "OM ""public"".""meta"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsNFLdb.metaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsNFLdb.metaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsNFLdb.metaDataTable = New dsNFLdb.metaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsNFLdb.metaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsNFLdb) As Integer
            Return Me.Adapter.Update(dataSet, "meta")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal version As Short, ByVal last_roster_download As Date, ByVal season_type As String, ByVal season_year As Short, ByVal week As Short) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(version,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(last_roster_download,Date)
            If (season_type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("season_type")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(season_type,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(season_year,Short)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(week,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class playTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "play"
            tableMapping.ColumnMappings.Add("gsis_id", "gsis_id")
            tableMapping.ColumnMappings.Add("drive_id", "drive_id")
            tableMapping.ColumnMappings.Add("play_id", "play_id")
            tableMapping.ColumnMappings.Add("time", "time")
            tableMapping.ColumnMappings.Add("pos_team", "pos_team")
            tableMapping.ColumnMappings.Add("yardline", "yardline")
            tableMapping.ColumnMappings.Add("down", "down")
            tableMapping.ColumnMappings.Add("yards_to_go", "yards_to_go")
            tableMapping.ColumnMappings.Add("description", "description")
            tableMapping.ColumnMappings.Add("note", "note")
            tableMapping.ColumnMappings.Add("time_inserted", "time_inserted")
            tableMapping.ColumnMappings.Add("time_updated", "time_updated")
            tableMapping.ColumnMappings.Add("first_down", "first_down")
            tableMapping.ColumnMappings.Add("fourth_down_att", "fourth_down_att")
            tableMapping.ColumnMappings.Add("fourth_down_conv", "fourth_down_conv")
            tableMapping.ColumnMappings.Add("fourth_down_failed", "fourth_down_failed")
            tableMapping.ColumnMappings.Add("passing_first_down", "passing_first_down")
            tableMapping.ColumnMappings.Add("penalty", "penalty")
            tableMapping.ColumnMappings.Add("penalty_first_down", "penalty_first_down")
            tableMapping.ColumnMappings.Add("penalty_yds", "penalty_yds")
            tableMapping.ColumnMappings.Add("rushing_first_down", "rushing_first_down")
            tableMapping.ColumnMappings.Add("third_down_att", "third_down_att")
            tableMapping.ColumnMappings.Add("third_down_conv", "third_down_conv")
            tableMapping.ColumnMappings.Add("third_down_failed", "third_down_failed")
            tableMapping.ColumnMappings.Add("timeout", "timeout")
            tableMapping.ColumnMappings.Add("xp_aborted", "xp_aborted")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""nfldb"".""public"".""play"" WHERE ((""gsis_id"" = ?) AND (""drive_id"" = ?) A"& _ 
                "ND (""play_id"" = ?) AND (""time"" = ?) AND (""pos_team"" = ?) AND ((? = 1 AND ""yardli"& _ 
                "ne"" IS NULL) OR (""yardline"" = ?)) AND ((? = 1 AND ""down"" IS NULL) OR (""down"" = ?"& _ 
                ")) AND ((? = 1 AND ""yards_to_go"" IS NULL) OR (""yards_to_go"" = ?)) AND (""time_ins"& _ 
                "erted"" = ?) AND (""time_updated"" = ?) AND (""first_down"" = ?) AND (""fourth_down_at"& _ 
                "t"" = ?) AND (""fourth_down_conv"" = ?) AND (""fourth_down_failed"" = ?) AND (""passin"& _ 
                "g_first_down"" = ?) AND (""penalty"" = ?) AND (""penalty_first_down"" = ?) AND (""pena"& _ 
                "lty_yds"" = ?) AND (""rushing_first_down"" = ?) AND (""third_down_att"" = ?) AND (""th"& _ 
                "ird_down_conv"" = ?) AND (""third_down_failed"" = ?) AND (""timeout"" = ?) AND (""xp_a"& _ 
                "borted"" = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_play_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pos_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_yardline", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yardline", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_yardline", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yardline", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_down", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "down", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_yards_to_go", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_to_go", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_yards_to_go", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_to_go", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fourth_down_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_att", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fourth_down_conv", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_conv", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fourth_down_failed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_failed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_first_down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_penalty", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_penalty_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_first_down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_penalty_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_first_down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_third_down_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_att", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_third_down_conv", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_conv", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_third_down_failed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_failed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_timeout", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "timeout", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_xp_aborted", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "xp_aborted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""nfldb"".""public"".""play"" (""gsis_id"", ""drive_id"", ""play_id"", ""time"", ""p"& _ 
                "os_team"", ""yardline"", ""down"", ""yards_to_go"", ""description"", ""note"", ""time_insert"& _ 
                "ed"", ""time_updated"", ""first_down"", ""fourth_down_att"", ""fourth_down_conv"", ""fourt"& _ 
                "h_down_failed"", ""passing_first_down"", ""penalty"", ""penalty_first_down"", ""penalty_"& _ 
                "yds"", ""rushing_first_down"", ""third_down_att"", ""third_down_conv"", ""third_down_fai"& _ 
                "led"", ""timeout"", ""xp_aborted"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("play_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pos_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("yardline", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yardline", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("yards_to_go", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_to_go", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("description", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("note", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "note", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fourth_down_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_att", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fourth_down_conv", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_conv", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fourth_down_failed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_failed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_first_down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("penalty", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("penalty_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_first_down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("penalty_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_first_down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("third_down_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_att", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("third_down_conv", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_conv", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("third_down_failed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_failed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("timeout", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "timeout", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("xp_aborted", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "xp_aborted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""nfldb"".""public"".""play"" SET ""gsis_id"" = ?, ""drive_id"" = ?, ""play_id"" = ?, "& _ 
                """time"" = ?, ""pos_team"" = ?, ""yardline"" = ?, ""down"" = ?, ""yards_to_go"" = ?, ""desc"& _ 
                "ription"" = ?, ""note"" = ?, ""time_inserted"" = ?, ""time_updated"" = ?, ""first_down"" "& _ 
                "= ?, ""fourth_down_att"" = ?, ""fourth_down_conv"" = ?, ""fourth_down_failed"" = ?, ""p"& _ 
                "assing_first_down"" = ?, ""penalty"" = ?, ""penalty_first_down"" = ?, ""penalty_yds"" ="& _ 
                " ?, ""rushing_first_down"" = ?, ""third_down_att"" = ?, ""third_down_conv"" = ?, ""thir"& _ 
                "d_down_failed"" = ?, ""timeout"" = ?, ""xp_aborted"" = ? WHERE ((""gsis_id"" = ?) AND ("& _ 
                """drive_id"" = ?) AND (""play_id"" = ?) AND (""time"" = ?) AND (""pos_team"" = ?) AND (("& _ 
                "? = 1 AND ""yardline"" IS NULL) OR (""yardline"" = ?)) AND ((? = 1 AND ""down"" IS NUL"& _ 
                "L) OR (""down"" = ?)) AND ((? = 1 AND ""yards_to_go"" IS NULL) OR (""yards_to_go"" = ?"& _ 
                ")) AND (""time_inserted"" = ?) AND (""time_updated"" = ?) AND (""first_down"" = ?) AND"& _ 
                " (""fourth_down_att"" = ?) AND (""fourth_down_conv"" = ?) AND (""fourth_down_failed"" "& _ 
                "= ?) AND (""passing_first_down"" = ?) AND (""penalty"" = ?) AND (""penalty_first_down"& _ 
                """ = ?) AND (""penalty_yds"" = ?) AND (""rushing_first_down"" = ?) AND (""third_down_a"& _ 
                "tt"" = ?) AND (""third_down_conv"" = ?) AND (""third_down_failed"" = ?) AND (""timeout"& _ 
                """ = ?) AND (""xp_aborted"" = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("play_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pos_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("yardline", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yardline", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("yards_to_go", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_to_go", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("description", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("note", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "note", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fourth_down_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_att", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fourth_down_conv", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_conv", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fourth_down_failed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_failed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_first_down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("penalty", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("penalty_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_first_down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("penalty_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_first_down", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("third_down_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_att", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("third_down_conv", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_conv", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("third_down_failed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_failed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("timeout", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "timeout", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("xp_aborted", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "xp_aborted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_play_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_pos_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pos_team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_yardline", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yardline", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_yardline", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yardline", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_down", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "down", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_yards_to_go", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_to_go", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_yards_to_go", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "yards_to_go", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_inserted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_inserted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_time_updated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "time_updated", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fourth_down_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_att", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fourth_down_conv", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_conv", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fourth_down_failed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fourth_down_failed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_first_down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_penalty", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_penalty_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_first_down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_penalty_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "penalty_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_first_down", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_first_down", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_third_down_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_att", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_third_down_conv", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_conv", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_third_down_failed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "third_down_failed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_timeout", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "timeout", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_xp_aborted", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "xp_aborted", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.DailyPlayers_v2.My.MySettings.Default.conStringNFLdb
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""gsis_id"", ""drive_id"", ""play_id"", ""time"", ""pos_team"", ""yardline"", ""down"", "& _ 
                """yards_to_go"", ""description"", ""note"", ""time_inserted"", ""time_updated"", ""first_do"& _ 
                "wn"", ""fourth_down_att"", ""fourth_down_conv"", ""fourth_down_failed"", ""passing_first"& _ 
                "_down"", ""penalty"", ""penalty_first_down"", ""penalty_yds"", ""rushing_first_down"", ""t"& _ 
                "hird_down_att"", ""third_down_conv"", ""third_down_failed"", ""timeout"", ""xp_aborted"" "& _ 
                "FROM ""public"".""play"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsNFLdb.playDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsNFLdb.playDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsNFLdb.playDataTable = New dsNFLdb.playDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsNFLdb.playDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsNFLdb) As Integer
            Return Me.Adapter.Update(dataSet, "play")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_drive_id As Short,  _
                    ByVal Original_play_id As Short,  _
                    ByVal Original_time As String,  _
                    ByVal Original_pos_team As String,  _
                    ByVal Original_yardline As String,  _
                    ByVal Original_down As Short,  _
                    ByVal Original_yards_to_go As Short,  _
                    ByVal Original_time_inserted As Date,  _
                    ByVal Original_time_updated As Date,  _
                    ByVal Original_first_down As Short,  _
                    ByVal Original_fourth_down_att As Short,  _
                    ByVal Original_fourth_down_conv As Short,  _
                    ByVal Original_fourth_down_failed As Short,  _
                    ByVal Original_passing_first_down As Short,  _
                    ByVal Original_penalty As Short,  _
                    ByVal Original_penalty_first_down As Short,  _
                    ByVal Original_penalty_yds As Short,  _
                    ByVal Original_rushing_first_down As Short,  _
                    ByVal Original_third_down_att As Short,  _
                    ByVal Original_third_down_conv As Short,  _
                    ByVal Original_third_down_failed As Short,  _
                    ByVal Original_timeout As Short,  _
                    ByVal Original_xp_aborted As Short) As Integer
            If (Original_gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_id")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_gsis_id,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_drive_id,Short)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_play_id,Short)
            If (Original_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_time")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_time,String)
            End If
            If (Original_pos_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pos_team")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_pos_team,String)
            End If
            If (Original_yardline Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_yardline")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_yardline,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_down,Short)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_yards_to_go,Short)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_time_inserted,Date)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_time_updated,Date)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_first_down,Short)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_fourth_down_att,Short)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_fourth_down_conv,Short)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_fourth_down_failed,Short)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_passing_first_down,Short)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_penalty,Short)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_penalty_first_down,Short)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_penalty_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_rushing_first_down,Short)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_third_down_att,Short)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_third_down_conv,Short)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_third_down_failed,Short)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_timeout,Short)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_xp_aborted,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal gsis_id As String,  _
                    ByVal drive_id As Short,  _
                    ByVal play_id As Short,  _
                    ByVal time As String,  _
                    ByVal pos_team As String,  _
                    ByVal yardline As String,  _
                    ByVal down As Short,  _
                    ByVal yards_to_go As Short,  _
                    ByVal description As String,  _
                    ByVal note As String,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date,  _
                    ByVal first_down As Short,  _
                    ByVal fourth_down_att As Short,  _
                    ByVal fourth_down_conv As Short,  _
                    ByVal fourth_down_failed As Short,  _
                    ByVal passing_first_down As Short,  _
                    ByVal penalty As Short,  _
                    ByVal penalty_first_down As Short,  _
                    ByVal penalty_yds As Short,  _
                    ByVal rushing_first_down As Short,  _
                    ByVal third_down_att As Short,  _
                    ByVal third_down_conv As Short,  _
                    ByVal third_down_failed As Short,  _
                    ByVal timeout As Short,  _
                    ByVal xp_aborted As Short) As Integer
            If (gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_id")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(gsis_id,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(drive_id,Short)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(play_id,Short)
            If (time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("time")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(time,String)
            End If
            If (pos_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pos_team")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(pos_team,String)
            End If
            If (yardline Is Nothing) Then
                Throw New Global.System.ArgumentNullException("yardline")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(yardline,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(down,Short)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(yards_to_go,Short)
            If (description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("description")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(description,String)
            End If
            If (note Is Nothing) Then
                Throw New Global.System.ArgumentNullException("note")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(note,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(time_inserted,Date)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(time_updated,Date)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(first_down,Short)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(fourth_down_att,Short)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(fourth_down_conv,Short)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(fourth_down_failed,Short)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(passing_first_down,Short)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(penalty,Short)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(penalty_first_down,Short)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(penalty_yds,Short)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(rushing_first_down,Short)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(third_down_att,Short)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(third_down_conv,Short)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(third_down_failed,Short)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(timeout,Short)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(xp_aborted,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal gsis_id As String,  _
                    ByVal drive_id As Short,  _
                    ByVal play_id As Short,  _
                    ByVal time As String,  _
                    ByVal pos_team As String,  _
                    ByVal yardline As String,  _
                    ByVal down As Short,  _
                    ByVal yards_to_go As Short,  _
                    ByVal description As String,  _
                    ByVal note As String,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date,  _
                    ByVal first_down As Short,  _
                    ByVal fourth_down_att As Short,  _
                    ByVal fourth_down_conv As Short,  _
                    ByVal fourth_down_failed As Short,  _
                    ByVal passing_first_down As Short,  _
                    ByVal penalty As Short,  _
                    ByVal penalty_first_down As Short,  _
                    ByVal penalty_yds As Short,  _
                    ByVal rushing_first_down As Short,  _
                    ByVal third_down_att As Short,  _
                    ByVal third_down_conv As Short,  _
                    ByVal third_down_failed As Short,  _
                    ByVal timeout As Short,  _
                    ByVal xp_aborted As Short,  _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_drive_id As Short,  _
                    ByVal Original_play_id As Short,  _
                    ByVal Original_time As String,  _
                    ByVal Original_pos_team As String,  _
                    ByVal Original_yardline As String,  _
                    ByVal Original_down As Short,  _
                    ByVal Original_yards_to_go As Short,  _
                    ByVal Original_time_inserted As Date,  _
                    ByVal Original_time_updated As Date,  _
                    ByVal Original_first_down As Short,  _
                    ByVal Original_fourth_down_att As Short,  _
                    ByVal Original_fourth_down_conv As Short,  _
                    ByVal Original_fourth_down_failed As Short,  _
                    ByVal Original_passing_first_down As Short,  _
                    ByVal Original_penalty As Short,  _
                    ByVal Original_penalty_first_down As Short,  _
                    ByVal Original_penalty_yds As Short,  _
                    ByVal Original_rushing_first_down As Short,  _
                    ByVal Original_third_down_att As Short,  _
                    ByVal Original_third_down_conv As Short,  _
                    ByVal Original_third_down_failed As Short,  _
                    ByVal Original_timeout As Short,  _
                    ByVal Original_xp_aborted As Short) As Integer
            If (gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(gsis_id,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(drive_id,Short)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(play_id,Short)
            If (time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("time")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(time,String)
            End If
            If (pos_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pos_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(pos_team,String)
            End If
            If (yardline Is Nothing) Then
                Throw New Global.System.ArgumentNullException("yardline")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(yardline,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(down,Short)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(yards_to_go,Short)
            If (description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("description")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(description,String)
            End If
            If (note Is Nothing) Then
                Throw New Global.System.ArgumentNullException("note")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(note,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(time_inserted,Date)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(time_updated,Date)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(first_down,Short)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(fourth_down_att,Short)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(fourth_down_conv,Short)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(fourth_down_failed,Short)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(passing_first_down,Short)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(penalty,Short)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(penalty_first_down,Short)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(penalty_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(rushing_first_down,Short)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(third_down_att,Short)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(third_down_conv,Short)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(third_down_failed,Short)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(timeout,Short)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(xp_aborted,Short)
            If (Original_gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_gsis_id,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_drive_id,Short)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_play_id,Short)
            If (Original_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_time")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_time,String)
            End If
            If (Original_pos_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pos_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_pos_team,String)
            End If
            If (Original_yardline Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_yardline")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_yardline,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_down,Short)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_yards_to_go,Short)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_time_inserted,Date)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_time_updated,Date)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_first_down,Short)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_fourth_down_att,Short)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_fourth_down_conv,Short)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_fourth_down_failed,Short)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_passing_first_down,Short)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_penalty,Short)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_penalty_first_down,Short)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_penalty_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_rushing_first_down,Short)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_third_down_att,Short)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_third_down_conv,Short)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_third_down_failed,Short)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_timeout,Short)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_xp_aborted,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal time As String,  _
                    ByVal pos_team As String,  _
                    ByVal yardline As String,  _
                    ByVal down As Short,  _
                    ByVal yards_to_go As Short,  _
                    ByVal description As String,  _
                    ByVal note As String,  _
                    ByVal time_inserted As Date,  _
                    ByVal time_updated As Date,  _
                    ByVal first_down As Short,  _
                    ByVal fourth_down_att As Short,  _
                    ByVal fourth_down_conv As Short,  _
                    ByVal fourth_down_failed As Short,  _
                    ByVal passing_first_down As Short,  _
                    ByVal penalty As Short,  _
                    ByVal penalty_first_down As Short,  _
                    ByVal penalty_yds As Short,  _
                    ByVal rushing_first_down As Short,  _
                    ByVal third_down_att As Short,  _
                    ByVal third_down_conv As Short,  _
                    ByVal third_down_failed As Short,  _
                    ByVal timeout As Short,  _
                    ByVal xp_aborted As Short,  _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_drive_id As Short,  _
                    ByVal Original_play_id As Short,  _
                    ByVal Original_time As String,  _
                    ByVal Original_pos_team As String,  _
                    ByVal Original_yardline As String,  _
                    ByVal Original_down As Short,  _
                    ByVal Original_yards_to_go As Short,  _
                    ByVal Original_time_inserted As Date,  _
                    ByVal Original_time_updated As Date,  _
                    ByVal Original_first_down As Short,  _
                    ByVal Original_fourth_down_att As Short,  _
                    ByVal Original_fourth_down_conv As Short,  _
                    ByVal Original_fourth_down_failed As Short,  _
                    ByVal Original_passing_first_down As Short,  _
                    ByVal Original_penalty As Short,  _
                    ByVal Original_penalty_first_down As Short,  _
                    ByVal Original_penalty_yds As Short,  _
                    ByVal Original_rushing_first_down As Short,  _
                    ByVal Original_third_down_att As Short,  _
                    ByVal Original_third_down_conv As Short,  _
                    ByVal Original_third_down_failed As Short,  _
                    ByVal Original_timeout As Short,  _
                    ByVal Original_xp_aborted As Short) As Integer
            Return Me.Update(Original_gsis_id, Original_drive_id, Original_play_id, time, pos_team, yardline, down, yards_to_go, description, note, time_inserted, time_updated, first_down, fourth_down_att, fourth_down_conv, fourth_down_failed, passing_first_down, penalty, penalty_first_down, penalty_yds, rushing_first_down, third_down_att, third_down_conv, third_down_failed, timeout, xp_aborted, Original_gsis_id, Original_drive_id, Original_play_id, Original_time, Original_pos_team, Original_yardline, Original_down, Original_yards_to_go, Original_time_inserted, Original_time_updated, Original_first_down, Original_fourth_down_att, Original_fourth_down_conv, Original_fourth_down_failed, Original_passing_first_down, Original_penalty, Original_penalty_first_down, Original_penalty_yds, Original_rushing_first_down, Original_third_down_att, Original_third_down_conv, Original_third_down_failed, Original_timeout, Original_xp_aborted)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class play_playerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "play_player"
            tableMapping.ColumnMappings.Add("gsis_id", "gsis_id")
            tableMapping.ColumnMappings.Add("drive_id", "drive_id")
            tableMapping.ColumnMappings.Add("play_id", "play_id")
            tableMapping.ColumnMappings.Add("player_id", "player_id")
            tableMapping.ColumnMappings.Add("team", "team")
            tableMapping.ColumnMappings.Add("defense_ast", "defense_ast")
            tableMapping.ColumnMappings.Add("defense_ffum", "defense_ffum")
            tableMapping.ColumnMappings.Add("defense_fgblk", "defense_fgblk")
            tableMapping.ColumnMappings.Add("defense_frec", "defense_frec")
            tableMapping.ColumnMappings.Add("defense_frec_tds", "defense_frec_tds")
            tableMapping.ColumnMappings.Add("defense_frec_yds", "defense_frec_yds")
            tableMapping.ColumnMappings.Add("defense_int", "defense_int")
            tableMapping.ColumnMappings.Add("defense_int_tds", "defense_int_tds")
            tableMapping.ColumnMappings.Add("defense_int_yds", "defense_int_yds")
            tableMapping.ColumnMappings.Add("defense_misc_tds", "defense_misc_tds")
            tableMapping.ColumnMappings.Add("defense_misc_yds", "defense_misc_yds")
            tableMapping.ColumnMappings.Add("defense_pass_def", "defense_pass_def")
            tableMapping.ColumnMappings.Add("defense_puntblk", "defense_puntblk")
            tableMapping.ColumnMappings.Add("defense_qbhit", "defense_qbhit")
            tableMapping.ColumnMappings.Add("defense_safe", "defense_safe")
            tableMapping.ColumnMappings.Add("defense_sk", "defense_sk")
            tableMapping.ColumnMappings.Add("defense_sk_yds", "defense_sk_yds")
            tableMapping.ColumnMappings.Add("defense_tkl", "defense_tkl")
            tableMapping.ColumnMappings.Add("defense_tkl_loss", "defense_tkl_loss")
            tableMapping.ColumnMappings.Add("defense_tkl_loss_yds", "defense_tkl_loss_yds")
            tableMapping.ColumnMappings.Add("defense_tkl_primary", "defense_tkl_primary")
            tableMapping.ColumnMappings.Add("defense_xpblk", "defense_xpblk")
            tableMapping.ColumnMappings.Add("fumbles_forced", "fumbles_forced")
            tableMapping.ColumnMappings.Add("fumbles_lost", "fumbles_lost")
            tableMapping.ColumnMappings.Add("fumbles_notforced", "fumbles_notforced")
            tableMapping.ColumnMappings.Add("fumbles_oob", "fumbles_oob")
            tableMapping.ColumnMappings.Add("fumbles_rec", "fumbles_rec")
            tableMapping.ColumnMappings.Add("fumbles_rec_tds", "fumbles_rec_tds")
            tableMapping.ColumnMappings.Add("fumbles_rec_yds", "fumbles_rec_yds")
            tableMapping.ColumnMappings.Add("fumbles_tot", "fumbles_tot")
            tableMapping.ColumnMappings.Add("kicking_all_yds", "kicking_all_yds")
            tableMapping.ColumnMappings.Add("kicking_downed", "kicking_downed")
            tableMapping.ColumnMappings.Add("kicking_fga", "kicking_fga")
            tableMapping.ColumnMappings.Add("kicking_fgb", "kicking_fgb")
            tableMapping.ColumnMappings.Add("kicking_fgm", "kicking_fgm")
            tableMapping.ColumnMappings.Add("kicking_fgm_yds", "kicking_fgm_yds")
            tableMapping.ColumnMappings.Add("kicking_fgmissed", "kicking_fgmissed")
            tableMapping.ColumnMappings.Add("kicking_fgmissed_yds", "kicking_fgmissed_yds")
            tableMapping.ColumnMappings.Add("kicking_i20", "kicking_i20")
            tableMapping.ColumnMappings.Add("kicking_rec", "kicking_rec")
            tableMapping.ColumnMappings.Add("kicking_rec_tds", "kicking_rec_tds")
            tableMapping.ColumnMappings.Add("kicking_tot", "kicking_tot")
            tableMapping.ColumnMappings.Add("kicking_touchback", "kicking_touchback")
            tableMapping.ColumnMappings.Add("kicking_xpa", "kicking_xpa")
            tableMapping.ColumnMappings.Add("kicking_xpb", "kicking_xpb")
            tableMapping.ColumnMappings.Add("kicking_xpmade", "kicking_xpmade")
            tableMapping.ColumnMappings.Add("kicking_xpmissed", "kicking_xpmissed")
            tableMapping.ColumnMappings.Add("kicking_yds", "kicking_yds")
            tableMapping.ColumnMappings.Add("kickret_fair", "kickret_fair")
            tableMapping.ColumnMappings.Add("kickret_oob", "kickret_oob")
            tableMapping.ColumnMappings.Add("kickret_ret", "kickret_ret")
            tableMapping.ColumnMappings.Add("kickret_tds", "kickret_tds")
            tableMapping.ColumnMappings.Add("kickret_touchback", "kickret_touchback")
            tableMapping.ColumnMappings.Add("kickret_yds", "kickret_yds")
            tableMapping.ColumnMappings.Add("passing_att", "passing_att")
            tableMapping.ColumnMappings.Add("passing_cmp", "passing_cmp")
            tableMapping.ColumnMappings.Add("passing_cmp_air_yds", "passing_cmp_air_yds")
            tableMapping.ColumnMappings.Add("passing_incmp", "passing_incmp")
            tableMapping.ColumnMappings.Add("passing_incmp_air_yds", "passing_incmp_air_yds")
            tableMapping.ColumnMappings.Add("passing_int", "passing_int")
            tableMapping.ColumnMappings.Add("passing_sk", "passing_sk")
            tableMapping.ColumnMappings.Add("passing_sk_yds", "passing_sk_yds")
            tableMapping.ColumnMappings.Add("passing_tds", "passing_tds")
            tableMapping.ColumnMappings.Add("passing_twopta", "passing_twopta")
            tableMapping.ColumnMappings.Add("passing_twoptm", "passing_twoptm")
            tableMapping.ColumnMappings.Add("passing_twoptmissed", "passing_twoptmissed")
            tableMapping.ColumnMappings.Add("passing_yds", "passing_yds")
            tableMapping.ColumnMappings.Add("punting_blk", "punting_blk")
            tableMapping.ColumnMappings.Add("punting_i20", "punting_i20")
            tableMapping.ColumnMappings.Add("punting_tot", "punting_tot")
            tableMapping.ColumnMappings.Add("punting_touchback", "punting_touchback")
            tableMapping.ColumnMappings.Add("punting_yds", "punting_yds")
            tableMapping.ColumnMappings.Add("puntret_downed", "puntret_downed")
            tableMapping.ColumnMappings.Add("puntret_fair", "puntret_fair")
            tableMapping.ColumnMappings.Add("puntret_oob", "puntret_oob")
            tableMapping.ColumnMappings.Add("puntret_tds", "puntret_tds")
            tableMapping.ColumnMappings.Add("puntret_tot", "puntret_tot")
            tableMapping.ColumnMappings.Add("puntret_touchback", "puntret_touchback")
            tableMapping.ColumnMappings.Add("puntret_yds", "puntret_yds")
            tableMapping.ColumnMappings.Add("receiving_rec", "receiving_rec")
            tableMapping.ColumnMappings.Add("receiving_tar", "receiving_tar")
            tableMapping.ColumnMappings.Add("receiving_tds", "receiving_tds")
            tableMapping.ColumnMappings.Add("receiving_twopta", "receiving_twopta")
            tableMapping.ColumnMappings.Add("receiving_twoptm", "receiving_twoptm")
            tableMapping.ColumnMappings.Add("receiving_twoptmissed", "receiving_twoptmissed")
            tableMapping.ColumnMappings.Add("receiving_yac_yds", "receiving_yac_yds")
            tableMapping.ColumnMappings.Add("receiving_yds", "receiving_yds")
            tableMapping.ColumnMappings.Add("rushing_att", "rushing_att")
            tableMapping.ColumnMappings.Add("rushing_loss", "rushing_loss")
            tableMapping.ColumnMappings.Add("rushing_loss_yds", "rushing_loss_yds")
            tableMapping.ColumnMappings.Add("rushing_tds", "rushing_tds")
            tableMapping.ColumnMappings.Add("rushing_twopta", "rushing_twopta")
            tableMapping.ColumnMappings.Add("rushing_twoptm", "rushing_twoptm")
            tableMapping.ColumnMappings.Add("rushing_twoptmissed", "rushing_twoptmissed")
            tableMapping.ColumnMappings.Add("rushing_yds", "rushing_yds")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""nfldb"".""public"".""play_player"" WHERE ((""gsis_id"" = ?) AND (""drive_id"""& _ 
                " = ?) AND (""play_id"" = ?) AND (""player_id"" = ?) AND (""team"" = ?) AND (""defense_a"& _ 
                "st"" = ?) AND (""defense_ffum"" = ?) AND (""defense_fgblk"" = ?) AND (""defense_frec"" "& _ 
                "= ?) AND (""defense_frec_tds"" = ?) AND (""defense_frec_yds"" = ?) AND (""defense_int"& _ 
                """ = ?) AND (""defense_int_tds"" = ?) AND (""defense_int_yds"" = ?) AND (""defense_mis"& _ 
                "c_tds"" = ?) AND (""defense_misc_yds"" = ?) AND (""defense_pass_def"" = ?) AND (""defe"& _ 
                "nse_puntblk"" = ?) AND (""defense_qbhit"" = ?) AND (""defense_safe"" = ?) AND (""defen"& _ 
                "se_sk"" = ?) AND (""defense_sk_yds"" = ?) AND (""defense_tkl"" = ?) AND (""defense_tkl"& _ 
                "_loss"" = ?) AND (""defense_tkl_loss_yds"" = ?) AND (""defense_tkl_primary"" = ?) AND"& _ 
                " (""defense_xpblk"" = ?) AND (""fumbles_forced"" = ?) AND (""fumbles_lost"" = ?) AND ("& _ 
                """fumbles_notforced"" = ?) AND (""fumbles_oob"" = ?) AND (""fumbles_rec"" = ?) AND (""f"& _ 
                "umbles_rec_tds"" = ?) AND (""fumbles_rec_yds"" = ?) AND (""fumbles_tot"" = ?) AND (""k"& _ 
                "icking_all_yds"" = ?) AND (""kicking_downed"" = ?) AND (""kicking_fga"" = ?) AND (""ki"& _ 
                "cking_fgb"" = ?) AND (""kicking_fgm"" = ?) AND (""kicking_fgm_yds"" = ?) AND (""kickin"& _ 
                "g_fgmissed"" = ?) AND (""kicking_fgmissed_yds"" = ?) AND (""kicking_i20"" = ?) AND ("""& _ 
                "kicking_rec"" = ?) AND (""kicking_rec_tds"" = ?) AND (""kicking_tot"" = ?) AND (""kick"& _ 
                "ing_touchback"" = ?) AND (""kicking_xpa"" = ?) AND (""kicking_xpb"" = ?) AND (""kickin"& _ 
                "g_xpmade"" = ?) AND (""kicking_xpmissed"" = ?) AND (""kicking_yds"" = ?) AND (""kickre"& _ 
                "t_fair"" = ?) AND (""kickret_oob"" = ?) AND (""kickret_ret"" = ?) AND (""kickret_tds"" "& _ 
                "= ?) AND (""kickret_touchback"" = ?) AND (""kickret_yds"" = ?) AND (""passing_att"" = "& _ 
                "?) AND (""passing_cmp"" = ?) AND (""passing_cmp_air_yds"" = ?) AND (""passing_incmp"" "& _ 
                "= ?) AND (""passing_incmp_air_yds"" = ?) AND (""passing_int"" = ?) AND (""passing_sk"""& _ 
                " = ?) AND (""passing_sk_yds"" = ?) AND (""passing_tds"" = ?) AND (""passing_twopta"" ="& _ 
                " ?) AND (""passing_twoptm"" = ?) AND (""passing_twoptmissed"" = ?) AND (""passing_yds"& _ 
                """ = ?) AND (""punting_blk"" = ?) AND (""punting_i20"" = ?) AND (""punting_tot"" = ?) A"& _ 
                "ND (""punting_touchback"" = ?) AND (""punting_yds"" = ?) AND (""puntret_downed"" = ?) "& _ 
                "AND (""puntret_fair"" = ?) AND (""puntret_oob"" = ?) AND (""puntret_tds"" = ?) AND (""p"& _ 
                "untret_tot"" = ?) AND (""puntret_touchback"" = ?) AND (""puntret_yds"" = ?) AND (""rec"& _ 
                "eiving_rec"" = ?) AND (""receiving_tar"" = ?) AND (""receiving_tds"" = ?) AND (""recei"& _ 
                "ving_twopta"" = ?) AND (""receiving_twoptm"" = ?) AND (""receiving_twoptmissed"" = ?)"& _ 
                " AND (""receiving_yac_yds"" = ?) AND (""receiving_yds"" = ?) AND (""rushing_att"" = ?)"& _ 
                " AND (""rushing_loss"" = ?) AND (""rushing_loss_yds"" = ?) AND (""rushing_tds"" = ?) A"& _ 
                "ND (""rushing_twopta"" = ?) AND (""rushing_twoptm"" = ?) AND (""rushing_twoptmissed"" "& _ 
                "= ?) AND (""rushing_yds"" = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_play_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_player_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "player_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_ast", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_ast", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_ffum", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_ffum", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_fgblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_fgblk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_frec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_frec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_frec_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_int", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_int_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_int_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_misc_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_misc_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_misc_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_misc_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_pass_def", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_pass_def", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_puntblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_puntblk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_qbhit", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_qbhit", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_safe", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_safe", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_sk", Global.System.Data.Odbc.OdbcType.Real, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_sk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_sk_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_sk_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_tkl", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_tkl_loss", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_loss", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_tkl_loss_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_loss_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_tkl_primary", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_primary", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_xpblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_xpblk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_forced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_forced", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_lost", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_lost", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_notforced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_notforced", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_oob", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_rec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_rec_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_tot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_all_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_all_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_downed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_downed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fga", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fga", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgb", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgb", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgm_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgm_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgmissed_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgmissed_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_i20", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_i20", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_rec", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_rec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_rec_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_tot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_touchback", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_xpa", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpa", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_xpb", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpb", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_xpmade", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpmade", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_xpmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_fair", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_fair", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_oob", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_ret", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_ret", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_touchback", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_att", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_cmp", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_cmp", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_cmp_air_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_cmp_air_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_incmp", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_incmp", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_incmp_air_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_incmp_air_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_int", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_sk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_sk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_sk_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_sk_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twopta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twoptm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twoptmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_blk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_blk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_i20", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_i20", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_tot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_touchback", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_downed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_downed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_fair", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_fair", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_oob", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_tot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_touchback", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_rec", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_tar", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_tar", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twopta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twoptm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twoptmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_yac_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_yac_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_att", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_loss", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_loss", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_loss_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_loss_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twopta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twoptm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twoptmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""nfldb"".""public"".""play_player"" (""gsis_id"", ""drive_id"", ""play_id"", ""pl"& _ 
                "ayer_id"", ""team"", ""defense_ast"", ""defense_ffum"", ""defense_fgblk"", ""defense_frec"""& _ 
                ", ""defense_frec_tds"", ""defense_frec_yds"", ""defense_int"", ""defense_int_tds"", ""def"& _ 
                "ense_int_yds"", ""defense_misc_tds"", ""defense_misc_yds"", ""defense_pass_def"", ""defe"& _ 
                "nse_puntblk"", ""defense_qbhit"", ""defense_safe"", ""defense_sk"", ""defense_sk_yds"", """& _ 
                "defense_tkl"", ""defense_tkl_loss"", ""defense_tkl_loss_yds"", ""defense_tkl_primary"","& _ 
                " ""defense_xpblk"", ""fumbles_forced"", ""fumbles_lost"", ""fumbles_notforced"", ""fumble"& _ 
                "s_oob"", ""fumbles_rec"", ""fumbles_rec_tds"", ""fumbles_rec_yds"", ""fumbles_tot"", ""kic"& _ 
                "king_all_yds"", ""kicking_downed"", ""kicking_fga"", ""kicking_fgb"", ""kicking_fgm"", ""k"& _ 
                "icking_fgm_yds"", ""kicking_fgmissed"", ""kicking_fgmissed_yds"", ""kicking_i20"", ""kic"& _ 
                "king_rec"", ""kicking_rec_tds"", ""kicking_tot"", ""kicking_touchback"", ""kicking_xpa"","& _ 
                " ""kicking_xpb"", ""kicking_xpmade"", ""kicking_xpmissed"", ""kicking_yds"", ""kickret_fa"& _ 
                "ir"", ""kickret_oob"", ""kickret_ret"", ""kickret_tds"", ""kickret_touchback"", ""kickret_"& _ 
                "yds"", ""passing_att"", ""passing_cmp"", ""passing_cmp_air_yds"", ""passing_incmp"", ""pas"& _ 
                "sing_incmp_air_yds"", ""passing_int"", ""passing_sk"", ""passing_sk_yds"", ""passing_tds"& _ 
                """, ""passing_twopta"", ""passing_twoptm"", ""passing_twoptmissed"", ""passing_yds"", ""pu"& _ 
                "nting_blk"", ""punting_i20"", ""punting_tot"", ""punting_touchback"", ""punting_yds"", ""p"& _ 
                "untret_downed"", ""puntret_fair"", ""puntret_oob"", ""puntret_tds"", ""puntret_tot"", ""pu"& _ 
                "ntret_touchback"", ""puntret_yds"", ""receiving_rec"", ""receiving_tar"", ""receiving_td"& _ 
                "s"", ""receiving_twopta"", ""receiving_twoptm"", ""receiving_twoptmissed"", ""receiving_"& _ 
                "yac_yds"", ""receiving_yds"", ""rushing_att"", ""rushing_loss"", ""rushing_loss_yds"", ""r"& _ 
                "ushing_tds"", ""rushing_twopta"", ""rushing_twoptm"", ""rushing_twoptmissed"", ""rushing"& _ 
                "_yds"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("play_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("player_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "player_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_ast", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_ast", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_ffum", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_ffum", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_fgblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_fgblk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_frec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_frec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_frec_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_int", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_int_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_int_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_misc_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_misc_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_misc_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_misc_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_pass_def", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_pass_def", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_puntblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_puntblk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_qbhit", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_qbhit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_safe", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_safe", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_sk", Global.System.Data.Odbc.OdbcType.Real, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_sk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_sk_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_sk_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_tkl", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_tkl_loss", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_loss", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_tkl_loss_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_loss_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_tkl_primary", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_primary", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_xpblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_xpblk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_forced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_forced", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_lost", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_lost", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_notforced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_notforced", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_oob", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_rec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_rec_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_tot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_all_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_all_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_downed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_downed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fga", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fga", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgb", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgb", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgm_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgm_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgmissed_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgmissed_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_i20", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_i20", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_rec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_rec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_rec_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_tot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_touchback", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_xpa", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpa", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_xpb", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpb", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_xpmade", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpmade", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_xpmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_fair", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_fair", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_oob", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_ret", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_ret", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_touchback", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_att", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_cmp", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_cmp", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_cmp_air_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_cmp_air_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_incmp", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_incmp", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_incmp_air_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_incmp_air_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_int", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_sk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_sk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_sk_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_sk_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twopta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twoptm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twoptmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_blk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_blk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_i20", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_i20", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_tot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_touchback", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_downed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_downed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_fair", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_fair", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_oob", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_tot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_touchback", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_rec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_tar", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_tar", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twopta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twoptm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twoptmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_yac_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_yac_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_att", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_loss", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_loss", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_loss_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_loss_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twopta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twoptm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twoptmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""nfldb"".""public"".""play_player"" SET ""gsis_id"" = ?, ""drive_id"" = ?, ""play_id"& _ 
                """ = ?, ""player_id"" = ?, ""team"" = ?, ""defense_ast"" = ?, ""defense_ffum"" = ?, ""defe"& _ 
                "nse_fgblk"" = ?, ""defense_frec"" = ?, ""defense_frec_tds"" = ?, ""defense_frec_yds"" ="& _ 
                " ?, ""defense_int"" = ?, ""defense_int_tds"" = ?, ""defense_int_yds"" = ?, ""defense_mi"& _ 
                "sc_tds"" = ?, ""defense_misc_yds"" = ?, ""defense_pass_def"" = ?, ""defense_puntblk"" ="& _ 
                " ?, ""defense_qbhit"" = ?, ""defense_safe"" = ?, ""defense_sk"" = ?, ""defense_sk_yds"" "& _ 
                "= ?, ""defense_tkl"" = ?, ""defense_tkl_loss"" = ?, ""defense_tkl_loss_yds"" = ?, ""def"& _ 
                "ense_tkl_primary"" = ?, ""defense_xpblk"" = ?, ""fumbles_forced"" = ?, ""fumbles_lost"""& _ 
                " = ?, ""fumbles_notforced"" = ?, ""fumbles_oob"" = ?, ""fumbles_rec"" = ?, ""fumbles_re"& _ 
                "c_tds"" = ?, ""fumbles_rec_yds"" = ?, ""fumbles_tot"" = ?, ""kicking_all_yds"" = ?, ""ki"& _ 
                "cking_downed"" = ?, ""kicking_fga"" = ?, ""kicking_fgb"" = ?, ""kicking_fgm"" = ?, ""kic"& _ 
                "king_fgm_yds"" = ?, ""kicking_fgmissed"" = ?, ""kicking_fgmissed_yds"" = ?, ""kicking_"& _ 
                "i20"" = ?, ""kicking_rec"" = ?, ""kicking_rec_tds"" = ?, ""kicking_tot"" = ?, ""kicking_"& _ 
                "touchback"" = ?, ""kicking_xpa"" = ?, ""kicking_xpb"" = ?, ""kicking_xpmade"" = ?, ""kic"& _ 
                "king_xpmissed"" = ?, ""kicking_yds"" = ?, ""kickret_fair"" = ?, ""kickret_oob"" = ?, ""k"& _ 
                "ickret_ret"" = ?, ""kickret_tds"" = ?, ""kickret_touchback"" = ?, ""kickret_yds"" = ?, "& _ 
                """passing_att"" = ?, ""passing_cmp"" = ?, ""passing_cmp_air_yds"" = ?, ""passing_incmp"""& _ 
                " = ?, ""passing_incmp_air_yds"" = ?, ""passing_int"" = ?, ""passing_sk"" = ?, ""passing"& _ 
                "_sk_yds"" = ?, ""passing_tds"" = ?, ""passing_twopta"" = ?, ""passing_twoptm"" = ?, ""pa"& _ 
                "ssing_twoptmissed"" = ?, ""passing_yds"" = ?, ""punting_blk"" = ?, ""punting_i20"" = ?,"& _ 
                " ""punting_tot"" = ?, ""punting_touchback"" = ?, ""punting_yds"" = ?, ""puntret_downed"""& _ 
                " = ?, ""puntret_fair"" = ?, ""puntret_oob"" = ?, ""puntret_tds"" = ?, ""puntret_tot"" = "& _ 
                "?, ""puntret_touchback"" = ?, ""puntret_yds"" = ?, ""receiving_rec"" = ?, ""receiving_t"& _ 
                "ar"" = ?, ""receiving_tds"" = ?, ""receiving_twopta"" = ?, ""receiving_twoptm"" = ?, ""r"& _ 
                "eceiving_twoptmissed"" = ?, ""receiving_yac_yds"" = ?, ""receiving_yds"" = ?, ""rushin"& _ 
                "g_att"" = ?, ""rushing_loss"" = ?, ""rushing_loss_yds"" = ?, ""rushing_tds"" = ?, ""rush"& _ 
                "ing_twopta"" = ?, ""rushing_twoptm"" = ?, ""rushing_twoptmissed"" = ?, ""rushing_yds"" "& _ 
                "= ? WHERE ((""gsis_id"" = ?) AND (""drive_id"" = ?) AND (""play_id"" = ?) AND (""player"& _ 
                "_id"" = ?) AND (""team"" = ?) AND (""defense_ast"" = ?) AND (""defense_ffum"" = ?) AND "& _ 
                "(""defense_fgblk"" = ?) AND (""defense_frec"" = ?) AND (""defense_frec_tds"" = ?) AND "& _ 
                "(""defense_frec_yds"" = ?) AND (""defense_int"" = ?) AND (""defense_int_tds"" = ?) AND"& _ 
                " (""defense_int_yds"" = ?) AND (""defense_misc_tds"" = ?) AND (""defense_misc_yds"" = "& _ 
                "?) AND (""defense_pass_def"" = ?) AND (""defense_puntblk"" = ?) AND (""defense_qbhit"""& _ 
                " = ?) AND (""defense_safe"" = ?) AND (""defense_sk"" = ?) AND (""defense_sk_yds"" = ?)"& _ 
                " AND (""defense_tkl"" = ?) AND (""defense_tkl_loss"" = ?) AND (""defense_tkl_loss_yds"& _ 
                """ = ?) AND (""defense_tkl_primary"" = ?) AND (""defense_xpblk"" = ?) AND (""fumbles_f"& _ 
                "orced"" = ?) AND (""fumbles_lost"" = ?) AND (""fumbles_notforced"" = ?) AND (""fumbles"& _ 
                "_oob"" = ?) AND (""fumbles_rec"" = ?) AND (""fumbles_rec_tds"" = ?) AND (""fumbles_rec"& _ 
                "_yds"" = ?) AND (""fumbles_tot"" = ?) AND (""kicking_all_yds"" = ?) AND (""kicking_dow"& _ 
                "ned"" = ?) AND (""kicking_fga"" = ?) AND (""kicking_fgb"" = ?) AND (""kicking_fgm"" = ?"& _ 
                ") AND (""kicking_fgm_yds"" = ?) AND (""kicking_fgmissed"" = ?) AND (""kicking_fgmisse"& _ 
                "d_yds"" = ?) AND (""kicking_i20"" = ?) AND (""kicking_rec"" = ?) AND (""kicking_rec_td"& _ 
                "s"" = ?) AND (""kicking_tot"" = ?) AND (""kicking_touchback"" = ?) AND (""kicking_xpa"""& _ 
                " = ?) AND (""kicking_xpb"" = ?) AND (""kicking_xpmade"" = ?) AND (""kicking_xpmissed"""& _ 
                " = ?) AND (""kicking_yds"" = ?) AND (""kickret_fair"" = ?) AND (""kickret_oob"" = ?) A"& _ 
                "ND (""kickret_ret"" = ?) AND (""kickret_tds"" = ?) AND (""kickret_touchback"" = ?) AND"& _ 
                " (""kickret_yds"" = ?) AND (""passing_att"" = ?) AND (""passing_cmp"" = ?) AND (""passi"& _ 
                "ng_cmp_air_yds"" = ?) AND (""passing_incmp"" = ?) AND (""passing_incmp_air_yds"" = ?)"& _ 
                " AND (""passing_int"" = ?) AND (""passing_sk"" = ?) AND (""passing_sk_yds"" = ?) AND ("& _ 
                """passing_tds"" = ?) AND (""passing_twopta"" = ?) AND (""passing_twoptm"" = ?) AND (""p"& _ 
                "assing_twoptmissed"" = ?) AND (""passing_yds"" = ?) AND (""punting_blk"" = ?) AND (""p"& _ 
                "unting_i20"" = ?) AND (""punting_tot"" = ?) AND (""punting_touchback"" = ?) AND (""pun"& _ 
                "ting_yds"" = ?) AND (""puntret_downed"" = ?) AND (""puntret_fair"" = ?) AND (""puntret"& _ 
                "_oob"" = ?) AND (""puntret_tds"" = ?) AND (""puntret_tot"" = ?) AND (""puntret_touchba"& _ 
                "ck"" = ?) AND (""puntret_yds"" = ?) AND (""receiving_rec"" = ?) AND (""receiving_tar"" "& _ 
                "= ?) AND (""receiving_tds"" = ?) AND (""receiving_twopta"" = ?) AND (""receiving_twop"& _ 
                "tm"" = ?) AND (""receiving_twoptmissed"" = ?) AND (""receiving_yac_yds"" = ?) AND (""r"& _ 
                "eceiving_yds"" = ?) AND (""rushing_att"" = ?) AND (""rushing_loss"" = ?) AND (""rushin"& _ 
                "g_loss_yds"" = ?) AND (""rushing_tds"" = ?) AND (""rushing_twopta"" = ?) AND (""rushin"& _ 
                "g_twoptm"" = ?) AND (""rushing_twoptmissed"" = ?) AND (""rushing_yds"" = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("play_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("player_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "player_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_ast", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_ast", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_ffum", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_ffum", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_fgblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_fgblk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_frec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_frec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_frec_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_int", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_int_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_int_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_misc_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_misc_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_misc_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_misc_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_pass_def", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_pass_def", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_puntblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_puntblk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_qbhit", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_qbhit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_safe", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_safe", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_sk", Global.System.Data.Odbc.OdbcType.Real, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_sk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_sk_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_sk_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_tkl", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_tkl_loss", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_loss", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_tkl_loss_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_loss_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_tkl_primary", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_primary", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("defense_xpblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_xpblk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_forced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_forced", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_lost", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_lost", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_notforced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_notforced", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_oob", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_rec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_rec_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fumbles_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_tot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_all_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_all_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_downed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_downed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fga", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fga", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgb", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgb", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgm_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgm_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_fgmissed_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgmissed_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_i20", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_i20", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_rec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_rec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_rec_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_tot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_touchback", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_xpa", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpa", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_xpb", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpb", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_xpmade", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpmade", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_xpmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kicking_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_fair", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_fair", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_oob", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_ret", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_ret", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_touchback", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("kickret_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_att", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_cmp", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_cmp", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_cmp_air_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_cmp_air_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_incmp", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_incmp", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_incmp_air_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_incmp_air_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_int", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_sk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_sk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_sk_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_sk_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twopta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twoptm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twoptmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passing_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_blk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_blk", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_i20", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_i20", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_tot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_touchback", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("punting_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_downed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_downed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_fair", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_fair", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_oob", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_tot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_touchback", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("puntret_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_rec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_tar", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_tar", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twopta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twoptm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twoptmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_yac_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_yac_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("receiving_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_att", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_loss", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_loss", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_loss_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_loss_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_tds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twopta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twoptm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twoptmissed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rushing_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_yds", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_drive_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "drive_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_play_id", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "play_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_player_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "player_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_ast", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_ast", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_ffum", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_ffum", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_fgblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_fgblk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_frec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_frec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_frec_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_frec_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_int", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_int_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_int_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_int_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_misc_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_misc_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_misc_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_misc_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_pass_def", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_pass_def", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_puntblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_puntblk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_qbhit", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_qbhit", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_safe", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_safe", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_sk", Global.System.Data.Odbc.OdbcType.Real, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_sk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_sk_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_sk_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_tkl", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_tkl_loss", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_loss", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_tkl_loss_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_loss_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_tkl_primary", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_tkl_primary", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_defense_xpblk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "defense_xpblk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_forced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_forced", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_lost", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_lost", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_notforced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_notforced", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_oob", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_rec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_rec_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_rec_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_fumbles_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fumbles_tot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_all_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_all_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_downed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_downed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fga", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fga", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgb", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgb", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgm_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgm_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_fgmissed_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_fgmissed_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_i20", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_i20", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_rec", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_rec_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_rec_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_tot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_touchback", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_xpa", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpa", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_xpb", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpb", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_xpmade", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpmade", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_xpmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_xpmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kicking_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kicking_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_fair", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_fair", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_oob", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_ret", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_ret", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_touchback", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_kickret_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "kickret_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_att", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_cmp", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_cmp", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_cmp_air_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_cmp_air_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_incmp", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_incmp", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_incmp_air_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_incmp_air_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_int", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_sk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_sk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_sk_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_sk_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twopta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twoptm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_twoptmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passing_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passing_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_blk", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_blk", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_i20", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_i20", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_tot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_touchback", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_punting_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "punting_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_downed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_downed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_fair", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_fair", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_oob", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_oob", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_tot", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_tot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_touchback", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_touchback", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_puntret_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "puntret_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_rec", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_rec", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_tar", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_tar", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twopta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twoptm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_twoptmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_yac_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_yac_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_receiving_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "receiving_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_att", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_att", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_loss", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_loss", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_loss_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_loss_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_tds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_tds", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_twopta", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twopta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_twoptm", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twoptm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_twoptmissed", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_twoptmissed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rushing_yds", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rushing_yds", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.DailyPlayers_v2.My.MySettings.Default.conStringNFLdb
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""gsis_id"", ""drive_id"", ""play_id"", ""player_id"", ""team"", ""defense_ast"", ""def"& _ 
                "ense_ffum"", ""defense_fgblk"", ""defense_frec"", ""defense_frec_tds"", ""defense_frec_y"& _ 
                "ds"", ""defense_int"", ""defense_int_tds"", ""defense_int_yds"", ""defense_misc_tds"", ""d"& _ 
                "efense_misc_yds"", ""defense_pass_def"", ""defense_puntblk"", ""defense_qbhit"", ""defen"& _ 
                "se_safe"", ""defense_sk"", ""defense_sk_yds"", ""defense_tkl"", ""defense_tkl_loss"", ""de"& _ 
                "fense_tkl_loss_yds"", ""defense_tkl_primary"", ""defense_xpblk"", ""fumbles_forced"", """& _ 
                "fumbles_lost"", ""fumbles_notforced"", ""fumbles_oob"", ""fumbles_rec"", ""fumbles_rec_t"& _ 
                "ds"", ""fumbles_rec_yds"", ""fumbles_tot"", ""kicking_all_yds"", ""kicking_downed"", ""kic"& _ 
                "king_fga"", ""kicking_fgb"", ""kicking_fgm"", ""kicking_fgm_yds"", ""kicking_fgmissed"", "& _ 
                """kicking_fgmissed_yds"", ""kicking_i20"", ""kicking_rec"", ""kicking_rec_tds"", ""kickin"& _ 
                "g_tot"", ""kicking_touchback"", ""kicking_xpa"", ""kicking_xpb"", ""kicking_xpmade"", ""ki"& _ 
                "cking_xpmissed"", ""kicking_yds"", ""kickret_fair"", ""kickret_oob"", ""kickret_ret"", ""k"& _ 
                "ickret_tds"", ""kickret_touchback"", ""kickret_yds"", ""passing_att"", ""passing_cmp"", """& _ 
                "passing_cmp_air_yds"", ""passing_incmp"", ""passing_incmp_air_yds"", ""passing_int"", """& _ 
                "passing_sk"", ""passing_sk_yds"", ""passing_tds"", ""passing_twopta"", ""passing_twoptm"""& _ 
                ", ""passing_twoptmissed"", ""passing_yds"", ""punting_blk"", ""punting_i20"", ""punting_t"& _ 
                "ot"", ""punting_touchback"", ""punting_yds"", ""puntret_downed"", ""puntret_fair"", ""punt"& _ 
                "ret_oob"", ""puntret_tds"", ""puntret_tot"", ""puntret_touchback"", ""puntret_yds"", ""rec"& _ 
                "eiving_rec"", ""receiving_tar"", ""receiving_tds"", ""receiving_twopta"", ""receiving_tw"& _ 
                "optm"", ""receiving_twoptmissed"", ""receiving_yac_yds"", ""receiving_yds"", ""rushing_a"& _ 
                "tt"", ""rushing_loss"", ""rushing_loss_yds"", ""rushing_tds"", ""rushing_twopta"", ""rushi"& _ 
                "ng_twoptm"", ""rushing_twoptmissed"", ""rushing_yds"" FROM ""public"".""play_player"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsNFLdb.play_playerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsNFLdb.play_playerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsNFLdb.play_playerDataTable = New dsNFLdb.play_playerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsNFLdb.play_playerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsNFLdb) As Integer
            Return Me.Adapter.Update(dataSet, "play_player")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_drive_id As Short,  _
                    ByVal Original_play_id As Short,  _
                    ByVal Original_player_id As String,  _
                    ByVal Original_team As String,  _
                    ByVal Original_defense_ast As Short,  _
                    ByVal Original_defense_ffum As Short,  _
                    ByVal Original_defense_fgblk As Short,  _
                    ByVal Original_defense_frec As Short,  _
                    ByVal Original_defense_frec_tds As Short,  _
                    ByVal Original_defense_frec_yds As Short,  _
                    ByVal Original_defense_int As Short,  _
                    ByVal Original_defense_int_tds As Short,  _
                    ByVal Original_defense_int_yds As Short,  _
                    ByVal Original_defense_misc_tds As Short,  _
                    ByVal Original_defense_misc_yds As Short,  _
                    ByVal Original_defense_pass_def As Short,  _
                    ByVal Original_defense_puntblk As Short,  _
                    ByVal Original_defense_qbhit As Short,  _
                    ByVal Original_defense_safe As Short,  _
                    ByVal Original_defense_sk As Single,  _
                    ByVal Original_defense_sk_yds As Short,  _
                    ByVal Original_defense_tkl As Short,  _
                    ByVal Original_defense_tkl_loss As Short,  _
                    ByVal Original_defense_tkl_loss_yds As Short,  _
                    ByVal Original_defense_tkl_primary As Short,  _
                    ByVal Original_defense_xpblk As Short,  _
                    ByVal Original_fumbles_forced As Short,  _
                    ByVal Original_fumbles_lost As Short,  _
                    ByVal Original_fumbles_notforced As Short,  _
                    ByVal Original_fumbles_oob As Short,  _
                    ByVal Original_fumbles_rec As Short,  _
                    ByVal Original_fumbles_rec_tds As Short,  _
                    ByVal Original_fumbles_rec_yds As Short,  _
                    ByVal Original_fumbles_tot As Short,  _
                    ByVal Original_kicking_all_yds As Short,  _
                    ByVal Original_kicking_downed As Short,  _
                    ByVal Original_kicking_fga As Short,  _
                    ByVal Original_kicking_fgb As Short,  _
                    ByVal Original_kicking_fgm As Short,  _
                    ByVal Original_kicking_fgm_yds As Short,  _
                    ByVal Original_kicking_fgmissed As Short,  _
                    ByVal Original_kicking_fgmissed_yds As Short,  _
                    ByVal Original_kicking_i20 As Short,  _
                    ByVal Original_kicking_rec As Short,  _
                    ByVal Original_kicking_rec_tds As Short,  _
                    ByVal Original_kicking_tot As Short,  _
                    ByVal Original_kicking_touchback As Short,  _
                    ByVal Original_kicking_xpa As Short,  _
                    ByVal Original_kicking_xpb As Short,  _
                    ByVal Original_kicking_xpmade As Short,  _
                    ByVal Original_kicking_xpmissed As Short,  _
                    ByVal Original_kicking_yds As Short,  _
                    ByVal Original_kickret_fair As Short,  _
                    ByVal Original_kickret_oob As Short,  _
                    ByVal Original_kickret_ret As Short,  _
                    ByVal Original_kickret_tds As Short,  _
                    ByVal Original_kickret_touchback As Short,  _
                    ByVal Original_kickret_yds As Short,  _
                    ByVal Original_passing_att As Short,  _
                    ByVal Original_passing_cmp As Short,  _
                    ByVal Original_passing_cmp_air_yds As Short,  _
                    ByVal Original_passing_incmp As Short,  _
                    ByVal Original_passing_incmp_air_yds As Short,  _
                    ByVal Original_passing_int As Short,  _
                    ByVal Original_passing_sk As Short,  _
                    ByVal Original_passing_sk_yds As Short,  _
                    ByVal Original_passing_tds As Short,  _
                    ByVal Original_passing_twopta As Short,  _
                    ByVal Original_passing_twoptm As Short,  _
                    ByVal Original_passing_twoptmissed As Short,  _
                    ByVal Original_passing_yds As Short,  _
                    ByVal Original_punting_blk As Short,  _
                    ByVal Original_punting_i20 As Short,  _
                    ByVal Original_punting_tot As Short,  _
                    ByVal Original_punting_touchback As Short,  _
                    ByVal Original_punting_yds As Short,  _
                    ByVal Original_puntret_downed As Short,  _
                    ByVal Original_puntret_fair As Short,  _
                    ByVal Original_puntret_oob As Short,  _
                    ByVal Original_puntret_tds As Short,  _
                    ByVal Original_puntret_tot As Short,  _
                    ByVal Original_puntret_touchback As Short,  _
                    ByVal Original_puntret_yds As Short,  _
                    ByVal Original_receiving_rec As Short,  _
                    ByVal Original_receiving_tar As Short,  _
                    ByVal Original_receiving_tds As Short,  _
                    ByVal Original_receiving_twopta As Short,  _
                    ByVal Original_receiving_twoptm As Short,  _
                    ByVal Original_receiving_twoptmissed As Short,  _
                    ByVal Original_receiving_yac_yds As Short,  _
                    ByVal Original_receiving_yds As Short,  _
                    ByVal Original_rushing_att As Short,  _
                    ByVal Original_rushing_loss As Short,  _
                    ByVal Original_rushing_loss_yds As Short,  _
                    ByVal Original_rushing_tds As Short,  _
                    ByVal Original_rushing_twopta As Short,  _
                    ByVal Original_rushing_twoptm As Short,  _
                    ByVal Original_rushing_twoptmissed As Short,  _
                    ByVal Original_rushing_yds As Short) As Integer
            If (Original_gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_id")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_gsis_id,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_drive_id,Short)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_play_id,Short)
            If (Original_player_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_player_id")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_player_id,String)
            End If
            If (Original_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_team")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_team,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_defense_ast,Short)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_defense_ffum,Short)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_defense_fgblk,Short)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_defense_frec,Short)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_defense_frec_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_defense_frec_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_defense_int,Short)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_defense_int_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_defense_int_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_defense_misc_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_defense_misc_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_defense_pass_def,Short)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_defense_puntblk,Short)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_defense_qbhit,Short)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_defense_safe,Short)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_defense_sk,Single)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_defense_sk_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_defense_tkl,Short)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_defense_tkl_loss,Short)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_defense_tkl_loss_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_defense_tkl_primary,Short)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_defense_xpblk,Short)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_fumbles_forced,Short)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_fumbles_lost,Short)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_fumbles_notforced,Short)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_fumbles_oob,Short)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_fumbles_rec,Short)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_fumbles_rec_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_fumbles_rec_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_fumbles_tot,Short)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_kicking_all_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_kicking_downed,Short)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_kicking_fga,Short)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_kicking_fgb,Short)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_kicking_fgm,Short)
            Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_kicking_fgm_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_kicking_fgmissed,Short)
            Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_kicking_fgmissed_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_kicking_i20,Short)
            Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_kicking_rec,Short)
            Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_kicking_rec_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_kicking_tot,Short)
            Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_kicking_touchback,Short)
            Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_kicking_xpa,Short)
            Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_kicking_xpb,Short)
            Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_kicking_xpmade,Short)
            Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_kicking_xpmissed,Short)
            Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_kicking_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_kickret_fair,Short)
            Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_kickret_oob,Short)
            Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_kickret_ret,Short)
            Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_kickret_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_kickret_touchback,Short)
            Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_kickret_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_passing_att,Short)
            Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_passing_cmp,Short)
            Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_passing_cmp_air_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_passing_incmp,Short)
            Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_passing_incmp_air_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_passing_int,Short)
            Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_passing_sk,Short)
            Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_passing_sk_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_passing_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_passing_twopta,Short)
            Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_passing_twoptm,Short)
            Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_passing_twoptmissed,Short)
            Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_passing_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_punting_blk,Short)
            Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_punting_i20,Short)
            Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_punting_tot,Short)
            Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_punting_touchback,Short)
            Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_punting_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_puntret_downed,Short)
            Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_puntret_fair,Short)
            Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_puntret_oob,Short)
            Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_puntret_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_puntret_tot,Short)
            Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_puntret_touchback,Short)
            Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_puntret_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_receiving_rec,Short)
            Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_receiving_tar,Short)
            Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_receiving_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_receiving_twopta,Short)
            Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_receiving_twoptm,Short)
            Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_receiving_twoptmissed,Short)
            Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_receiving_yac_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_receiving_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_rushing_att,Short)
            Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_rushing_loss,Short)
            Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_rushing_loss_yds,Short)
            Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_rushing_tds,Short)
            Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_rushing_twopta,Short)
            Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_rushing_twoptm,Short)
            Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_rushing_twoptmissed,Short)
            Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_rushing_yds,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal gsis_id As String,  _
                    ByVal drive_id As Short,  _
                    ByVal play_id As Short,  _
                    ByVal player_id As String,  _
                    ByVal team As String,  _
                    ByVal defense_ast As Short,  _
                    ByVal defense_ffum As Short,  _
                    ByVal defense_fgblk As Short,  _
                    ByVal defense_frec As Short,  _
                    ByVal defense_frec_tds As Short,  _
                    ByVal defense_frec_yds As Short,  _
                    ByVal defense_int As Short,  _
                    ByVal defense_int_tds As Short,  _
                    ByVal defense_int_yds As Short,  _
                    ByVal defense_misc_tds As Short,  _
                    ByVal defense_misc_yds As Short,  _
                    ByVal defense_pass_def As Short,  _
                    ByVal defense_puntblk As Short,  _
                    ByVal defense_qbhit As Short,  _
                    ByVal defense_safe As Short,  _
                    ByVal defense_sk As Single,  _
                    ByVal defense_sk_yds As Short,  _
                    ByVal defense_tkl As Short,  _
                    ByVal defense_tkl_loss As Short,  _
                    ByVal defense_tkl_loss_yds As Short,  _
                    ByVal defense_tkl_primary As Short,  _
                    ByVal defense_xpblk As Short,  _
                    ByVal fumbles_forced As Short,  _
                    ByVal fumbles_lost As Short,  _
                    ByVal fumbles_notforced As Short,  _
                    ByVal fumbles_oob As Short,  _
                    ByVal fumbles_rec As Short,  _
                    ByVal fumbles_rec_tds As Short,  _
                    ByVal fumbles_rec_yds As Short,  _
                    ByVal fumbles_tot As Short,  _
                    ByVal kicking_all_yds As Short,  _
                    ByVal kicking_downed As Short,  _
                    ByVal kicking_fga As Short,  _
                    ByVal kicking_fgb As Short,  _
                    ByVal kicking_fgm As Short,  _
                    ByVal kicking_fgm_yds As Short,  _
                    ByVal kicking_fgmissed As Short,  _
                    ByVal kicking_fgmissed_yds As Short,  _
                    ByVal kicking_i20 As Short,  _
                    ByVal kicking_rec As Short,  _
                    ByVal kicking_rec_tds As Short,  _
                    ByVal kicking_tot As Short,  _
                    ByVal kicking_touchback As Short,  _
                    ByVal kicking_xpa As Short,  _
                    ByVal kicking_xpb As Short,  _
                    ByVal kicking_xpmade As Short,  _
                    ByVal kicking_xpmissed As Short,  _
                    ByVal kicking_yds As Short,  _
                    ByVal kickret_fair As Short,  _
                    ByVal kickret_oob As Short,  _
                    ByVal kickret_ret As Short,  _
                    ByVal kickret_tds As Short,  _
                    ByVal kickret_touchback As Short,  _
                    ByVal kickret_yds As Short,  _
                    ByVal passing_att As Short,  _
                    ByVal passing_cmp As Short,  _
                    ByVal passing_cmp_air_yds As Short,  _
                    ByVal passing_incmp As Short,  _
                    ByVal passing_incmp_air_yds As Short,  _
                    ByVal passing_int As Short,  _
                    ByVal passing_sk As Short,  _
                    ByVal passing_sk_yds As Short,  _
                    ByVal passing_tds As Short,  _
                    ByVal passing_twopta As Short,  _
                    ByVal passing_twoptm As Short,  _
                    ByVal passing_twoptmissed As Short,  _
                    ByVal passing_yds As Short,  _
                    ByVal punting_blk As Short,  _
                    ByVal punting_i20 As Short,  _
                    ByVal punting_tot As Short,  _
                    ByVal punting_touchback As Short,  _
                    ByVal punting_yds As Short,  _
                    ByVal puntret_downed As Short,  _
                    ByVal puntret_fair As Short,  _
                    ByVal puntret_oob As Short,  _
                    ByVal puntret_tds As Short,  _
                    ByVal puntret_tot As Short,  _
                    ByVal puntret_touchback As Short,  _
                    ByVal puntret_yds As Short,  _
                    ByVal receiving_rec As Short,  _
                    ByVal receiving_tar As Short,  _
                    ByVal receiving_tds As Short,  _
                    ByVal receiving_twopta As Short,  _
                    ByVal receiving_twoptm As Short,  _
                    ByVal receiving_twoptmissed As Short,  _
                    ByVal receiving_yac_yds As Short,  _
                    ByVal receiving_yds As Short,  _
                    ByVal rushing_att As Short,  _
                    ByVal rushing_loss As Short,  _
                    ByVal rushing_loss_yds As Short,  _
                    ByVal rushing_tds As Short,  _
                    ByVal rushing_twopta As Short,  _
                    ByVal rushing_twoptm As Short,  _
                    ByVal rushing_twoptmissed As Short,  _
                    ByVal rushing_yds As Short) As Integer
            If (gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_id")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(gsis_id,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(drive_id,Short)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(play_id,Short)
            If (player_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("player_id")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(player_id,String)
            End If
            If (team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("team")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(team,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(defense_ast,Short)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(defense_ffum,Short)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(defense_fgblk,Short)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(defense_frec,Short)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(defense_frec_tds,Short)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(defense_frec_yds,Short)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(defense_int,Short)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(defense_int_tds,Short)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(defense_int_yds,Short)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(defense_misc_tds,Short)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(defense_misc_yds,Short)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(defense_pass_def,Short)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(defense_puntblk,Short)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(defense_qbhit,Short)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(defense_safe,Short)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(defense_sk,Single)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(defense_sk_yds,Short)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(defense_tkl,Short)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(defense_tkl_loss,Short)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(defense_tkl_loss_yds,Short)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(defense_tkl_primary,Short)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(defense_xpblk,Short)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(fumbles_forced,Short)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(fumbles_lost,Short)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(fumbles_notforced,Short)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(fumbles_oob,Short)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(fumbles_rec,Short)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(fumbles_rec_tds,Short)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(fumbles_rec_yds,Short)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(fumbles_tot,Short)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(kicking_all_yds,Short)
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(kicking_downed,Short)
            Me.Adapter.InsertCommand.Parameters(37).Value = CType(kicking_fga,Short)
            Me.Adapter.InsertCommand.Parameters(38).Value = CType(kicking_fgb,Short)
            Me.Adapter.InsertCommand.Parameters(39).Value = CType(kicking_fgm,Short)
            Me.Adapter.InsertCommand.Parameters(40).Value = CType(kicking_fgm_yds,Short)
            Me.Adapter.InsertCommand.Parameters(41).Value = CType(kicking_fgmissed,Short)
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(kicking_fgmissed_yds,Short)
            Me.Adapter.InsertCommand.Parameters(43).Value = CType(kicking_i20,Short)
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(kicking_rec,Short)
            Me.Adapter.InsertCommand.Parameters(45).Value = CType(kicking_rec_tds,Short)
            Me.Adapter.InsertCommand.Parameters(46).Value = CType(kicking_tot,Short)
            Me.Adapter.InsertCommand.Parameters(47).Value = CType(kicking_touchback,Short)
            Me.Adapter.InsertCommand.Parameters(48).Value = CType(kicking_xpa,Short)
            Me.Adapter.InsertCommand.Parameters(49).Value = CType(kicking_xpb,Short)
            Me.Adapter.InsertCommand.Parameters(50).Value = CType(kicking_xpmade,Short)
            Me.Adapter.InsertCommand.Parameters(51).Value = CType(kicking_xpmissed,Short)
            Me.Adapter.InsertCommand.Parameters(52).Value = CType(kicking_yds,Short)
            Me.Adapter.InsertCommand.Parameters(53).Value = CType(kickret_fair,Short)
            Me.Adapter.InsertCommand.Parameters(54).Value = CType(kickret_oob,Short)
            Me.Adapter.InsertCommand.Parameters(55).Value = CType(kickret_ret,Short)
            Me.Adapter.InsertCommand.Parameters(56).Value = CType(kickret_tds,Short)
            Me.Adapter.InsertCommand.Parameters(57).Value = CType(kickret_touchback,Short)
            Me.Adapter.InsertCommand.Parameters(58).Value = CType(kickret_yds,Short)
            Me.Adapter.InsertCommand.Parameters(59).Value = CType(passing_att,Short)
            Me.Adapter.InsertCommand.Parameters(60).Value = CType(passing_cmp,Short)
            Me.Adapter.InsertCommand.Parameters(61).Value = CType(passing_cmp_air_yds,Short)
            Me.Adapter.InsertCommand.Parameters(62).Value = CType(passing_incmp,Short)
            Me.Adapter.InsertCommand.Parameters(63).Value = CType(passing_incmp_air_yds,Short)
            Me.Adapter.InsertCommand.Parameters(64).Value = CType(passing_int,Short)
            Me.Adapter.InsertCommand.Parameters(65).Value = CType(passing_sk,Short)
            Me.Adapter.InsertCommand.Parameters(66).Value = CType(passing_sk_yds,Short)
            Me.Adapter.InsertCommand.Parameters(67).Value = CType(passing_tds,Short)
            Me.Adapter.InsertCommand.Parameters(68).Value = CType(passing_twopta,Short)
            Me.Adapter.InsertCommand.Parameters(69).Value = CType(passing_twoptm,Short)
            Me.Adapter.InsertCommand.Parameters(70).Value = CType(passing_twoptmissed,Short)
            Me.Adapter.InsertCommand.Parameters(71).Value = CType(passing_yds,Short)
            Me.Adapter.InsertCommand.Parameters(72).Value = CType(punting_blk,Short)
            Me.Adapter.InsertCommand.Parameters(73).Value = CType(punting_i20,Short)
            Me.Adapter.InsertCommand.Parameters(74).Value = CType(punting_tot,Short)
            Me.Adapter.InsertCommand.Parameters(75).Value = CType(punting_touchback,Short)
            Me.Adapter.InsertCommand.Parameters(76).Value = CType(punting_yds,Short)
            Me.Adapter.InsertCommand.Parameters(77).Value = CType(puntret_downed,Short)
            Me.Adapter.InsertCommand.Parameters(78).Value = CType(puntret_fair,Short)
            Me.Adapter.InsertCommand.Parameters(79).Value = CType(puntret_oob,Short)
            Me.Adapter.InsertCommand.Parameters(80).Value = CType(puntret_tds,Short)
            Me.Adapter.InsertCommand.Parameters(81).Value = CType(puntret_tot,Short)
            Me.Adapter.InsertCommand.Parameters(82).Value = CType(puntret_touchback,Short)
            Me.Adapter.InsertCommand.Parameters(83).Value = CType(puntret_yds,Short)
            Me.Adapter.InsertCommand.Parameters(84).Value = CType(receiving_rec,Short)
            Me.Adapter.InsertCommand.Parameters(85).Value = CType(receiving_tar,Short)
            Me.Adapter.InsertCommand.Parameters(86).Value = CType(receiving_tds,Short)
            Me.Adapter.InsertCommand.Parameters(87).Value = CType(receiving_twopta,Short)
            Me.Adapter.InsertCommand.Parameters(88).Value = CType(receiving_twoptm,Short)
            Me.Adapter.InsertCommand.Parameters(89).Value = CType(receiving_twoptmissed,Short)
            Me.Adapter.InsertCommand.Parameters(90).Value = CType(receiving_yac_yds,Short)
            Me.Adapter.InsertCommand.Parameters(91).Value = CType(receiving_yds,Short)
            Me.Adapter.InsertCommand.Parameters(92).Value = CType(rushing_att,Short)
            Me.Adapter.InsertCommand.Parameters(93).Value = CType(rushing_loss,Short)
            Me.Adapter.InsertCommand.Parameters(94).Value = CType(rushing_loss_yds,Short)
            Me.Adapter.InsertCommand.Parameters(95).Value = CType(rushing_tds,Short)
            Me.Adapter.InsertCommand.Parameters(96).Value = CType(rushing_twopta,Short)
            Me.Adapter.InsertCommand.Parameters(97).Value = CType(rushing_twoptm,Short)
            Me.Adapter.InsertCommand.Parameters(98).Value = CType(rushing_twoptmissed,Short)
            Me.Adapter.InsertCommand.Parameters(99).Value = CType(rushing_yds,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal gsis_id As String,  _
                    ByVal drive_id As Short,  _
                    ByVal play_id As Short,  _
                    ByVal player_id As String,  _
                    ByVal team As String,  _
                    ByVal defense_ast As Short,  _
                    ByVal defense_ffum As Short,  _
                    ByVal defense_fgblk As Short,  _
                    ByVal defense_frec As Short,  _
                    ByVal defense_frec_tds As Short,  _
                    ByVal defense_frec_yds As Short,  _
                    ByVal defense_int As Short,  _
                    ByVal defense_int_tds As Short,  _
                    ByVal defense_int_yds As Short,  _
                    ByVal defense_misc_tds As Short,  _
                    ByVal defense_misc_yds As Short,  _
                    ByVal defense_pass_def As Short,  _
                    ByVal defense_puntblk As Short,  _
                    ByVal defense_qbhit As Short,  _
                    ByVal defense_safe As Short,  _
                    ByVal defense_sk As Single,  _
                    ByVal defense_sk_yds As Short,  _
                    ByVal defense_tkl As Short,  _
                    ByVal defense_tkl_loss As Short,  _
                    ByVal defense_tkl_loss_yds As Short,  _
                    ByVal defense_tkl_primary As Short,  _
                    ByVal defense_xpblk As Short,  _
                    ByVal fumbles_forced As Short,  _
                    ByVal fumbles_lost As Short,  _
                    ByVal fumbles_notforced As Short,  _
                    ByVal fumbles_oob As Short,  _
                    ByVal fumbles_rec As Short,  _
                    ByVal fumbles_rec_tds As Short,  _
                    ByVal fumbles_rec_yds As Short,  _
                    ByVal fumbles_tot As Short,  _
                    ByVal kicking_all_yds As Short,  _
                    ByVal kicking_downed As Short,  _
                    ByVal kicking_fga As Short,  _
                    ByVal kicking_fgb As Short,  _
                    ByVal kicking_fgm As Short,  _
                    ByVal kicking_fgm_yds As Short,  _
                    ByVal kicking_fgmissed As Short,  _
                    ByVal kicking_fgmissed_yds As Short,  _
                    ByVal kicking_i20 As Short,  _
                    ByVal kicking_rec As Short,  _
                    ByVal kicking_rec_tds As Short,  _
                    ByVal kicking_tot As Short,  _
                    ByVal kicking_touchback As Short,  _
                    ByVal kicking_xpa As Short,  _
                    ByVal kicking_xpb As Short,  _
                    ByVal kicking_xpmade As Short,  _
                    ByVal kicking_xpmissed As Short,  _
                    ByVal kicking_yds As Short,  _
                    ByVal kickret_fair As Short,  _
                    ByVal kickret_oob As Short,  _
                    ByVal kickret_ret As Short,  _
                    ByVal kickret_tds As Short,  _
                    ByVal kickret_touchback As Short,  _
                    ByVal kickret_yds As Short,  _
                    ByVal passing_att As Short,  _
                    ByVal passing_cmp As Short,  _
                    ByVal passing_cmp_air_yds As Short,  _
                    ByVal passing_incmp As Short,  _
                    ByVal passing_incmp_air_yds As Short,  _
                    ByVal passing_int As Short,  _
                    ByVal passing_sk As Short,  _
                    ByVal passing_sk_yds As Short,  _
                    ByVal passing_tds As Short,  _
                    ByVal passing_twopta As Short,  _
                    ByVal passing_twoptm As Short,  _
                    ByVal passing_twoptmissed As Short,  _
                    ByVal passing_yds As Short,  _
                    ByVal punting_blk As Short,  _
                    ByVal punting_i20 As Short,  _
                    ByVal punting_tot As Short,  _
                    ByVal punting_touchback As Short,  _
                    ByVal punting_yds As Short,  _
                    ByVal puntret_downed As Short,  _
                    ByVal puntret_fair As Short,  _
                    ByVal puntret_oob As Short,  _
                    ByVal puntret_tds As Short,  _
                    ByVal puntret_tot As Short,  _
                    ByVal puntret_touchback As Short,  _
                    ByVal puntret_yds As Short,  _
                    ByVal receiving_rec As Short,  _
                    ByVal receiving_tar As Short,  _
                    ByVal receiving_tds As Short,  _
                    ByVal receiving_twopta As Short,  _
                    ByVal receiving_twoptm As Short,  _
                    ByVal receiving_twoptmissed As Short,  _
                    ByVal receiving_yac_yds As Short,  _
                    ByVal receiving_yds As Short,  _
                    ByVal rushing_att As Short,  _
                    ByVal rushing_loss As Short,  _
                    ByVal rushing_loss_yds As Short,  _
                    ByVal rushing_tds As Short,  _
                    ByVal rushing_twopta As Short,  _
                    ByVal rushing_twoptm As Short,  _
                    ByVal rushing_twoptmissed As Short,  _
                    ByVal rushing_yds As Short,  _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_drive_id As Short,  _
                    ByVal Original_play_id As Short,  _
                    ByVal Original_player_id As String,  _
                    ByVal Original_team As String,  _
                    ByVal Original_defense_ast As Short,  _
                    ByVal Original_defense_ffum As Short,  _
                    ByVal Original_defense_fgblk As Short,  _
                    ByVal Original_defense_frec As Short,  _
                    ByVal Original_defense_frec_tds As Short,  _
                    ByVal Original_defense_frec_yds As Short,  _
                    ByVal Original_defense_int As Short,  _
                    ByVal Original_defense_int_tds As Short,  _
                    ByVal Original_defense_int_yds As Short,  _
                    ByVal Original_defense_misc_tds As Short,  _
                    ByVal Original_defense_misc_yds As Short,  _
                    ByVal Original_defense_pass_def As Short,  _
                    ByVal Original_defense_puntblk As Short,  _
                    ByVal Original_defense_qbhit As Short,  _
                    ByVal Original_defense_safe As Short,  _
                    ByVal Original_defense_sk As Single,  _
                    ByVal Original_defense_sk_yds As Short,  _
                    ByVal Original_defense_tkl As Short,  _
                    ByVal Original_defense_tkl_loss As Short,  _
                    ByVal Original_defense_tkl_loss_yds As Short,  _
                    ByVal Original_defense_tkl_primary As Short,  _
                    ByVal Original_defense_xpblk As Short,  _
                    ByVal Original_fumbles_forced As Short,  _
                    ByVal Original_fumbles_lost As Short,  _
                    ByVal Original_fumbles_notforced As Short,  _
                    ByVal Original_fumbles_oob As Short,  _
                    ByVal Original_fumbles_rec As Short,  _
                    ByVal Original_fumbles_rec_tds As Short,  _
                    ByVal Original_fumbles_rec_yds As Short,  _
                    ByVal Original_fumbles_tot As Short,  _
                    ByVal Original_kicking_all_yds As Short,  _
                    ByVal Original_kicking_downed As Short,  _
                    ByVal Original_kicking_fga As Short,  _
                    ByVal Original_kicking_fgb As Short,  _
                    ByVal Original_kicking_fgm As Short,  _
                    ByVal Original_kicking_fgm_yds As Short,  _
                    ByVal Original_kicking_fgmissed As Short,  _
                    ByVal Original_kicking_fgmissed_yds As Short,  _
                    ByVal Original_kicking_i20 As Short,  _
                    ByVal Original_kicking_rec As Short,  _
                    ByVal Original_kicking_rec_tds As Short,  _
                    ByVal Original_kicking_tot As Short,  _
                    ByVal Original_kicking_touchback As Short,  _
                    ByVal Original_kicking_xpa As Short,  _
                    ByVal Original_kicking_xpb As Short,  _
                    ByVal Original_kicking_xpmade As Short,  _
                    ByVal Original_kicking_xpmissed As Short,  _
                    ByVal Original_kicking_yds As Short,  _
                    ByVal Original_kickret_fair As Short,  _
                    ByVal Original_kickret_oob As Short,  _
                    ByVal Original_kickret_ret As Short,  _
                    ByVal Original_kickret_tds As Short,  _
                    ByVal Original_kickret_touchback As Short,  _
                    ByVal Original_kickret_yds As Short,  _
                    ByVal Original_passing_att As Short,  _
                    ByVal Original_passing_cmp As Short,  _
                    ByVal Original_passing_cmp_air_yds As Short,  _
                    ByVal Original_passing_incmp As Short,  _
                    ByVal Original_passing_incmp_air_yds As Short,  _
                    ByVal Original_passing_int As Short,  _
                    ByVal Original_passing_sk As Short,  _
                    ByVal Original_passing_sk_yds As Short,  _
                    ByVal Original_passing_tds As Short,  _
                    ByVal Original_passing_twopta As Short,  _
                    ByVal Original_passing_twoptm As Short,  _
                    ByVal Original_passing_twoptmissed As Short,  _
                    ByVal Original_passing_yds As Short,  _
                    ByVal Original_punting_blk As Short,  _
                    ByVal Original_punting_i20 As Short,  _
                    ByVal Original_punting_tot As Short,  _
                    ByVal Original_punting_touchback As Short,  _
                    ByVal Original_punting_yds As Short,  _
                    ByVal Original_puntret_downed As Short,  _
                    ByVal Original_puntret_fair As Short,  _
                    ByVal Original_puntret_oob As Short,  _
                    ByVal Original_puntret_tds As Short,  _
                    ByVal Original_puntret_tot As Short,  _
                    ByVal Original_puntret_touchback As Short,  _
                    ByVal Original_puntret_yds As Short,  _
                    ByVal Original_receiving_rec As Short,  _
                    ByVal Original_receiving_tar As Short,  _
                    ByVal Original_receiving_tds As Short,  _
                    ByVal Original_receiving_twopta As Short,  _
                    ByVal Original_receiving_twoptm As Short,  _
                    ByVal Original_receiving_twoptmissed As Short,  _
                    ByVal Original_receiving_yac_yds As Short,  _
                    ByVal Original_receiving_yds As Short,  _
                    ByVal Original_rushing_att As Short,  _
                    ByVal Original_rushing_loss As Short,  _
                    ByVal Original_rushing_loss_yds As Short,  _
                    ByVal Original_rushing_tds As Short,  _
                    ByVal Original_rushing_twopta As Short,  _
                    ByVal Original_rushing_twoptm As Short,  _
                    ByVal Original_rushing_twoptmissed As Short,  _
                    ByVal Original_rushing_yds As Short) As Integer
            If (gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(gsis_id,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(drive_id,Short)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(play_id,Short)
            If (player_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("player_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(player_id,String)
            End If
            If (team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("team")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(team,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(defense_ast,Short)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(defense_ffum,Short)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(defense_fgblk,Short)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(defense_frec,Short)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(defense_frec_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(defense_frec_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(defense_int,Short)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(defense_int_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(defense_int_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(defense_misc_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(defense_misc_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(defense_pass_def,Short)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(defense_puntblk,Short)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(defense_qbhit,Short)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(defense_safe,Short)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(defense_sk,Single)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(defense_sk_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(defense_tkl,Short)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(defense_tkl_loss,Short)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(defense_tkl_loss_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(defense_tkl_primary,Short)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(defense_xpblk,Short)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(fumbles_forced,Short)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(fumbles_lost,Short)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(fumbles_notforced,Short)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(fumbles_oob,Short)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(fumbles_rec,Short)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(fumbles_rec_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(fumbles_rec_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(fumbles_tot,Short)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(kicking_all_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(kicking_downed,Short)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(kicking_fga,Short)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(kicking_fgb,Short)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(kicking_fgm,Short)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(kicking_fgm_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(kicking_fgmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(kicking_fgmissed_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(kicking_i20,Short)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(kicking_rec,Short)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(kicking_rec_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(kicking_tot,Short)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(kicking_touchback,Short)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(kicking_xpa,Short)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(kicking_xpb,Short)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(kicking_xpmade,Short)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(kicking_xpmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(kicking_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(kickret_fair,Short)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(kickret_oob,Short)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(kickret_ret,Short)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(kickret_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(kickret_touchback,Short)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(kickret_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(passing_att,Short)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(passing_cmp,Short)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(passing_cmp_air_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(passing_incmp,Short)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(passing_incmp_air_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(passing_int,Short)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(passing_sk,Short)
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(passing_sk_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(passing_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(passing_twopta,Short)
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(passing_twoptm,Short)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(passing_twoptmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(passing_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(punting_blk,Short)
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(punting_i20,Short)
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(punting_tot,Short)
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(punting_touchback,Short)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(punting_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(puntret_downed,Short)
            Me.Adapter.UpdateCommand.Parameters(78).Value = CType(puntret_fair,Short)
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(puntret_oob,Short)
            Me.Adapter.UpdateCommand.Parameters(80).Value = CType(puntret_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(81).Value = CType(puntret_tot,Short)
            Me.Adapter.UpdateCommand.Parameters(82).Value = CType(puntret_touchback,Short)
            Me.Adapter.UpdateCommand.Parameters(83).Value = CType(puntret_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(84).Value = CType(receiving_rec,Short)
            Me.Adapter.UpdateCommand.Parameters(85).Value = CType(receiving_tar,Short)
            Me.Adapter.UpdateCommand.Parameters(86).Value = CType(receiving_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(87).Value = CType(receiving_twopta,Short)
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(receiving_twoptm,Short)
            Me.Adapter.UpdateCommand.Parameters(89).Value = CType(receiving_twoptmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(90).Value = CType(receiving_yac_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(91).Value = CType(receiving_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(92).Value = CType(rushing_att,Short)
            Me.Adapter.UpdateCommand.Parameters(93).Value = CType(rushing_loss,Short)
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(rushing_loss_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(95).Value = CType(rushing_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(96).Value = CType(rushing_twopta,Short)
            Me.Adapter.UpdateCommand.Parameters(97).Value = CType(rushing_twoptm,Short)
            Me.Adapter.UpdateCommand.Parameters(98).Value = CType(rushing_twoptmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(99).Value = CType(rushing_yds,Short)
            If (Original_gsis_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_gsis_id,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_drive_id,Short)
            Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_play_id,Short)
            If (Original_player_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_player_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_player_id,String)
            End If
            If (Original_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_team,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_defense_ast,Short)
            Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_defense_ffum,Short)
            Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_defense_fgblk,Short)
            Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_defense_frec,Short)
            Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_defense_frec_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_defense_frec_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_defense_int,Short)
            Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_defense_int_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_defense_int_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_defense_misc_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_defense_misc_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_defense_pass_def,Short)
            Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_defense_puntblk,Short)
            Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_defense_qbhit,Short)
            Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_defense_safe,Short)
            Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_defense_sk,Single)
            Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_defense_sk_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_defense_tkl,Short)
            Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_defense_tkl_loss,Short)
            Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_defense_tkl_loss_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_defense_tkl_primary,Short)
            Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_defense_xpblk,Short)
            Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_fumbles_forced,Short)
            Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_fumbles_lost,Short)
            Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_fumbles_notforced,Short)
            Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_fumbles_oob,Short)
            Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_fumbles_rec,Short)
            Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_fumbles_rec_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_fumbles_rec_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_fumbles_tot,Short)
            Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_kicking_all_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_kicking_downed,Short)
            Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_kicking_fga,Short)
            Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_kicking_fgb,Short)
            Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_kicking_fgm,Short)
            Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_kicking_fgm_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_kicking_fgmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_kicking_fgmissed_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_kicking_i20,Short)
            Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_kicking_rec,Short)
            Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_kicking_rec_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_kicking_tot,Short)
            Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_kicking_touchback,Short)
            Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_kicking_xpa,Short)
            Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_kicking_xpb,Short)
            Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_kicking_xpmade,Short)
            Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_kicking_xpmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_kicking_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_kickret_fair,Short)
            Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_kickret_oob,Short)
            Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_kickret_ret,Short)
            Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_kickret_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_kickret_touchback,Short)
            Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_kickret_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_passing_att,Short)
            Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_passing_cmp,Short)
            Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_passing_cmp_air_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_passing_incmp,Short)
            Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_passing_incmp_air_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_passing_int,Short)
            Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_passing_sk,Short)
            Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_passing_sk_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_passing_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_passing_twopta,Short)
            Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_passing_twoptm,Short)
            Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_passing_twoptmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_passing_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_punting_blk,Short)
            Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_punting_i20,Short)
            Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_punting_tot,Short)
            Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_punting_touchback,Short)
            Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_punting_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(177).Value = CType(Original_puntret_downed,Short)
            Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_puntret_fair,Short)
            Me.Adapter.UpdateCommand.Parameters(179).Value = CType(Original_puntret_oob,Short)
            Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_puntret_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_puntret_tot,Short)
            Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_puntret_touchback,Short)
            Me.Adapter.UpdateCommand.Parameters(183).Value = CType(Original_puntret_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_receiving_rec,Short)
            Me.Adapter.UpdateCommand.Parameters(185).Value = CType(Original_receiving_tar,Short)
            Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_receiving_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(187).Value = CType(Original_receiving_twopta,Short)
            Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_receiving_twoptm,Short)
            Me.Adapter.UpdateCommand.Parameters(189).Value = CType(Original_receiving_twoptmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_receiving_yac_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(191).Value = CType(Original_receiving_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_rushing_att,Short)
            Me.Adapter.UpdateCommand.Parameters(193).Value = CType(Original_rushing_loss,Short)
            Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_rushing_loss_yds,Short)
            Me.Adapter.UpdateCommand.Parameters(195).Value = CType(Original_rushing_tds,Short)
            Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_rushing_twopta,Short)
            Me.Adapter.UpdateCommand.Parameters(197).Value = CType(Original_rushing_twoptm,Short)
            Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_rushing_twoptmissed,Short)
            Me.Adapter.UpdateCommand.Parameters(199).Value = CType(Original_rushing_yds,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal team As String,  _
                    ByVal defense_ast As Short,  _
                    ByVal defense_ffum As Short,  _
                    ByVal defense_fgblk As Short,  _
                    ByVal defense_frec As Short,  _
                    ByVal defense_frec_tds As Short,  _
                    ByVal defense_frec_yds As Short,  _
                    ByVal defense_int As Short,  _
                    ByVal defense_int_tds As Short,  _
                    ByVal defense_int_yds As Short,  _
                    ByVal defense_misc_tds As Short,  _
                    ByVal defense_misc_yds As Short,  _
                    ByVal defense_pass_def As Short,  _
                    ByVal defense_puntblk As Short,  _
                    ByVal defense_qbhit As Short,  _
                    ByVal defense_safe As Short,  _
                    ByVal defense_sk As Single,  _
                    ByVal defense_sk_yds As Short,  _
                    ByVal defense_tkl As Short,  _
                    ByVal defense_tkl_loss As Short,  _
                    ByVal defense_tkl_loss_yds As Short,  _
                    ByVal defense_tkl_primary As Short,  _
                    ByVal defense_xpblk As Short,  _
                    ByVal fumbles_forced As Short,  _
                    ByVal fumbles_lost As Short,  _
                    ByVal fumbles_notforced As Short,  _
                    ByVal fumbles_oob As Short,  _
                    ByVal fumbles_rec As Short,  _
                    ByVal fumbles_rec_tds As Short,  _
                    ByVal fumbles_rec_yds As Short,  _
                    ByVal fumbles_tot As Short,  _
                    ByVal kicking_all_yds As Short,  _
                    ByVal kicking_downed As Short,  _
                    ByVal kicking_fga As Short,  _
                    ByVal kicking_fgb As Short,  _
                    ByVal kicking_fgm As Short,  _
                    ByVal kicking_fgm_yds As Short,  _
                    ByVal kicking_fgmissed As Short,  _
                    ByVal kicking_fgmissed_yds As Short,  _
                    ByVal kicking_i20 As Short,  _
                    ByVal kicking_rec As Short,  _
                    ByVal kicking_rec_tds As Short,  _
                    ByVal kicking_tot As Short,  _
                    ByVal kicking_touchback As Short,  _
                    ByVal kicking_xpa As Short,  _
                    ByVal kicking_xpb As Short,  _
                    ByVal kicking_xpmade As Short,  _
                    ByVal kicking_xpmissed As Short,  _
                    ByVal kicking_yds As Short,  _
                    ByVal kickret_fair As Short,  _
                    ByVal kickret_oob As Short,  _
                    ByVal kickret_ret As Short,  _
                    ByVal kickret_tds As Short,  _
                    ByVal kickret_touchback As Short,  _
                    ByVal kickret_yds As Short,  _
                    ByVal passing_att As Short,  _
                    ByVal passing_cmp As Short,  _
                    ByVal passing_cmp_air_yds As Short,  _
                    ByVal passing_incmp As Short,  _
                    ByVal passing_incmp_air_yds As Short,  _
                    ByVal passing_int As Short,  _
                    ByVal passing_sk As Short,  _
                    ByVal passing_sk_yds As Short,  _
                    ByVal passing_tds As Short,  _
                    ByVal passing_twopta As Short,  _
                    ByVal passing_twoptm As Short,  _
                    ByVal passing_twoptmissed As Short,  _
                    ByVal passing_yds As Short,  _
                    ByVal punting_blk As Short,  _
                    ByVal punting_i20 As Short,  _
                    ByVal punting_tot As Short,  _
                    ByVal punting_touchback As Short,  _
                    ByVal punting_yds As Short,  _
                    ByVal puntret_downed As Short,  _
                    ByVal puntret_fair As Short,  _
                    ByVal puntret_oob As Short,  _
                    ByVal puntret_tds As Short,  _
                    ByVal puntret_tot As Short,  _
                    ByVal puntret_touchback As Short,  _
                    ByVal puntret_yds As Short,  _
                    ByVal receiving_rec As Short,  _
                    ByVal receiving_tar As Short,  _
                    ByVal receiving_tds As Short,  _
                    ByVal receiving_twopta As Short,  _
                    ByVal receiving_twoptm As Short,  _
                    ByVal receiving_twoptmissed As Short,  _
                    ByVal receiving_yac_yds As Short,  _
                    ByVal receiving_yds As Short,  _
                    ByVal rushing_att As Short,  _
                    ByVal rushing_loss As Short,  _
                    ByVal rushing_loss_yds As Short,  _
                    ByVal rushing_tds As Short,  _
                    ByVal rushing_twopta As Short,  _
                    ByVal rushing_twoptm As Short,  _
                    ByVal rushing_twoptmissed As Short,  _
                    ByVal rushing_yds As Short,  _
                    ByVal Original_gsis_id As String,  _
                    ByVal Original_drive_id As Short,  _
                    ByVal Original_play_id As Short,  _
                    ByVal Original_player_id As String,  _
                    ByVal Original_team As String,  _
                    ByVal Original_defense_ast As Short,  _
                    ByVal Original_defense_ffum As Short,  _
                    ByVal Original_defense_fgblk As Short,  _
                    ByVal Original_defense_frec As Short,  _
                    ByVal Original_defense_frec_tds As Short,  _
                    ByVal Original_defense_frec_yds As Short,  _
                    ByVal Original_defense_int As Short,  _
                    ByVal Original_defense_int_tds As Short,  _
                    ByVal Original_defense_int_yds As Short,  _
                    ByVal Original_defense_misc_tds As Short,  _
                    ByVal Original_defense_misc_yds As Short,  _
                    ByVal Original_defense_pass_def As Short,  _
                    ByVal Original_defense_puntblk As Short,  _
                    ByVal Original_defense_qbhit As Short,  _
                    ByVal Original_defense_safe As Short,  _
                    ByVal Original_defense_sk As Single,  _
                    ByVal Original_defense_sk_yds As Short,  _
                    ByVal Original_defense_tkl As Short,  _
                    ByVal Original_defense_tkl_loss As Short,  _
                    ByVal Original_defense_tkl_loss_yds As Short,  _
                    ByVal Original_defense_tkl_primary As Short,  _
                    ByVal Original_defense_xpblk As Short,  _
                    ByVal Original_fumbles_forced As Short,  _
                    ByVal Original_fumbles_lost As Short,  _
                    ByVal Original_fumbles_notforced As Short,  _
                    ByVal Original_fumbles_oob As Short,  _
                    ByVal Original_fumbles_rec As Short,  _
                    ByVal Original_fumbles_rec_tds As Short,  _
                    ByVal Original_fumbles_rec_yds As Short,  _
                    ByVal Original_fumbles_tot As Short,  _
                    ByVal Original_kicking_all_yds As Short,  _
                    ByVal Original_kicking_downed As Short,  _
                    ByVal Original_kicking_fga As Short,  _
                    ByVal Original_kicking_fgb As Short,  _
                    ByVal Original_kicking_fgm As Short,  _
                    ByVal Original_kicking_fgm_yds As Short,  _
                    ByVal Original_kicking_fgmissed As Short,  _
                    ByVal Original_kicking_fgmissed_yds As Short,  _
                    ByVal Original_kicking_i20 As Short,  _
                    ByVal Original_kicking_rec As Short,  _
                    ByVal Original_kicking_rec_tds As Short,  _
                    ByVal Original_kicking_tot As Short,  _
                    ByVal Original_kicking_touchback As Short,  _
                    ByVal Original_kicking_xpa As Short,  _
                    ByVal Original_kicking_xpb As Short,  _
                    ByVal Original_kicking_xpmade As Short,  _
                    ByVal Original_kicking_xpmissed As Short,  _
                    ByVal Original_kicking_yds As Short,  _
                    ByVal Original_kickret_fair As Short,  _
                    ByVal Original_kickret_oob As Short,  _
                    ByVal Original_kickret_ret As Short,  _
                    ByVal Original_kickret_tds As Short,  _
                    ByVal Original_kickret_touchback As Short,  _
                    ByVal Original_kickret_yds As Short,  _
                    ByVal Original_passing_att As Short,  _
                    ByVal Original_passing_cmp As Short,  _
                    ByVal Original_passing_cmp_air_yds As Short,  _
                    ByVal Original_passing_incmp As Short,  _
                    ByVal Original_passing_incmp_air_yds As Short,  _
                    ByVal Original_passing_int As Short,  _
                    ByVal Original_passing_sk As Short,  _
                    ByVal Original_passing_sk_yds As Short,  _
                    ByVal Original_passing_tds As Short,  _
                    ByVal Original_passing_twopta As Short,  _
                    ByVal Original_passing_twoptm As Short,  _
                    ByVal Original_passing_twoptmissed As Short,  _
                    ByVal Original_passing_yds As Short,  _
                    ByVal Original_punting_blk As Short,  _
                    ByVal Original_punting_i20 As Short,  _
                    ByVal Original_punting_tot As Short,  _
                    ByVal Original_punting_touchback As Short,  _
                    ByVal Original_punting_yds As Short,  _
                    ByVal Original_puntret_downed As Short,  _
                    ByVal Original_puntret_fair As Short,  _
                    ByVal Original_puntret_oob As Short,  _
                    ByVal Original_puntret_tds As Short,  _
                    ByVal Original_puntret_tot As Short,  _
                    ByVal Original_puntret_touchback As Short,  _
                    ByVal Original_puntret_yds As Short,  _
                    ByVal Original_receiving_rec As Short,  _
                    ByVal Original_receiving_tar As Short,  _
                    ByVal Original_receiving_tds As Short,  _
                    ByVal Original_receiving_twopta As Short,  _
                    ByVal Original_receiving_twoptm As Short,  _
                    ByVal Original_receiving_twoptmissed As Short,  _
                    ByVal Original_receiving_yac_yds As Short,  _
                    ByVal Original_receiving_yds As Short,  _
                    ByVal Original_rushing_att As Short,  _
                    ByVal Original_rushing_loss As Short,  _
                    ByVal Original_rushing_loss_yds As Short,  _
                    ByVal Original_rushing_tds As Short,  _
                    ByVal Original_rushing_twopta As Short,  _
                    ByVal Original_rushing_twoptm As Short,  _
                    ByVal Original_rushing_twoptmissed As Short,  _
                    ByVal Original_rushing_yds As Short) As Integer
            Return Me.Update(Original_gsis_id, Original_drive_id, Original_play_id, Original_player_id, team, defense_ast, defense_ffum, defense_fgblk, defense_frec, defense_frec_tds, defense_frec_yds, defense_int, defense_int_tds, defense_int_yds, defense_misc_tds, defense_misc_yds, defense_pass_def, defense_puntblk, defense_qbhit, defense_safe, defense_sk, defense_sk_yds, defense_tkl, defense_tkl_loss, defense_tkl_loss_yds, defense_tkl_primary, defense_xpblk, fumbles_forced, fumbles_lost, fumbles_notforced, fumbles_oob, fumbles_rec, fumbles_rec_tds, fumbles_rec_yds, fumbles_tot, kicking_all_yds, kicking_downed, kicking_fga, kicking_fgb, kicking_fgm, kicking_fgm_yds, kicking_fgmissed, kicking_fgmissed_yds, kicking_i20, kicking_rec, kicking_rec_tds, kicking_tot, kicking_touchback, kicking_xpa, kicking_xpb, kicking_xpmade, kicking_xpmissed, kicking_yds, kickret_fair, kickret_oob, kickret_ret, kickret_tds, kickret_touchback, kickret_yds, passing_att, passing_cmp, passing_cmp_air_yds, passing_incmp, passing_incmp_air_yds, passing_int, passing_sk, passing_sk_yds, passing_tds, passing_twopta, passing_twoptm, passing_twoptmissed, passing_yds, punting_blk, punting_i20, punting_tot, punting_touchback, punting_yds, puntret_downed, puntret_fair, puntret_oob, puntret_tds, puntret_tot, puntret_touchback, puntret_yds, receiving_rec, receiving_tar, receiving_tds, receiving_twopta, receiving_twoptm, receiving_twoptmissed, receiving_yac_yds, receiving_yds, rushing_att, rushing_loss, rushing_loss_yds, rushing_tds, rushing_twopta, rushing_twoptm, rushing_twoptmissed, rushing_yds, Original_gsis_id, Original_drive_id, Original_play_id, Original_player_id, Original_team, Original_defense_ast, Original_defense_ffum, Original_defense_fgblk, Original_defense_frec, Original_defense_frec_tds, Original_defense_frec_yds, Original_defense_int, Original_defense_int_tds, Original_defense_int_yds, Original_defense_misc_tds, Original_defense_misc_yds, Original_defense_pass_def, Original_defense_puntblk, Original_defense_qbhit, Original_defense_safe, Original_defense_sk, Original_defense_sk_yds, Original_defense_tkl, Original_defense_tkl_loss, Original_defense_tkl_loss_yds, Original_defense_tkl_primary, Original_defense_xpblk, Original_fumbles_forced, Original_fumbles_lost, Original_fumbles_notforced, Original_fumbles_oob, Original_fumbles_rec, Original_fumbles_rec_tds, Original_fumbles_rec_yds, Original_fumbles_tot, Original_kicking_all_yds, Original_kicking_downed, Original_kicking_fga, Original_kicking_fgb, Original_kicking_fgm, Original_kicking_fgm_yds, Original_kicking_fgmissed, Original_kicking_fgmissed_yds, Original_kicking_i20, Original_kicking_rec, Original_kicking_rec_tds, Original_kicking_tot, Original_kicking_touchback, Original_kicking_xpa, Original_kicking_xpb, Original_kicking_xpmade, Original_kicking_xpmissed, Original_kicking_yds, Original_kickret_fair, Original_kickret_oob, Original_kickret_ret, Original_kickret_tds, Original_kickret_touchback, Original_kickret_yds, Original_passing_att, Original_passing_cmp, Original_passing_cmp_air_yds, Original_passing_incmp, Original_passing_incmp_air_yds, Original_passing_int, Original_passing_sk, Original_passing_sk_yds, Original_passing_tds, Original_passing_twopta, Original_passing_twoptm, Original_passing_twoptmissed, Original_passing_yds, Original_punting_blk, Original_punting_i20, Original_punting_tot, Original_punting_touchback, Original_punting_yds, Original_puntret_downed, Original_puntret_fair, Original_puntret_oob, Original_puntret_tds, Original_puntret_tot, Original_puntret_touchback, Original_puntret_yds, Original_receiving_rec, Original_receiving_tar, Original_receiving_tds, Original_receiving_twopta, Original_receiving_twoptm, Original_receiving_twoptmissed, Original_receiving_yac_yds, Original_receiving_yds, Original_rushing_att, Original_rushing_loss, Original_rushing_loss_yds, Original_rushing_tds, Original_rushing_twopta, Original_rushing_twoptm, Original_rushing_twoptmissed, Original_rushing_yds)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class playerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "player"
            tableMapping.ColumnMappings.Add("player_id", "player_id")
            tableMapping.ColumnMappings.Add("gsis_name", "gsis_name")
            tableMapping.ColumnMappings.Add("full_name", "full_name")
            tableMapping.ColumnMappings.Add("first_name", "first_name")
            tableMapping.ColumnMappings.Add("last_name", "last_name")
            tableMapping.ColumnMappings.Add("team", "team")
            tableMapping.ColumnMappings.Add("position", "position")
            tableMapping.ColumnMappings.Add("profile_id", "profile_id")
            tableMapping.ColumnMappings.Add("profile_url", "profile_url")
            tableMapping.ColumnMappings.Add("uniform_number", "uniform_number")
            tableMapping.ColumnMappings.Add("birthdate", "birthdate")
            tableMapping.ColumnMappings.Add("college", "college")
            tableMapping.ColumnMappings.Add("height", "height")
            tableMapping.ColumnMappings.Add("weight", "weight")
            tableMapping.ColumnMappings.Add("years_pro", "years_pro")
            tableMapping.ColumnMappings.Add("status", "status")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""nfldb"".""public"".""player"" WHERE ((""player_id"" = ?) AND ((? = 1 AND ""g"& _ 
                "sis_name"" IS NULL) OR (""gsis_name"" = ?)) AND ((? = 1 AND ""full_name"" IS NULL) OR"& _ 
                " (""full_name"" = ?)) AND ((? = 1 AND ""first_name"" IS NULL) OR (""first_name"" = ?))"& _ 
                " AND ((? = 1 AND ""last_name"" IS NULL) OR (""last_name"" = ?)) AND (""team"" = ?) AND"& _ 
                " (""position"" = ?) AND ((? = 1 AND ""profile_id"" IS NULL) OR (""profile_id"" = ?)) A"& _ 
                "ND ((? = 1 AND ""profile_url"" IS NULL) OR (""profile_url"" = ?)) AND ((? = 1 AND ""u"& _ 
                "niform_number"" IS NULL) OR (""uniform_number"" = ?)) AND ((? = 1 AND ""birthdate"" I"& _ 
                "S NULL) OR (""birthdate"" = ?)) AND ((? = 1 AND ""college"" IS NULL) OR (""college"" ="& _ 
                " ?)) AND ((? = 1 AND ""height"" IS NULL) OR (""height"" = ?)) AND ((? = 1 AND ""weigh"& _ 
                "t"" IS NULL) OR (""weight"" = ?)) AND ((? = 1 AND ""years_pro"" IS NULL) OR (""years_p"& _ 
                "ro"" = ?)) AND (""status"" = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_player_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "player_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_gsis_name", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_full_name", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "full_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_full_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "full_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_first_name", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_first_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_last_name", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "last_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_last_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "last_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_position", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "position", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_profile_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_id", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_profile_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_profile_url", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_url", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_profile_url", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_url", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_uniform_number", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uniform_number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_uniform_number", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uniform_number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_birthdate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "birthdate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_birthdate", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "birthdate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_college", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "college", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_college", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "college", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_height", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "height", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_height", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "height", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_weight", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "weight", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_weight", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "weight", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_years_pro", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "years_pro", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_years_pro", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "years_pro", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_status", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""nfldb"".""public"".""player"" (""player_id"", ""gsis_name"", ""full_name"", ""fi"& _ 
                "rst_name"", ""last_name"", ""team"", ""position"", ""profile_id"", ""profile_url"", ""unifor"& _ 
                "m_number"", ""birthdate"", ""college"", ""height"", ""weight"", ""years_pro"", ""status"") VA"& _ 
                "LUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("player_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "player_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("full_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "full_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("first_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("last_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "last_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("position", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "position", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("profile_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("profile_url", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_url", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("uniform_number", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uniform_number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("birthdate", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "birthdate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("college", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "college", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("height", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "height", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("weight", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "weight", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("years_pro", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "years_pro", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("status", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""nfldb"".""public"".""player"" SET ""player_id"" = ?, ""gsis_name"" = ?, ""full_name"& _ 
                """ = ?, ""first_name"" = ?, ""last_name"" = ?, ""team"" = ?, ""position"" = ?, ""profile_i"& _ 
                "d"" = ?, ""profile_url"" = ?, ""uniform_number"" = ?, ""birthdate"" = ?, ""college"" = ?,"& _ 
                " ""height"" = ?, ""weight"" = ?, ""years_pro"" = ?, ""status"" = ? WHERE ((""player_id"" ="& _ 
                " ?) AND ((? = 1 AND ""gsis_name"" IS NULL) OR (""gsis_name"" = ?)) AND ((? = 1 AND """& _ 
                "full_name"" IS NULL) OR (""full_name"" = ?)) AND ((? = 1 AND ""first_name"" IS NULL) "& _ 
                "OR (""first_name"" = ?)) AND ((? = 1 AND ""last_name"" IS NULL) OR (""last_name"" = ?)"& _ 
                ") AND (""team"" = ?) AND (""position"" = ?) AND ((? = 1 AND ""profile_id"" IS NULL) OR"& _ 
                " (""profile_id"" = ?)) AND ((? = 1 AND ""profile_url"" IS NULL) OR (""profile_url"" = "& _ 
                "?)) AND ((? = 1 AND ""uniform_number"" IS NULL) OR (""uniform_number"" = ?)) AND ((?"& _ 
                " = 1 AND ""birthdate"" IS NULL) OR (""birthdate"" = ?)) AND ((? = 1 AND ""college"" IS"& _ 
                " NULL) OR (""college"" = ?)) AND ((? = 1 AND ""height"" IS NULL) OR (""height"" = ?)) "& _ 
                "AND ((? = 1 AND ""weight"" IS NULL) OR (""weight"" = ?)) AND ((? = 1 AND ""years_pro"""& _ 
                " IS NULL) OR (""years_pro"" = ?)) AND (""status"" = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("player_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "player_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("gsis_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("full_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "full_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("first_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("last_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "last_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("position", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "position", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("profile_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("profile_url", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_url", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("uniform_number", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uniform_number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("birthdate", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "birthdate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("college", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "college", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("height", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "height", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("weight", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "weight", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("years_pro", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "years_pro", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("status", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_player_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "player_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_gsis_name", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_gsis_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "gsis_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_full_name", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "full_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_full_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "full_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_first_name", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_first_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "first_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_last_name", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "last_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_last_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "last_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_team", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_position", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "position", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_profile_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_id", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_profile_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_profile_url", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_url", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_profile_url", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "profile_url", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_uniform_number", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uniform_number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_uniform_number", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uniform_number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_birthdate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "birthdate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_birthdate", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "birthdate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_college", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "college", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_college", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "college", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_height", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "height", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_height", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "height", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_weight", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "weight", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_weight", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "weight", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_years_pro", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "years_pro", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_years_pro", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "years_pro", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_status", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "status", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.DailyPlayers_v2.My.MySettings.Default.conStringNFLdb
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""player_id"", ""gsis_name"", ""full_name"", ""first_name"", ""last_name"", ""team"", "& _ 
                """position"", ""profile_id"", ""profile_url"", ""uniform_number"", ""birthdate"", ""college"& _ 
                """, ""height"", ""weight"", ""years_pro"", ""status"" FROM ""public"".""player"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsNFLdb.playerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsNFLdb.playerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsNFLdb.playerDataTable = New dsNFLdb.playerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsNFLdb.playerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsNFLdb) As Integer
            Return Me.Adapter.Update(dataSet, "player")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_player_id As String,  _
                    ByVal Original_gsis_name As String,  _
                    ByVal Original_full_name As String,  _
                    ByVal Original_first_name As String,  _
                    ByVal Original_last_name As String,  _
                    ByVal Original_team As String,  _
                    ByVal Original_position As String,  _
                    ByVal Original_profile_id As Integer,  _
                    ByVal Original_profile_url As String,  _
                    ByVal Original_uniform_number As Short,  _
                    ByVal Original_birthdate As String,  _
                    ByVal Original_college As String,  _
                    ByVal Original_height As Short,  _
                    ByVal Original_weight As Short,  _
                    ByVal Original_years_pro As Short,  _
                    ByVal Original_status As String) As Integer
            If (Original_player_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_player_id")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_player_id,String)
            End If
            If (Original_gsis_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_name")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_gsis_name,String)
            End If
            If (Original_full_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_full_name")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_full_name,String)
            End If
            If (Original_first_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_first_name")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_first_name,String)
            End If
            If (Original_last_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_last_name")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_last_name,String)
            End If
            If (Original_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_team")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_team,String)
            End If
            If (Original_position Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_position")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_position,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_profile_id,Integer)
            If (Original_profile_url Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_profile_url")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_profile_url,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_uniform_number,Short)
            If (Original_birthdate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_birthdate")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_birthdate,String)
            End If
            If (Original_college Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_college")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_college,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_height,Short)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_weight,Short)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_years_pro,Short)
            If (Original_status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_status")
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_status,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal player_id As String,  _
                    ByVal gsis_name As String,  _
                    ByVal full_name As String,  _
                    ByVal first_name As String,  _
                    ByVal last_name As String,  _
                    ByVal team As String,  _
                    ByVal position As String,  _
                    ByVal profile_id As Integer,  _
                    ByVal profile_url As String,  _
                    ByVal uniform_number As Short,  _
                    ByVal birthdate As String,  _
                    ByVal college As String,  _
                    ByVal height As Short,  _
                    ByVal weight As Short,  _
                    ByVal years_pro As Short,  _
                    ByVal status As String) As Integer
            If (player_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("player_id")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(player_id,String)
            End If
            If (gsis_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_name")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(gsis_name,String)
            End If
            If (full_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("full_name")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(full_name,String)
            End If
            If (first_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("first_name")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(first_name,String)
            End If
            If (last_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("last_name")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(last_name,String)
            End If
            If (team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("team")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(team,String)
            End If
            If (position Is Nothing) Then
                Throw New Global.System.ArgumentNullException("position")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(position,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(profile_id,Integer)
            If (profile_url Is Nothing) Then
                Throw New Global.System.ArgumentNullException("profile_url")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(profile_url,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(uniform_number,Short)
            If (birthdate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("birthdate")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(birthdate,String)
            End If
            If (college Is Nothing) Then
                Throw New Global.System.ArgumentNullException("college")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(college,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(height,Short)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(weight,Short)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(years_pro,Short)
            If (status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("status")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(status,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal player_id As String,  _
                    ByVal gsis_name As String,  _
                    ByVal full_name As String,  _
                    ByVal first_name As String,  _
                    ByVal last_name As String,  _
                    ByVal team As String,  _
                    ByVal position As String,  _
                    ByVal profile_id As Integer,  _
                    ByVal profile_url As String,  _
                    ByVal uniform_number As Short,  _
                    ByVal birthdate As String,  _
                    ByVal college As String,  _
                    ByVal height As Short,  _
                    ByVal weight As Short,  _
                    ByVal years_pro As Short,  _
                    ByVal status As String,  _
                    ByVal Original_player_id As String,  _
                    ByVal Original_gsis_name As String,  _
                    ByVal Original_full_name As String,  _
                    ByVal Original_first_name As String,  _
                    ByVal Original_last_name As String,  _
                    ByVal Original_team As String,  _
                    ByVal Original_position As String,  _
                    ByVal Original_profile_id As Integer,  _
                    ByVal Original_profile_url As String,  _
                    ByVal Original_uniform_number As Short,  _
                    ByVal Original_birthdate As String,  _
                    ByVal Original_college As String,  _
                    ByVal Original_height As Short,  _
                    ByVal Original_weight As Short,  _
                    ByVal Original_years_pro As Short,  _
                    ByVal Original_status As String) As Integer
            If (player_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("player_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(player_id,String)
            End If
            If (gsis_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gsis_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(gsis_name,String)
            End If
            If (full_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("full_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(full_name,String)
            End If
            If (first_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("first_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(first_name,String)
            End If
            If (last_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("last_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(last_name,String)
            End If
            If (team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("team")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(team,String)
            End If
            If (position Is Nothing) Then
                Throw New Global.System.ArgumentNullException("position")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(position,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(profile_id,Integer)
            If (profile_url Is Nothing) Then
                Throw New Global.System.ArgumentNullException("profile_url")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(profile_url,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(uniform_number,Short)
            If (birthdate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("birthdate")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(birthdate,String)
            End If
            If (college Is Nothing) Then
                Throw New Global.System.ArgumentNullException("college")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(college,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(height,Short)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(weight,Short)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(years_pro,Short)
            If (status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("status")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(status,String)
            End If
            If (Original_player_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_player_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_player_id,String)
            End If
            If (Original_gsis_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gsis_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_gsis_name,String)
            End If
            If (Original_full_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_full_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_full_name,String)
            End If
            If (Original_first_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_first_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_first_name,String)
            End If
            If (Original_last_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_last_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_last_name,String)
            End If
            If (Original_team Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_team")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_team,String)
            End If
            If (Original_position Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_position")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_position,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_profile_id,Integer)
            If (Original_profile_url Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_profile_url")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_profile_url,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_uniform_number,Short)
            If (Original_birthdate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_birthdate")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_birthdate,String)
            End If
            If (Original_college Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_college")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_college,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_height,Short)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_weight,Short)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_years_pro,Short)
            If (Original_status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_status")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_status,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal gsis_name As String,  _
                    ByVal full_name As String,  _
                    ByVal first_name As String,  _
                    ByVal last_name As String,  _
                    ByVal team As String,  _
                    ByVal position As String,  _
                    ByVal profile_id As Integer,  _
                    ByVal profile_url As String,  _
                    ByVal uniform_number As Short,  _
                    ByVal birthdate As String,  _
                    ByVal college As String,  _
                    ByVal height As Short,  _
                    ByVal weight As Short,  _
                    ByVal years_pro As Short,  _
                    ByVal status As String,  _
                    ByVal Original_player_id As String,  _
                    ByVal Original_gsis_name As String,  _
                    ByVal Original_full_name As String,  _
                    ByVal Original_first_name As String,  _
                    ByVal Original_last_name As String,  _
                    ByVal Original_team As String,  _
                    ByVal Original_position As String,  _
                    ByVal Original_profile_id As Integer,  _
                    ByVal Original_profile_url As String,  _
                    ByVal Original_uniform_number As Short,  _
                    ByVal Original_birthdate As String,  _
                    ByVal Original_college As String,  _
                    ByVal Original_height As Short,  _
                    ByVal Original_weight As Short,  _
                    ByVal Original_years_pro As Short,  _
                    ByVal Original_status As String) As Integer
            Return Me.Update(Original_player_id, gsis_name, full_name, first_name, last_name, team, position, profile_id, profile_url, uniform_number, birthdate, college, height, weight, years_pro, status, Original_player_id, Original_gsis_name, Original_full_name, Original_first_name, Original_last_name, Original_team, Original_position, Original_profile_id, Original_profile_url, Original_uniform_number, Original_birthdate, Original_college, Original_height, Original_weight, Original_years_pro, Original_status)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class teamTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "team"
            tableMapping.ColumnMappings.Add("team_id", "team_id")
            tableMapping.ColumnMappings.Add("city", "city")
            tableMapping.ColumnMappings.Add("name", "name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""nfldb"".""public"".""team"" WHERE ((""team_id"" = ?) AND (""city"" = ?) AND ("& _ 
                """name"" = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_team_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_city", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "city", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""nfldb"".""public"".""team"" (""team_id"", ""city"", ""name"") VALUES (?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("team_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("city", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "city", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""nfldb"".""public"".""team"" SET ""team_id"" = ?, ""city"" = ?, ""name"" = ? WHERE (("& _ 
                """team_id"" = ?) AND (""city"" = ?) AND (""name"" = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("team_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("city", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "city", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_team_id", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "team_id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_city", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "city", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.DailyPlayers_v2.My.MySettings.Default.conStringNFLdb
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""team_id"", ""city"", ""name"" FROM ""public"".""team"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsNFLdb.teamDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsNFLdb.teamDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsNFLdb.teamDataTable = New dsNFLdb.teamDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsNFLdb.teamDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsNFLdb) As Integer
            Return Me.Adapter.Update(dataSet, "team")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_team_id As String, ByVal Original_city As String, ByVal Original_name As String) As Integer
            If (Original_team_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_team_id")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_team_id,String)
            End If
            If (Original_city Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_city")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_city,String)
            End If
            If (Original_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_name")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal team_id As String, ByVal city As String, ByVal name As String) As Integer
            If (team_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("team_id")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(team_id,String)
            End If
            If (city Is Nothing) Then
                Throw New Global.System.ArgumentNullException("city")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(city,String)
            End If
            If (name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("name")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal team_id As String, ByVal city As String, ByVal name As String, ByVal Original_team_id As String, ByVal Original_city As String, ByVal Original_name As String) As Integer
            If (team_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("team_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(team_id,String)
            End If
            If (city Is Nothing) Then
                Throw New Global.System.ArgumentNullException("city")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(city,String)
            End If
            If (name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("name")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(name,String)
            End If
            If (Original_team_id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_team_id")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_team_id,String)
            End If
            If (Original_city Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_city")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_city,String)
            End If
            If (Original_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal city As String, ByVal name As String, ByVal Original_team_id As String, ByVal Original_city As String, ByVal Original_name As String) As Integer
            Return Me.Update(Original_team_id, city, name, Original_team_id, Original_city, Original_name)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vwPlayersActiveTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vwPlayersActive"
            tableMapping.ColumnMappings.Add("player_id", "player_id")
            tableMapping.ColumnMappings.Add("full_name", "full_name")
            tableMapping.ColumnMappings.Add("first_name", "first_name")
            tableMapping.ColumnMappings.Add("last_name", "last_name")
            tableMapping.ColumnMappings.Add("team", "team")
            tableMapping.ColumnMappings.Add("position", "position")
            tableMapping.ColumnMappings.Add("uniform_number", "uniform_number")
            tableMapping.ColumnMappings.Add("college", "college")
            tableMapping.ColumnMappings.Add("height", "height")
            tableMapping.ColumnMappings.Add("weight", "weight")
            tableMapping.ColumnMappings.Add("years_pro", "years_pro")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.DailyPlayers_v2.My.MySettings.Default.conStringNFLdb
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""player_id"", ""full_name"", ""first_name"", ""last_name"", ""team"", ""position"", """& _ 
                "uniform_number"", ""college"", ""height"", ""weight"", ""years_pro"" FROM ""public"".""vwPla"& _ 
                "yersActive"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsNFLdb.vwPlayersActiveDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsNFLdb.vwPlayersActiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsNFLdb.vwPlayersActiveDataTable = New dsNFLdb.vwPlayersActiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _driveTableAdapter As driveTableAdapter
        
        Private _gameTableAdapter As gameTableAdapter
        
        Private _metaTableAdapter As metaTableAdapter
        
        Private _playTableAdapter As playTableAdapter
        
        Private _play_playerTableAdapter As play_playerTableAdapter
        
        Private _playerTableAdapter As playerTableAdapter
        
        Private _teamTableAdapter As teamTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property driveTableAdapter() As driveTableAdapter
            Get
                Return Me._driveTableAdapter
            End Get
            Set
                Me._driveTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property gameTableAdapter() As gameTableAdapter
            Get
                Return Me._gameTableAdapter
            End Get
            Set
                Me._gameTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property metaTableAdapter() As metaTableAdapter
            Get
                Return Me._metaTableAdapter
            End Get
            Set
                Me._metaTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property playTableAdapter() As playTableAdapter
            Get
                Return Me._playTableAdapter
            End Get
            Set
                Me._playTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property play_playerTableAdapter() As play_playerTableAdapter
            Get
                Return Me._play_playerTableAdapter
            End Get
            Set
                Me._play_playerTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property playerTableAdapter() As playerTableAdapter
            Get
                Return Me._playerTableAdapter
            End Get
            Set
                Me._playerTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property teamTableAdapter() As teamTableAdapter
            Get
                Return Me._teamTableAdapter
            End Get
            Set
                Me._teamTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._driveTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._driveTableAdapter.Connection) Is Nothing)) Then
                    Return Me._driveTableAdapter.Connection
                End If
                If ((Not (Me._gameTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gameTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gameTableAdapter.Connection
                End If
                If ((Not (Me._metaTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._metaTableAdapter.Connection) Is Nothing)) Then
                    Return Me._metaTableAdapter.Connection
                End If
                If ((Not (Me._playTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._playTableAdapter.Connection) Is Nothing)) Then
                    Return Me._playTableAdapter.Connection
                End If
                If ((Not (Me._play_playerTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._play_playerTableAdapter.Connection) Is Nothing)) Then
                    Return Me._play_playerTableAdapter.Connection
                End If
                If ((Not (Me._playerTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._playerTableAdapter.Connection) Is Nothing)) Then
                    Return Me._playerTableAdapter.Connection
                End If
                If ((Not (Me._teamTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._teamTableAdapter.Connection) Is Nothing)) Then
                    Return Me._teamTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._driveTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gameTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._metaTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._playTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._play_playerTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._playerTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._teamTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsNFLdb, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._driveTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.drive.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._driveTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gameTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.game.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gameTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._metaTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.meta.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._metaTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._playTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.play.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._playTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._play_playerTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.play_player.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._play_playerTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._playerTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.player.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._playerTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._teamTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.team.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._teamTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsNFLdb, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._driveTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.drive.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._driveTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gameTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.game.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gameTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._metaTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.meta.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._metaTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._playTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.play.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._playTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._play_playerTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.play_player.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._play_playerTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._playerTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.player.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._playerTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._teamTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.team.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._teamTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsNFLdb, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._teamTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.team.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._teamTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._playerTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.player.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._playerTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._play_playerTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.play_player.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._play_playerTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._playTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.play.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._playTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._metaTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.meta.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._metaTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gameTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.game.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gameTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._driveTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.drive.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._driveTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsNFLdb) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._driveTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._driveTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gameTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gameTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._metaTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._metaTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._playTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._playTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._play_playerTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._play_playerTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._playerTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._playerTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._teamTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._teamTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._driveTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._driveTableAdapter, Me._driveTableAdapter.Connection)
                    Me._driveTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._driveTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._driveTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._driveTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._driveTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gameTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gameTableAdapter, Me._gameTableAdapter.Connection)
                    Me._gameTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._gameTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._gameTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gameTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gameTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._metaTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._metaTableAdapter, Me._metaTableAdapter.Connection)
                    Me._metaTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._metaTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._metaTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._metaTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._metaTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._playTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._playTableAdapter, Me._playTableAdapter.Connection)
                    Me._playTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._playTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._playTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._playTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._playTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._play_playerTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._play_playerTableAdapter, Me._play_playerTableAdapter.Connection)
                    Me._play_playerTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._play_playerTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._play_playerTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._play_playerTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._play_playerTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._playerTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._playerTableAdapter, Me._playerTableAdapter.Connection)
                    Me._playerTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._playerTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._playerTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._playerTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._playerTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._teamTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._teamTableAdapter, Me._teamTableAdapter.Connection)
                    Me._teamTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._teamTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._teamTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._teamTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._teamTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._driveTableAdapter) Is Nothing) Then
                    Me._driveTableAdapter.Connection = CType(revertConnections(Me._driveTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._driveTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gameTableAdapter) Is Nothing) Then
                    Me._gameTableAdapter.Connection = CType(revertConnections(Me._gameTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._gameTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._metaTableAdapter) Is Nothing) Then
                    Me._metaTableAdapter.Connection = CType(revertConnections(Me._metaTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._metaTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._playTableAdapter) Is Nothing) Then
                    Me._playTableAdapter.Connection = CType(revertConnections(Me._playTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._playTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._play_playerTableAdapter) Is Nothing) Then
                    Me._play_playerTableAdapter.Connection = CType(revertConnections(Me._play_playerTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._play_playerTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._playerTableAdapter) Is Nothing) Then
                    Me._playerTableAdapter.Connection = CType(revertConnections(Me._playerTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._playerTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._teamTableAdapter) Is Nothing) Then
                    Me._teamTableAdapter.Connection = CType(revertConnections(Me._teamTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._teamTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
